var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.426,1,1.772]],["body/components/AppComponent.html",[0,2.401,1,3.151,2,3.496,3,0.311,4,0.311,5,4.329,6,3.018,7,3.018,8,0.204,9,1.94,10,3.427,11,3.018,12,4.704,13,3.024,14,3.024,15,2.326,16,3.889,17,5.215,18,0.606,19,0.025,20,0.705,21,3.018,22,0.311,23,0.758,24,3.018,25,3.889,26,3.496,27,3.018,28,4.545,29,3.018,30,1.462,31,3.018,32,1.94,33,3.018,34,1.94,35,3.018,36,3.018,37,3.018,38,0.015,39,0.019,40,0.015]],["title/modules/AppModule.html",[41,1.772,42,2.298]],["body/modules/AppModule.html",[0,1.733,1,3.364,3,0.224,4,0.224,8,0.147,9,1.395,13,1.395,14,1.395,18,0.953,19,0.026,20,0.507,22,0.224,23,0.545,32,1.998,34,1.998,38,0.01,39,0.015,40,0.01,42,4.4,43,2.21,44,1.859,45,2.464,46,2.464,47,2.464,48,2.464,49,3.43,50,3.569,51,3.569,52,2.333,53,1.63,54,1.505,55,2.91,56,3.107,57,2.333,58,4.167,59,2.154,60,4.167,61,2.464,62,2.17,63,2.17,64,1.776,65,1.776,66,1.63,67,2.17,68,2.91,69,2.91,70,2.91,71,2.91,72,2.91,73,2.91,74,2.91,75,3.562,76,2.91,77,2.91,78,2.91,79,2.464,80,2.17,81,2.91,82,2.17,83,2.91,84,2.91,85,2.91,86,2.91,87,2.91,88,2.464,89,2.91,90,1.395,91,2.91,92,2.91,93,2.91,94,1.395,95,2.464,96,1.951,97,2.464,98,4.167,99,2.17,100,1.211,101,2.91,102,2.464,103,1.951]],["title/interfaces/BuildConfig.html",[104,0.399,105,1.919]],["body/interfaces/BuildConfig.html",[3,0.251,4,0.251,8,0.164,18,0.488,19,0.025,20,0.567,22,0.347,38,0.012,39,0.016,40,0.012,44,2.011,94,3.039,97,4.728,99,4.164,100,1.355,102,4.728,104,0.379,105,2.525,106,1.039,107,0.61,108,1.561,109,1.561,110,1.683,111,1.561,112,0.745,113,2.751,114,4.509,115,4.509,116,3.818,117,3.127,118,2.491,119,4.509,120,3.818,121,3.818,122,2.887,123,3.818,124,3.818,125,3.818,126,4.509,127,4.509,128,4.509,129,2.751,130,4.509,131,4.509,132,4.509,133,2.751,134,3.363,135,0.414,136,1.038,137,3.086,138,5.584,139,2.751,140,3.818,141,4.509,142,3.818,143,4.509,144,4.509,145,4.509,146,4.509,147,1.987,148,1.683,149,2.428,150,2.757]],["title/modules/BuildConfigModule.html",[41,1.772,49,2.091]],["body/modules/BuildConfigModule.html",[3,0.295,4,0.295,8,0.193,18,0.894,19,0.026,20,0.668,22,0.295,23,0.718,30,1.075,38,0.014,39,0.018,40,0.014,43,1.595,49,3.429,57,2.146,59,2.906,94,2.695,103,2.569,107,0.943,108,2.414,109,2.414,112,0.487,122,1.982,151,3.833,152,1.49,153,3.754,154,3.754,155,3.246,156,3.342,157,1.075,158,3.833,159,3.754,160,4.262,161,2.579,162,2.603,163,1.306,164,0.825,165,1.49,166,4.192,167,5.034,168,2.859,169,3.071,170,3.833,171,2.819,172,1.49,173,2.859]],["title/injectables/BuildConfigService.html",[169,2.091,174,1.025]],["body/injectables/BuildConfigService.html",[3,0.223,4,0.223,8,0.245,15,1.855,18,0.841,19,0.025,20,0.506,22,0.223,23,0.544,30,0.814,38,0.01,39,0.015,40,0.01,94,2.952,95,3.522,100,1.73,104,0.484,105,2.972,107,0.91,108,2.33,109,2.33,111,1.392,112,0.369,135,0.369,136,0.958,140,3.522,156,2.972,157,1.166,161,2.706,163,0.989,164,0.625,168,2.165,169,2.538,171,1.626,172,2.063,174,1.588,175,1.501,176,2.458,177,4.16,178,4.16,179,4.16,180,2.965,181,4.16,182,2.693,183,4.16,184,1.855,185,2.903,186,5.308,187,2.903,188,2.329,189,1.626,190,4.16,191,4.16,192,4.16,193,4.16,194,4.16,195,3.522,196,4.16,197,2.538,198,4.16,199,4.16,200,4.16,201,1.994,202,4.16,203,2.15,204,4.16,205,2.903,206,4.16,207,4.16,208,4.16,209,3.522,210,2.165,211,2.903,212,1.392,213,1.771,214,1.771,215,3.102,216,2.538,217,2.903]],["title/interfaces/BuildConfigWithPathConfig.html",[104,0.399,218,1.919]],["body/interfaces/BuildConfigWithPathConfig.html",[3,0.233,4,0.233,8,0.307,18,0.641,19,0.026,20,0.527,22,0.456,38,0.011,39,0.015,40,0.011,75,4.243,90,2.053,94,2.841,96,4.243,100,1.258,104,0.498,105,2.398,106,0.965,107,0.567,108,1.45,109,1.45,110,1.564,112,0.632,113,1.845,118,1.91,122,1.564,135,0.384,136,0.986,137,2.592,147,2.613,148,2.57,156,2.784,157,0.848,161,2.801,162,2.214,164,0.922,171,2.398,203,2.214,213,1.845,214,1.845,218,3.027,219,4.209,220,3.707,221,3.707,222,3.626,223,4.209,224,2.613,225,2.255,226,2.255,227,2.255,228,2.255,229,2.255,230,2.784,231,2.561,232,3.193,233,2.398,234,3.193,235,1.45]],["title/interfaces/BuildConfigWithoutPathConfig.html",[104,0.399,230,1.919]],["body/interfaces/BuildConfigWithoutPathConfig.html",[3,0.24,4,0.24,8,0.291,18,0.656,19,0.026,20,0.544,22,0.461,38,0.011,39,0.016,40,0.011,75,3.676,90,1.498,94,2.871,96,4.274,100,1.3,104,0.51,105,3.071,106,0.997,107,0.585,108,1.498,109,1.498,110,1.615,112,0.557,113,1.906,118,1.954,122,1.615,135,0.397,136,1.009,137,2.101,147,2.673,148,2.616,156,2.833,157,1.228,161,2.813,162,2.265,164,0.943,171,2.453,203,2.265,213,1.906,214,1.906,218,2.833,219,2.645,220,3.773,221,3.267,222,2.645,223,4.284,224,1.906,225,2.33,226,2.33,227,2.33,228,2.33,229,2.33,230,3.071,231,3.71,232,3.267,233,2.453,234,3.267,235,1.498]],["title/guards/CanDeactivateGuard.html",[236,2.091,237,2.556]],["body/guards/CanDeactivateGuard.html",[0,2.789,3,0.244,4,0.244,8,0.16,15,1.415,18,0.827,19,0.026,20,0.553,22,0.244,23,0.594,30,1.242,38,0.011,39,0.016,40,0.011,64,1.935,107,0.956,112,0.403,135,0.403,152,1.721,157,1.242,163,1.508,164,0.953,165,2.146,172,2.146,174,1.325,197,3.112,212,1.521,215,3.804,233,2.48,235,1.521,237,3.302,238,3.172,239,3.804,240,4.32,241,2.686,242,5.228,243,5.102,244,3.172,245,4.033,246,3.172,247,4.428,248,4.428,249,3.75,250,3.302,251,4.428,252,3.302,253,3.42,254,3.302,255,2.29,256,3.172,257,3.172,258,3.172,259,1.935,260,2.366,261,2.48,262,4.428,263,1.776,264,3.172,265,3.172]],["title/classes/CommonLogger.html",[23,0.642,266,2.298]],["body/classes/CommonLogger.html",[3,0.198,4,0.198,8,0.13,18,0.386,19,0.025,22,0.198,23,0.482,30,1.501,38,0.009,39,0.014,40,0.009,111,1.828,112,0.712,117,2.135,118,1.701,120,3.228,123,3.228,124,3.228,129,2.326,135,0.327,136,0.878,152,1.95,157,1.706,161,2.478,163,1.824,164,1.249,165,2.081,172,2.081,182,2.176,184,1.149,201,1.828,203,2.346,235,2.567,261,3.335,266,2.555,267,2.181,268,3.993,269,3.993,270,2.181,271,3.812,272,3.812,273,2.176,274,2.555,275,2.555,276,3.812,277,4.533,278,2.181,279,2.998,280,2.576,281,3.589,282,2.576,283,3.228,284,4.901,285,2.576,286,3.741,287,3.634,288,3.228,289,2.576,290,3.228,291,2.576,292,3.228,293,2.576,294,2.576,295,2.576,296,2.555,297,2.843,298,1.921,299,2.576,300,2.576,301,2.181,302,2.576,303,2.576,304,2.576,305,2.576,306,2.576,307,2.576,308,2.576,309,2.576]],["title/interfaces/CommonLoggerConfig.html",[104,0.399,279,1.919]],["body/interfaces/CommonLoggerConfig.html",[3,0.275,4,0.275,8,0.18,19,0.026,22,0.275,38,0.013,39,0.017,40,0.013,104,0.415,106,1.138,110,1.844,111,1.71,112,0.689,129,2.176,135,0.453,136,1.105,137,1.71,142,4.063,152,1.866,164,1.303,201,1.71,203,2.481,224,2.928,235,2.301,261,1.997,263,3.248,268,2.391,269,2.391,273,2.902,274,2.391,275,2.391,277,5.279,279,2.687,284,2.66,286,3.579,287,2.176,296,3.217,297,4.326,298,4.326,310,5.801,311,3.579,312,4.799,313,4.063,314,4.799,315,4.799,316,4.063,317,2.481,318,4.063,319,3.567,320,2.66]],["title/modules/CommonNgrxModule.html",[41,1.772,321,2.556]],["body/modules/CommonNgrxModule.html",[3,0.379,4,0.379,8,0.248,18,0.882,19,0.025,20,0.857,22,0.379,23,0.921,38,0.018,39,0.021,40,0.018,43,2.047,57,2.754,59,3.044,107,0.921,321,4.391,322,4.919,323,4.919,324,3.946,325,2.754]],["title/components/DashboardComponent.html",[0,1.426,32,1.643]],["body/components/DashboardComponent.html",[0,1.993,1,1.463,2,2.737,3,0.218,4,0.218,5,3.884,6,2.111,7,2.111,8,0.143,9,1.357,11,2.111,12,4.148,13,2.864,14,2.667,16,3.045,18,0.424,19,0.025,20,0.493,21,3.573,22,0.218,23,0.53,24,2.111,25,3.045,26,2.737,27,2.111,28,3.912,29,2.111,30,1.145,31,2.111,32,2.515,33,2.111,34,1.357,35,2.111,36,2.111,37,2.111,38,0.01,39,0.015,40,0.01,90,1.958,326,2.396,327,3.458,328,3.458,329,4.084,330,4.791,331,4.791,332,5.795,333,4.791,334,4.791,335,4.791,336,5.795,337,4.791,338,5.795,339,4.791,340,4.057,341,4.084,342,2.396,343,5.245,344,4.441,345,6.115,346,4.084,347,4.084,348,4.084,349,5.245,350,4.084,351,4.084,352,4.084,353,4.084,354,4.084,355,4.084,356,4.084,357,3.045,358,5.245,359,5.245,360,5.245,361,2.737,362,3.458,363,3.045,364,4.084,365,4.084,366,4.084,367,4.084]],["title/modules/DashboardModule.html",[41,1.772,50,2.091]],["body/modules/DashboardModule.html",[3,0.301,4,0.301,8,0.197,9,1.873,18,0.976,19,0.025,20,0.681,22,0.301,23,0.732,32,3.275,38,0.014,39,0.018,40,0.014,43,1.625,44,2.273,50,3.975,52,2.854,53,2.187,54,2.019,56,3.801,57,2.187,59,2.635,139,2.383,324,3.416,325,2.187,368,3.307,369,3.307,370,3.307,371,3.906,372,4.315,373,5.097,374,2.913,375,2.913,376,4.315,377,3.307,378,5.097,379,3.906,380,4.315,381,3.307,382,3.906,383,3.307]],["title/interfaces/DateDocument.html",[104,0.399,384,2.556]],["body/interfaces/DateDocument.html",[3,0.339,4,0.339,8,0.222,19,0.024,22,0.339,38,0.016,39,0.02,40,0.016,99,5.049,104,0.513,106,1.407,111,2.114,112,0.7,113,2.69,135,0.56,136,1.448,164,1.185,216,2.69,235,2.114,320,3.288,384,4.106,385,3.733,386,2.69,387,2.469,388,4.409,389,6.473,390,6.473,391,4.409,392,4.409,393,4.409,394,4.409,395,5.506]],["title/interfaces/DeactivatableComponent.html",[104,0.399,245,2.298]],["body/interfaces/DeactivatableComponent.html",[0,2.142,3,0.305,4,0.305,8,0.2,18,0.594,19,0.025,22,0.305,38,0.014,39,0.019,40,0.014,104,0.462,106,1.267,107,0.965,111,1.903,135,0.504,152,2.002,157,1.113,165,1.543,172,2.002,189,2.884,197,3.142,212,1.903,236,3.142,239,3.84,242,5.439,245,3.452,249,5.122,250,4.511,253,3.832,254,3.84,255,2.662,267,4.36,396,4.36,397,3.361,398,3.84,399,4.36,400,5.15,401,6.05,402,3.969,403,5.15]],["title/interfaces/DocumentWithId.html",[104,0.399,404,2.091]],["body/interfaces/DocumentWithId.html",[3,0.315,4,0.315,8,0.206,19,0.026,22,0.471,38,0.015,39,0.019,40,0.015,104,0.476,106,1.305,112,0.667,135,0.519,136,1.208,137,2.516,148,2.713,216,2.494,233,2.289,235,1.96,261,2.289,361,4.241,386,2.494,387,2.289,404,3.732,405,2.74,406,4.241,407,5.357,408,4.1,409,4.087,410,4.087,411,3.461,412,3.048,413,3.048,414,3.461,415,3.461]],["title/interfaces/EntityTypeParams.html",[104,0.399,416,2.556]],["body/interfaces/EntityTypeParams.html",[3,0.277,4,0.277,8,0.182,13,1.725,14,1.725,18,0.539,19,0.025,22,0.277,38,0.013,39,0.017,40,0.013,65,2.195,104,0.419,106,1.148,107,0.674,111,1.725,112,0.858,118,2.153,134,2.683,135,0.457,136,1.111,137,2.314,311,3.6,317,2.496,320,3.6,361,4.28,387,3.26,404,2.195,406,3.651,416,3.6,417,3.047,418,2.412,419,4.827,420,4.087,421,4.827,422,4.827,423,4.827,424,4.827,425,4.827,426,4.827,427,6.489,428,5.566,429,4.827]],["title/injectables/GlobalErrorHandler.html",[174,1.025,430,2.556]],["body/injectables/GlobalErrorHandler.html",[3,0.321,4,0.321,8,0.21,18,0.796,19,0.025,20,0.727,22,0.321,23,0.781,30,1.491,38,0.015,39,0.019,40,0.015,107,1.096,112,0.53,135,0.53,152,2.067,157,1.491,163,1.811,164,1.144,165,1.621,174,1.59,175,2.156,184,1.86,201,2.806,260,3.11,261,2.335,273,2.549,287,2.544,430,3.965,431,4.955,432,3.531,433,5.316,434,4.17,435,3.451,436,4.17,437,5.316,438,4.17,439,4.17,440,5.316,441,2.795,442,4.17]],["title/interfaces/HttpActionTypeParams.html",[104,0.399,443,2.556]],["body/interfaces/HttpActionTypeParams.html",[3,0.321,4,0.321,8,0.21,19,0.024,22,0.321,38,0.015,39,0.019,40,0.015,88,3.531,104,0.485,106,1.331,107,0.781,111,1.999,112,0.827,118,1.86,135,0.53,136,1.224,250,3.11,398,3.11,418,2.795,443,3.965,444,3.11,445,3.564,446,4.17,447,4.17,448,4.501,449,4.17,450,4.17,451,3.11,452,4.17,453,4.17,454,4.17,455,5.218,456,6.163,457,3.76,458,5.218,459,5.852,460,5.852,461,5.852,462,5.852]],["title/interceptors/HttpLoadingInterceptor.html",[463,2.902,464,2.556]],["body/interceptors/HttpLoadingInterceptor.html",[3,0.271,4,0.271,8,0.178,15,1.573,18,0.903,19,0.025,20,0.614,22,0.271,23,0.661,30,1.335,38,0.013,39,0.017,40,0.013,107,1.01,112,0.605,135,0.448,152,1.851,157,1.335,163,1.622,164,1.025,165,1.371,168,2.63,172,1.371,174,1.425,184,1.573,188,1.975,201,1.691,212,1.691,253,3.614,259,2.151,260,2.63,441,2.364,457,2.905,464,3.551,465,3.526,466,3.614,467,3.614,468,2.986,469,5.392,470,3.526,471,3.87,472,3.526,473,2.905,474,3.526,475,5.774,476,5.774,477,5.774,478,3.526,479,3.526,480,4.762,481,4.762,482,4.762,483,3.526,484,3.526,485,3.526,486,3.192,487,2.986,488,3.526,489,4.762,490,3.526]],["title/interfaces/HttpLoadingState.html",[104,0.399,473,2.091]],["body/interfaces/HttpLoadingState.html",[3,0.33,4,0.33,8,0.216,19,0.025,22,0.33,38,0.015,39,0.019,40,0.015,104,0.499,106,1.368,107,0.803,112,0.688,135,0.545,136,1.246,164,1.34,188,3.029,255,3.389,457,3.3,466,2.873,467,2.873,473,3.3,491,3.196,492,4.173,493,4.513,494,4.58,495,4.034,496,4.58,497,4.034,498,3.3]],["title/injectables/HttpLoadingStateService.html",[174,1.025,471,2.298]],["body/injectables/HttpLoadingStateService.html",[3,0.244,4,0.244,8,0.16,15,1.415,18,0.764,19,0.026,20,0.553,22,0.244,23,0.594,38,0.011,39,0.016,40,0.011,107,1.088,133,2.702,135,0.403,136,1.02,157,1.548,174,1.325,175,1.64,180,3.112,182,3.068,184,2.276,188,2.857,189,2.857,216,3.904,255,2.855,259,1.935,457,2.702,466,3.893,467,3.893,471,2.968,473,1.935,492,3.701,493,4.289,498,2.702,499,2.366,500,4.32,501,4.32,502,4.32,503,3.172,504,3.75,505,4.428,506,3.75,507,3.172,508,4.675,509,4.675,510,2.686,511,3.172,512,2.126,513,2.366,514,2.686,515,2.686]],["title/components/MainComponent.html",[0,1.426,34,1.643]],["body/components/MainComponent.html",[0,2.211,1,1.772,2,3.132,3,0.264,4,0.264,5,4.302,6,2.557,7,2.557,8,0.173,9,2.548,11,2.557,12,4.453,13,3.077,14,3.077,16,3.484,18,0.7,19,0.025,20,0.597,21,2.557,22,0.264,23,0.642,24,2.557,25,3.484,26,3.132,27,2.557,28,4.256,29,2.557,30,1.49,31,2.557,32,1.644,33,2.557,34,2.736,35,3.963,36,2.557,37,2.557,38,0.012,39,0.017,40,0.012,65,2.092,66,1.92,112,0.594,135,0.436,136,1.076,157,1.31,163,1.168,164,0.738,169,3.643,182,2.24,184,1.529,301,2.903,327,3.956,328,3.956,342,2.903,516,2.903,517,4.672,518,5.707,519,3.428,520,3.428,521,3.428,522,4.672,523,4.672]],["title/modules/MainModule.html",[41,1.772,51,2.091]],["body/modules/MainModule.html",[3,0.284,4,0.284,8,0.186,9,1.772,18,0.999,19,0.025,20,0.644,22,0.284,23,0.692,34,3.248,38,0.013,39,0.018,40,0.013,43,1.537,44,2.192,51,3.921,52,2.751,53,2.069,54,1.911,56,3.664,57,2.069,59,2.54,63,3.664,64,2.255,139,2.255,324,3.294,325,2.069,372,4.161,374,2.756,375,2.756,376,4.161,377,3.129,380,4.161,381,3.129,383,3.129,512,2.477,524,3.129,525,3.129,526,3.129,527,3.695,528,4.914,529,4.914,530,3.695,531,4.914,532,3.695,533,4.914,534,3.695]],["title/modules/NgLoggerModule.html",[41,1.772,535,2.298]],["body/modules/NgLoggerModule.html",[3,0.273,4,0.273,8,0.179,13,1.7,14,1.7,18,0.905,19,0.025,20,0.618,22,0.273,23,0.664,30,0.994,38,0.013,39,0.017,40,0.013,43,1.475,44,2.132,52,2.677,53,1.986,54,1.834,57,1.986,59,2.796,65,2.164,66,3.24,103,3.625,107,0.895,112,0.451,122,1.834,152,1.379,153,3.565,154,3.565,155,3.003,157,0.994,159,3.565,160,4.048,161,2.408,162,2.472,163,1.208,164,0.763,165,1.379,166,4.033,172,1.379,173,2.645,273,2.593,279,3.24,324,3.204,325,1.986,435,3.562,535,4.264,536,3.003,537,3.003,538,2.916,539,3.547,540,3.547,541,3.547,542,3.204]],["title/injectables/NgLoggerService.html",[174,1.025,435,1.919]],["body/injectables/NgLoggerService.html",[3,0.24,4,0.24,8,0.158,13,1.498,14,1.498,15,1.394,18,0.758,19,0.025,20,0.544,22,0.24,23,0.585,30,1.619,38,0.011,39,0.016,40,0.011,65,1.906,66,1.749,107,0.821,112,0.761,129,2.673,133,2.673,135,0.397,136,1.009,152,1.703,157,1.679,161,2.403,163,1.967,164,1.323,165,2.132,174,1.311,175,1.615,182,2.426,184,1.954,201,2.101,210,2.33,259,1.906,266,4.206,273,1.498,274,2.937,275,2.937,278,2.645,281,3.676,283,2.645,284,4.679,286,4.09,287,3.346,288,2.645,290,2.645,292,2.645,435,2.453,538,2.673,542,2.094,543,2.645,544,4.89,545,3.124,546,5.776,547,3.124,548,3.124,549,3.124,550,3.124,551,3.124,552,3.124,553,3.124,554,3.124,555,3.124]],["title/interfaces/RouteLoadingState.html",[104,0.399,556,2.298]],["body/interfaces/RouteLoadingState.html",[3,0.332,4,0.332,8,0.218,19,0.025,22,0.332,38,0.016,39,0.02,40,0.016,104,0.502,106,1.378,107,0.809,112,0.691,135,0.549,136,1.251,164,1.343,255,3.395,491,3.219,492,4.183,493,4.519,494,4.601,495,4.052,496,4.601,497,4.052,498,3.315,556,3.642,557,3.219,558,3.219,559,4.601]],["title/injectables/RouteLoadingStateService.html",[174,1.025,560,2.556]],["body/injectables/RouteLoadingStateService.html",[3,0.215,4,0.215,8,0.141,15,1.248,18,0.829,19,0.026,20,0.488,22,0.215,23,0.524,30,0.785,38,0.01,39,0.015,40,0.01,64,1.707,82,2.087,107,1.037,112,0.356,133,2.471,135,0.356,136,0.933,157,1.463,163,0.953,164,0.602,172,2.028,174,1.212,175,1.447,180,2.904,182,2.979,184,1.248,189,2.922,197,1.707,212,1.342,216,3.79,255,2.698,259,1.707,313,2.369,399,2.369,413,3.55,441,1.876,486,3.191,487,4.031,492,3.497,493,4.229,498,2.471,499,2.087,500,4.031,501,4.031,502,4.031,504,3.429,506,3.429,508,4.418,509,4.418,510,3.429,512,1.876,513,2.087,514,2.369,515,2.369,556,1.876,557,4.129,558,4.129,559,3.429,560,3.02,561,2.798,562,4.305,563,2.798,564,2.798,565,4.05,566,4.05,567,4.05,568,2.798,569,2.369,570,2.798,571,2.798,572,2.798,573,2.798,574,2.369,575,2.798,576,2.798,577,2.798,578,2.798]],["title/interfaces/ScriptLoaderInitScripts.html",[104,0.399,579,2.298]],["body/interfaces/ScriptLoaderInitScripts.html",[3,0.353,4,0.353,8,0.232,18,0.845,19,0.025,20,0.8,22,0.434,38,0.016,39,0.02,40,0.016,100,1.909,104,0.534,106,1.465,112,0.583,117,2.57,135,0.583,136,1.3,147,2.8,148,2.373,317,2.373,579,3.784,580,2.57,581,2.57,582,2.8,583,2.8,584,3.423,585,4.275,586,3.572,587,2.8,588,3.886]],["title/modules/ScriptLoaderModule.html",[41,1.772,589,2.298]],["body/modules/ScriptLoaderModule.html",[3,0.237,4,0.237,8,0.156,18,0.893,19,0.026,20,0.538,22,0.237,23,0.578,30,0.865,38,0.011,39,0.016,40,0.011,43,1.283,44,1.937,52,2.432,53,1.728,54,1.595,59,2.598,90,2.082,100,1.807,103,3.369,112,0.639,117,3.219,122,2.598,152,1.199,153,3.238,154,2.301,157,0.865,159,3.238,162,1.595,163,1.051,164,0.664,165,1.199,166,3.748,172,1.199,173,3.748,182,1.479,212,1.479,224,1.882,252,2.301,281,2.068,317,2.598,441,2.068,451,2.301,486,2.068,580,2.432,581,2.432,582,3.066,583,2.649,585,3.853,586,2.432,587,2.649,589,4.107,590,2.612,591,2.612,592,3.879,593,3.085,594,4.343,595,3.238,596,3.085,597,3.085,598,3.369,599,2.612,600,4.343,601,3.085,602,3.085,603,3.085,604,3.085,605,2.612,606,4.343,607,3.085,608,3.085]],["title/injectables/ScriptLoaderService.html",[174,1.025,592,2.091]],["body/injectables/ScriptLoaderService.html",[3,0.169,4,0.169,8,0.111,18,0.79,19,0.026,20,0.383,22,0.169,23,0.412,26,1.474,30,1.156,38,0.008,39,0.012,40,0.008,80,1.64,90,2.531,100,1.715,112,0.635,117,3.079,135,0.279,136,0.779,148,2.729,152,1.315,157,1.298,163,1.404,164,1.076,165,1.315,172,1.943,174,1.012,175,1.137,180,1.342,182,2.531,184,1.509,189,1.231,210,1.64,212,1.054,215,3.453,233,1.895,254,3.936,263,1.895,296,3.35,317,2.132,325,1.231,387,2.955,579,3.103,580,2.799,581,2.799,582,2.064,583,1.342,585,3.984,586,2.799,587,1.342,592,2.064,595,2.523,598,1.474,599,3.92,605,2.865,609,1.862,610,4.63,611,4.805,612,3.383,613,2.199,614,4.123,615,4.63,616,2.199,617,3.383,618,2.199,619,4.63,620,2.865,621,3.383,622,2.199,623,3.383,624,3.383,625,2.865,626,4.998,627,4.123,628,2.199,629,2.199,630,2.199,631,2.199,632,2.199,633,3.383,634,2.199,635,2.199,636,2.199,637,3.92,638,3.491,639,3.491,640,3.383,641,2.199,642,2.199,643,2.199,644,2.199,645,1.862,646,1.862,647,4.123,648,2.199,649,2.199,650,2.199,651,2.199,652,2.199,653,2.199,654,2.199,655,2.199,656,2.199,657,2.199,658,2.199]],["title/interfaces/ScriptParams.html",[104,0.399,586,1.919]],["body/interfaces/ScriptParams.html",[3,0.304,4,0.304,8,0.2,19,0.025,22,0.304,38,0.014,39,0.018,40,0.014,90,2.897,104,0.46,106,1.263,112,0.768,117,3.383,135,0.503,136,1.183,137,2.737,164,1.382,209,5.116,255,2.951,263,3.709,287,3.135,418,2.652,580,2.215,581,2.215,586,2.878,611,5.116,637,5.116,638,5.116,639,5.116,659,5.139]],["title/coverage.html",[660,3.955]],["body/coverage.html",[0,1.556,1,0.977,8,0.095,9,2.375,10,1.6,15,0.843,19,0.025,23,0.354,32,0.906,34,0.906,38,0.007,39,0.011,40,0.007,66,1.682,67,2.24,100,0.786,104,0.698,105,1.058,107,1.231,108,2.584,109,2.584,110,2.871,112,0.475,149,1.409,161,1.935,169,1.153,171,1.058,174,1.482,176,1.6,201,0.906,213,1.153,214,1.153,218,1.058,230,1.058,236,1.153,237,1.409,239,2.24,240,1.6,241,1.6,245,1.266,263,1.058,266,1.266,268,2.014,269,2.014,270,1.6,273,1.44,279,1.058,326,1.6,340,1.6,384,1.409,385,1.6,386,2.6,396,1.6,397,1.6,404,1.153,405,2.507,408,1.266,412,1.409,416,1.409,417,1.6,418,2.507,430,1.409,431,1.6,432,1.6,435,1.058,443,1.409,444,2.24,445,2.507,463,1.6,464,1.409,466,2.507,467,2.507,468,1.6,471,1.266,473,1.153,491,2.24,499,2.24,516,1.6,538,1.833,542,1.266,543,1.6,556,1.266,557,2.24,558,2.24,560,1.409,562,1.409,579,1.266,580,2.604,581,2.604,582,2.282,583,1.833,584,2.24,586,1.058,587,1.153,592,1.153,598,1.266,609,1.6,660,1.6,661,1.409,662,1.889,663,1.889,664,1.6,665,5.516,666,1.6,667,6.269,668,5.81,669,3.74,670,1.6,671,1.6,672,1.889,673,4.262,674,4.262,675,6.366,676,6.15,677,3.004,678,3.004,679,3.004,680,1.889,681,3.74,682,3.74,683,1.889,684,1.6,685,1.6,686,1.6,687,1.6,688,1.6,689,1.6,690,1.6,691,1.6,692,1.6,693,1.6,694,1.409,695,2.544,696,1.6,697,1.6,698,3.004,699,1.889,700,1.889,701,1.889,702,1.6,703,1.6,704,1.6,705,1.6,706,1.6,707,1.6,708,1.6,709,1.6,710,1.6,711,1.6,712,1.6,713,1.6,714,1.6,715,3.167,716,1.6,717,2.544,718,1.6,719,1.6,720,1.6,721,1.6,722,1.6,723,1.6,724,1.6,725,1.6,726,1.6,727,1.889,728,1.889,729,1.889,730,1.889,731,1.889,732,1.889]],["title/dependencies.html",[44,1.838,733,2.866]],["body/dependencies.html",[19,0.026,20,0.724,38,0.015,39,0.019,40,0.015,44,1.854,61,4.492,62,3.956,64,2.536,212,1.993,325,2.327,374,3.099,375,3.099,512,3.556,513,3.956,734,4.156,735,6.692,736,4.156,737,5.843,738,4.156,739,4.156,740,4.156,741,4.156,742,4.156,743,4.156,744,6.503,745,4.156,746,4.156,747,4.156,748,5.305,749,4.156,750,4.156,751,4.156,752,4.156,753,4.156,754,4.156]],["title/miscellaneous/functions.html",[755,1.605,756,3.489]],["body/miscellaneous/functions.html",[19,0.023,30,1.363,38,0.017,39,0.021,40,0.017,107,0.911,135,0.618,139,2.966,163,1.656,164,1.046,188,2.722,281,3.258,317,2.513,691,4.116,692,4.95,693,4.95,755,2.722,756,4.116,757,4.861,758,4.861,759,4.861,760,4.861,761,4.861,762,4.116,763,4.116,764,4.861,765,4.861,766,4.861,767,4.116,768,4.861]],["title/index.html",[135,0.364,769,2.427,770,2.427]],["body/index.html",[5,3.147,13,2.251,14,2.251,19,0.021,38,0.017,39,0.021,40,0.017,116,3.975,118,2.553,362,4.846,363,3.501,574,3.975,771,4.694,772,4.694,773,4.694,774,4.694,775,5.724,776,4.694,777,3.975,778,4.694,779,4.694,780,4.694,781,3.975,782,4.694,783,5.724,784,3.975,785,4.694,786,4.694,787,4.694,788,4.694,789,4.694,790,4.694,791,4.694,792,4.694,793,4.694,794,4.694,795,3.501,796,3.975]],["title/license.html",[769,2.427,770,2.427,795,2.137]],["body/license.html",[19,0.018,38,0.014,39,0.018,40,0.014,54,2.013,220,2.904,357,3.793,445,2.61,486,2.61,645,3.297,661,2.904,781,3.297,795,2.904,796,3.297,797,5.664,798,3.894,799,3.894,800,3.894,801,5.086,802,3.894,803,3.894,804,3.894,805,3.894,806,3.894,807,3.894,808,5.086,809,6.676,810,3.894,811,3.894,812,5.664,813,3.894,814,5.086,815,3.894,816,3.894,817,3.894,818,3.894,819,3.894,820,3.894,821,3.894,822,3.894,823,3.894,824,5.086,825,3.894,826,3.894,827,3.894,828,3.894,829,3.894,830,3.894,831,3.894,832,5.086,833,5.086,834,3.894,835,3.894,836,3.894,837,3.894,838,3.894,839,3.894,840,3.894,841,3.894,842,3.894,843,3.894,844,3.894,845,3.894,846,3.894,847,3.894,848,3.894,849,3.894,850,3.894,851,3.894,852,3.894,853,3.894,854,3.894,855,3.894,856,3.894,857,3.894,858,3.894,859,3.894]],["title/modules.html",[43,1.943]],["body/modules.html",[19,0.021,38,0.017,39,0.021,40,0.017,42,3.195,43,1.983,49,2.908,50,2.908,51,2.908,62,4.936,321,3.555,344,4.892,535,3.195,589,3.195,860,5.604,861,6.619,862,6.808,863,4.892]],["title/overview.html",[864,3.955]],["body/overview.html",[1,3.333,2,2.507,19,0.025,23,0.701,32,3.091,34,3.091,38,0.013,39,0.018,40,0.013,42,4.519,43,1.556,44,2.209,45,3.167,46,3.167,47,3.167,48,3.167,49,3.388,50,3.856,51,3.856,52,2.774,53,2.094,54,1.934,106,1.194,175,1.934,195,4.194,236,2.282,368,3.167,369,3.167,370,3.167,435,3.11,524,3.167,525,3.167,526,3.167,535,3.963,536,3.167,537,3.167,589,3.963,590,3.167,591,3.167,592,3.388,864,3.167,865,3.74,866,3.74,867,3.74,868,3.74]],["title/miscellaneous/typealiases.html",[755,1.605,869,4.121]],["body/miscellaneous/typealiases.html",[8,0.198,19,0.023,38,0.014,39,0.018,40,0.014,94,2.454,96,2.635,107,1.066,108,1.885,109,1.885,110,3.313,112,0.65,118,2.283,122,2.032,129,2.398,135,0.5,156,2.866,161,2.6,162,2.032,201,1.885,203,2.032,218,2.201,221,2.931,228,2.931,229,2.931,230,2.201,268,2.635,269,2.635,273,2.89,274,2.635,275,2.635,279,2.201,316,4.333,318,3.328,357,3.816,386,3.122,387,2.201,405,2.635,406,2.635,408,3.43,448,3.328,538,2.398,544,4.333,595,2.931,694,2.931,755,2.201,870,3.931,871,3.328,872,3.328,873,4.333,874,3.328,875,5.118,876,3.328,877,3.328,878,4.333,879,3.328,880,3.931,881,3.931,882,3.931,883,3.931,884,3.931,885,3.931,886,3.931]],["title/miscellaneous/variables.html",[755,1.605,887,3.489]],["body/miscellaneous/variables.html",[8,0.059,9,1.268,15,1.405,19,0.026,30,0.562,38,0.004,39,0.007,40,0.004,63,0.866,66,1.481,67,2.9,75,1.344,79,0.983,80,0.866,82,0.866,90,0.557,94,1.268,100,1.618,107,0.781,108,0.961,109,0.961,110,2.278,112,0.494,113,0.709,118,1.734,121,0.983,125,0.983,133,1.223,134,2.9,135,0.148,137,2.37,139,0.709,147,1.614,148,0.6,149,1.495,150,0.983,156,1.123,161,2.252,162,0.6,165,1.382,171,1.481,172,1.922,180,3.633,188,0.65,189,3.45,197,1.223,203,0.6,213,1.223,214,1.223,218,0.65,224,1.223,225,1.495,226,0.866,227,0.866,230,0.65,232,1.495,233,2.334,234,1.495,235,1.51,236,0.709,252,0.866,253,0.778,261,1.123,263,1.763,273,0.961,296,0.778,297,1.973,298,1.973,311,1.973,317,0.6,361,2.383,363,0.866,386,1.614,387,1.123,398,0.866,404,1.614,405,0.778,406,2.794,407,2.24,408,2.383,411,2.24,412,1.495,413,0.866,414,0.983,415,0.983,420,3.01,428,4.584,444,0.866,445,3.629,451,1.495,455,3.292,457,1.223,458,3.292,495,1.495,497,1.495,498,0.709,538,0.709,542,1.773,562,1.495,569,1.698,580,1.123,581,1.123,582,1.921,583,1.614,584,1.495,585,0.778,587,1.223,588,0.983,598,1.773,620,0.983,625,0.983,646,3.292,661,0.866,664,0.983,665,0.983,666,1.698,670,0.983,671,0.983,684,0.983,685,1.698,686,2.24,687,0.983,688,2.24,689,1.698,690,1.698,694,0.866,695,2.666,696,1.698,697,1.698,702,0.983,703,1.698,704,1.698,705,0.983,706,1.698,707,1.698,708,1.698,709,0.983,710,1.698,711,1.698,712,0.983,713,1.698,714,1.698,715,2.24,716,0.983,717,4.054,718,1.698,719,1.698,720,0.983,721,1.698,722,1.698,723,0.983,724,1.698,725,1.698,726,1.698,755,0.65,762,3.292,763,0.983,767,0.983,777,0.983,784,2.666,860,0.983,863,1.698,871,2.666,872,1.698,873,0.983,874,0.983,876,0.983,877,0.983,878,0.983,879,0.983,887,1.698,888,1.161,889,1.161,890,2.646,891,1.161,892,1.161,893,2.005,894,1.161,895,1.161,896,2.005,897,1.161,898,1.161,899,2.005,900,2.005,901,1.161,902,2.005,903,5.081,904,5.504,905,1.161,906,1.161,907,1.161,908,4.405,909,1.161,910,1.161,911,1.161,912,3.554,913,1.161,914,1.161,915,1.161,916,3.554,917,1.161,918,1.161,919,1.161,920,1.161,921,2.005,922,3.149,923,1.161,924,1.161,925,1.161,926,1.161,927,3.149,928,2.005,929,1.161,930,1.161,931,1.161,932,2.005,933,1.161,934,1.161,935,1.161,936,1.161,937,1.161,938,1.161,939,3.149,940,3.149,941,2.005,942,1.161,943,1.161,944,1.161,945,1.161,946,1.161,947,1.161,948,1.161,949,1.161,950,3.554,951,2.646,952,1.161,953,3.554,954,2.005,955,2.646,956,1.161,957,1.161,958,2.005,959,1.161,960,1.161,961,1.161,962,1.161,963,2.005,964,2.005,965,1.161,966,1.161,967,1.161,968,1.161,969,1.161,970,1.161,971,1.161,972,1.161,973,1.161,974,2.005,975,1.161,976,1.161,977,1.161,978,1.161,979,1.161,980,1.161,981,1.161,982,1.161,983,1.161,984,2.005,985,2.005,986,1.161,987,1.161,988,1.161,989,1.161,990,1.161,991,1.161,992,2.005,993,1.161,994,1.161]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":667,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["0.11.4",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":668,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":669,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":195,"title":{},"body":{"injectables/BuildConfigService.html":{},"overview.html":{}}}],["1/1",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":672,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":679,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":682,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":675,"title":{},"body":{"coverage.html":{}}}],["12.0.0",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":868,"title":{},"body":{"overview.html":{}}}],["13.0.0",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["13.0.1",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["13.0.2",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":388,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["2.0.0",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":701,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["2021",{"_index":799,"title":{},"body":{"license.html":{}}}],["28",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":866,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":333,"title":{},"body":{"components/DashboardComponent.html":{}}}],["33",{"_index":678,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4/4",{"_index":677,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["404",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["50",{"_index":340,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["6",{"_index":867,"title":{},"body":{"overview.html":{}}}],["60",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":673,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":865,"title":{},"body":{"overview.html":{}}}],["7.4.0",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":831,"title":{},"body":{"license.html":{}}}],["acc",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acc.add(el",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acc[keyvalue",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors",{"_index":276,"title":{},"body":{"classes/CommonLogger.html":{}}}],["action",{"_index":445,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":784,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["actions.ts",{"_index":875,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["activated",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activatedroute",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actual",{"_index":228,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/typealiases.html":{}}}],["actual_component",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["add",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["again",{"_index":395,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["aliases",{"_index":870,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":626,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["always",{"_index":497,"title":{},"body":{"interfaces/HttpLoadingState.html":{},"interfaces/RouteLoadingState.html":{},"miscellaneous/variables.html":{}}}],["amount",{"_index":423,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["and/or",{"_index":822,"title":{},"body":{"license.html":{}}}],["angular",{"_index":139,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":325,"title":{},"body":{"modules/CommonNgrxModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"injectables/ScriptLoaderService.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":168,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interceptors/HttpLoadingInterceptor.html":{}}}],["angular/compiler",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"modules/CommonNgrxModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":374,"title":{},"body":{"modules/DashboardModule.html":{},"modules/MainModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":377,"title":{},"body":{"modules/DashboardModule.html":{},"modules/MainModule.html":{}}}],["angular/material/card",{"_index":379,"title":{},"body":{"modules/DashboardModule.html":{}}}],["angular/material/chips",{"_index":530,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/icon",{"_index":381,"title":{},"body":{"modules/DashboardModule.html":{},"modules/MainModule.html":{}}}],["angular/material/toolbar",{"_index":532,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/platform",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"guards/CanDeactivateGuard.html":{},"modules/MainModule.html":{},"injectables/RouteLoadingStateService.html":{},"dependencies.html":{}}}],["angularversion",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BuildConfig.html":{}}}],["app",{"_index":362,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["app.component",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{},"coverage.html":{},"overview.html":{}}}],["append",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":42,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approach",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/internal",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["aren't",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arising",{"_index":857,"title":{},"body":{"license.html":{}}}],["around",{"_index":426,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["arr",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":297,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"miscellaneous/variables.html":{}}}],["array.from(arr.reduce((acc",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asset",{"_index":127,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["associated",{"_index":810,"title":{},"body":{"license.html":{}}}],["assumed",{"_index":140,"title":{},"body":{"interfaces/BuildConfig.html":{},"injectables/BuildConfigService.html":{}}}],["assumes",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":611,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["authors",{"_index":848,"title":{},"body":{"license.html":{}}}],["auto",{"_index":338,"title":{},"body":{"components/DashboardComponent.html":{}}}],["automatically",{"_index":252,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"modules/ScriptLoaderModule.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":863,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["away",{"_index":249,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{}}}],["back",{"_index":767,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["backoff.ts",{"_index":692,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["based",{"_index":776,"title":{},"body":{"index.html":{}}}],["before",{"_index":659,"title":{},"body":{"interfaces/ScriptParams.html":{}}}],["behavior",{"_index":229,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/typealiases.html":{}}}],["behaviorsubject",{"_index":627,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["beta.35",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["block",{"_index":335,"title":{},"body":{"components/DashboardComponent.html":{}}}],["boolean",{"_index":255,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptParams.html":{}}}],["bootstrap",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["brad",{"_index":800,"title":{},"body":{"license.html":{}}}],["brand",{"_index":409,"title":{},"body":{"interfaces/DocumentWithId.html":{}}}],["branded",{"_index":884,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["browse",{"_index":862,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["buffersize",{"_index":194,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["build",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["build_config",{"_index":149,"title":{},"body":{"interfaces/BuildConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["build_config_config",{"_index":171,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["build_config_path",{"_index":179,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["buildconfig",{"_index":105,"title":{"interfaces/BuildConfig.html":{}},"body":{"interfaces/BuildConfig.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"coverage.html":{}}}],["buildconfigconfig",{"_index":156,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["buildconfigmodule",{"_index":49,"title":{"modules/BuildConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BuildConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["buildconfigmodule.forroot",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["buildconfigservice",{"_index":169,"title":{"injectables/BuildConfigService.html":{}},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"components/MainComponent.html":{},"coverage.html":{}}}],["buildconfigwithoutpathconfig",{"_index":230,"title":{"interfaces/BuildConfigWithoutPathConfig.html":{}},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["buildconfigwithoutpathconfig).overrides",{"_index":234,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/variables.html":{}}}],["buildconfigwithpathconfig",{"_index":218,"title":{"interfaces/BuildConfigWithPathConfig.html":{}},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["buildconfigwithpathconfig).path",{"_index":232,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/variables.html":{}}}],["bulk",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c",{"_index":798,"title":{},"body":{"license.html":{}}}],["cached",{"_index":207,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["caching",{"_index":130,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["call",{"_index":209,"title":{},"body":{"injectables/BuildConfigService.html":{},"interfaces/ScriptParams.html":{}}}],["callback",{"_index":639,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["called",{"_index":319,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{}}}],["cancel",{"_index":455,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"miscellaneous/variables.html":{}}}],["cancelpayload",{"_index":459,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["candeactivate",{"_index":242,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{}}}],["candeactivate(component",{"_index":244,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["candeactivateguard",{"_index":237,"title":{"guards/CanDeactivateGuard.html":{}},"body":{"guards/CanDeactivateGuard.html":{},"coverage.html":{}}}],["change",{"_index":394,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["changedetection",{"_index":327,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["changedetectionstrategy",{"_index":342,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":328,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["changes",{"_index":575,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["charge",{"_index":805,"title":{},"body":{"license.html":{}}}],["check",{"_index":624,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["child",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["child.firstchild",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["child.ts",{"_index":689,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["children",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["claim",{"_index":851,"title":{},"body":{"license.html":{}}}],["class",{"_index":23,"title":{"classes/CommonLogger.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"modules/CommonNgrxModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":267,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/DeactivatableComponent.html":{}}}],["cli",{"_index":346,"title":{},"body":{"components/DashboardComponent.html":{}}}],["client",{"_index":123,"title":{},"body":{"interfaces/BuildConfig.html":{},"classes/CommonLogger.html":{}}}],["cluster_appmodule",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule",{"_index":368,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declarations",{"_index":369,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_exports",{"_index":370,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_mainmodule",{"_index":524,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mainmodule_declarations",{"_index":525,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mainmodule_exports",{"_index":526,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_ngloggermodule",{"_index":536,"title":{},"body":{"modules/NgLoggerModule.html":{},"overview.html":{}}}],["cluster_ngloggermodule_providers",{"_index":537,"title":{},"body":{"modules/NgLoggerModule.html":{},"overview.html":{}}}],["cluster_scriptloadermodule",{"_index":590,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"overview.html":{}}}],["cluster_scriptloadermodule_providers",{"_index":591,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"overview.html":{}}}],["codebase",{"_index":367,"title":{},"body":{"components/DashboardComponent.html":{}}}],["codespace",{"_index":717,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["codespace.ts",{"_index":721,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["codespace_name",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["codespacename",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["codespaces",{"_index":782,"title":{},"body":{"index.html":{}}}],["codespaces/src/lib/util/get",{"_index":716,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["codespaces/src/lib/util/is",{"_index":720,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["codespaces/src/lib/util/normalize",{"_index":723,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["codespaces=true",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["codespaceurl",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["common",{"_index":298,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"miscellaneous/variables.html":{}}}],["common_ng_router_options",{"_index":686,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["commonlogger",{"_index":266,"title":{"classes/CommonLogger.html":{}},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{}}}],["commonlogger:10",{"_index":553,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["commonlogger:18",{"_index":548,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["commonlogger:23",{"_index":549,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["commonlogger:28",{"_index":547,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["commonlogger:33",{"_index":550,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["commonloggerconfig",{"_index":279,"title":{"interfaces/CommonLoggerConfig.html":{}},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/NgLoggerModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["commonmodule",{"_index":324,"title":{},"body":{"modules/CommonNgrxModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{}}}],["commonngrxmodule",{"_index":321,"title":{"modules/CommonNgrxModule.html":{}},"body":{"modules/CommonNgrxModule.html":{},"modules.html":{}}}],["complete",{"_index":490,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["compodoc",{"_index":364,"title":{},"body":{"components/DashboardComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/CanDeactivateGuard.html":{},"components/DashboardComponent.html":{},"interfaces/DeactivatableComponent.html":{},"components/MainComponent.html":{},"coverage.html":{}}}],["component.candeactivate",{"_index":265,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["component.ts",{"_index":397,"title":{},"body":{"interfaces/DeactivatableComponent.html":{},"coverage.html":{}}}],["component.ts:12",{"_index":402,"title":{},"body":{"interfaces/DeactivatableComponent.html":{}}}],["component_template",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{},"overview.html":{}}}],["componentstore",{"_index":500,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["conditions",{"_index":830,"title":{},"body":{"license.html":{}}}],["config",{"_index":161,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"classes/CommonLogger.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["config.js",{"_index":115,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["config.json",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"injectables/BuildConfigService.html":{}}}],["config.module.ts",{"_index":151,"title":{},"body":{"modules/BuildConfigModule.html":{}}}],["config.module.ts:13",{"_index":158,"title":{},"body":{"modules/BuildConfigModule.html":{}}}],["config.revision",{"_index":523,"title":{},"body":{"components/MainComponent.html":{}}}],["config.service",{"_index":170,"title":{},"body":{"modules/BuildConfigModule.html":{}}}],["config.service.ts",{"_index":176,"title":{},"body":{"injectables/BuildConfigService.html":{},"coverage.html":{}}}],["config.service.ts:23",{"_index":205,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["config.service.ts:33",{"_index":187,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["config.ts",{"_index":110,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/CommonLoggerConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["config/build",{"_index":109,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":518,"title":{},"body":{"components/MainComponent.html":{}}}],["configurable",{"_index":272,"title":{},"body":{"classes/CommonLogger.html":{}}}],["configuration",{"_index":203,"title":{},"body":{"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":160,"title":{},"body":{"modules/BuildConfigModule.html":{},"modules/NgLoggerModule.html":{}}}],["connect",{"_index":351,"title":{},"body":{"components/DashboardComponent.html":{}}}],["connection",{"_index":858,"title":{},"body":{"license.html":{}}}],["console",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.debug(message",{"_index":307,"title":{},"body":{"classes/CommonLogger.html":{}}}],["console.error(message",{"_index":303,"title":{},"body":{"classes/CommonLogger.html":{}}}],["console.log(message",{"_index":305,"title":{},"body":{"classes/CommonLogger.html":{}}}],["console.warn(message",{"_index":309,"title":{},"body":{"classes/CommonLogger.html":{}}}],["const",{"_index":148,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/DocumentWithId.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":184,"title":{},"body":{"injectables/BuildConfigService.html":{},"classes/CommonLogger.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"injectables/ScriptLoaderService.html":{}}}],["constructor(config",{"_index":278,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{}}}],["constructor(configservice",{"_index":519,"title":{},"body":{"components/MainComponent.html":{}}}],["constructor(document",{"_index":613,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["constructor(http",{"_index":185,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["constructor(httploadingstate",{"_index":470,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["constructor(logger",{"_index":434,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["constructor(private",{"_index":441,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{}}}],["constructor(public",{"_index":301,"title":{},"body":{"classes/CommonLogger.html":{},"components/MainComponent.html":{}}}],["constructor(router",{"_index":561,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["contents",{"_index":206,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["context",{"_index":132,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["contract",{"_index":855,"title":{},"body":{"license.html":{}}}],["convert",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["converted",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["copies",{"_index":824,"title":{},"body":{"license.html":{}}}],["copy",{"_index":808,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":797,"title":{},"body":{"license.html":{}}}],["core",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["core/main/main.component",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["core/main/main.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["coverage",{"_index":660,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":646,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["createaction",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction(`[${prefix",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcancel",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created",{"_index":391,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["createdat",{"_index":389,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["createfailed",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createsuccess",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":126,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["currently",{"_index":623,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["customize",{"_index":221,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/typealiases.html":{}}}],["cutdown",{"_index":422,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["cy.get('h1",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":852,"title":{},"body":{"license.html":{}}}],["dashboard",{"_index":329,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["dashboard.component",{"_index":382,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboard.component.html",{"_index":341,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":32,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/MainComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashboardmodule",{"_index":50,"title":{"modules/DashboardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["data",{"_index":223,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{}}}],["database",{"_index":392,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["date",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"interfaces/DateDocument.html":{}}}],["date().toisostring",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["datedocument",{"_index":384,"title":{"interfaces/DateDocument.html":{}},"body":{"interfaces/DateDocument.html":{},"coverage.html":{}}}],["deactivatable",{"_index":258,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["deactivatablecomponent",{"_index":245,"title":{"interfaces/DeactivatableComponent.html":{}},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{},"coverage.html":{}}}],["deactivatablecomponent).candeactivate",{"_index":262,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["deactivate.guard.ts",{"_index":241,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"coverage.html":{}}}],["deactivate.guard.ts:12",{"_index":257,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["deactivate.guard.ts:28",{"_index":246,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["deactivate/can",{"_index":240,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"coverage.html":{}}}],["deactivate/deactivatable",{"_index":396,"title":{},"body":{"interfaces/DeactivatableComponent.html":{},"coverage.html":{}}}],["deactivated",{"_index":247,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["deal",{"_index":811,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":859,"title":{},"body":{"license.html":{}}}],["debug",{"_index":129,"title":{},"body":{"interfaces/BuildConfig.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/NgLoggerService.html":{},"miscellaneous/typealiases.html":{}}}],["debug(message",{"_index":283,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{}}}],["declarations",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{}}}],["decorators",{"_index":551,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["default",{"_index":180,"title":{},"body":{"injectables/BuildConfigService.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":768,"title":{},"body":{"miscellaneous/functions.html":{}}}],["define",{"_index":447,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["defined",{"_index":157,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/DeactivatableComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["delete",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletecancel",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletefailed",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletesuccess",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":44,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":343,"title":{},"body":{"components/DashboardComponent.html":{}}}],["deployment",{"_index":786,"title":{},"body":{"index.html":{}}}],["depth/retry",{"_index":761,"title":{},"body":{"miscellaneous/functions.html":{}}}],["description",{"_index":111,"title":{},"body":{"interfaces/BuildConfig.html":{},"injectables/BuildConfigService.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{}}}],["development",{"_index":775,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["different",{"_index":348,"title":{},"body":{"components/DashboardComponent.html":{}}}],["digital",{"_index":792,"title":{},"body":{"index.html":{}}}],["directive",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["directives",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["directly",{"_index":882,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["disabled",{"_index":492,"title":{},"body":{"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{}}}],["display",{"_index":334,"title":{},"body":{"components/DashboardComponent.html":{}}}],["distribute",{"_index":820,"title":{},"body":{"license.html":{}}}],["doc",{"_index":361,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"miscellaneous/variables.html":{}}}],["docid",{"_index":427,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["docs",{"_index":360,"title":{},"body":{"components/DashboardComponent.html":{}}}],["document",{"_index":387,"title":{},"body":{"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["document.ts",{"_index":386,"title":{},"body":{"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":661,"title":{},"body":{"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["documentid",{"_index":408,"title":{},"body":{"interfaces/DocumentWithId.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["documentid(id",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentid(id.id",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documents",{"_index":880,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["documentwithid",{"_index":404,"title":{"interfaces/DocumentWithId.html":{}},"body":{"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["documentwithid).id",{"_index":414,"title":{},"body":{"interfaces/DocumentWithId.html":{},"miscellaneous/variables.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["domains",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duplicates",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duplicates.ts",{"_index":710,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/support/app.po.ts",{"_index":664,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":352,"title":{},"body":{"components/DashboardComponent.html":{}}}],["el",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{},"injectables/ScriptLoaderService.html":{}}}],["emitter",{"_index":607,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["emittions",{"_index":313,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"injectables/RouteLoadingStateService.html":{}}}],["enabledblocking",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["engine",{"_index":790,"title":{},"body":{"index.html":{}}}],["entire",{"_index":366,"title":{},"body":{"components/DashboardComponent.html":{}}}],["entities",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entities.reduce((acc",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":420,"title":{},"body":{"interfaces/EntityTypeParams.html":{},"miscellaneous/variables.html":{}}}],["entity[key",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entityactionfactory",{"_index":696,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["entityactions",{"_index":873,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["entitytypeparams",{"_index":416,"title":{"interfaces/EntityTypeParams.html":{}},"body":{"interfaces/EntityTypeParams.html":{},"coverage.html":{}}}],["env",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.codespace_name",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.codespaces",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":439,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["error",{"_index":201,"title":{},"body":{"injectables/BuildConfigService.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["error(message",{"_index":288,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{}}}],["errorhandler",{"_index":440,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["event",{"_index":486,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"license.html":{}}}],["everything",{"_index":603,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["example",{"_index":785,"title":{},"body":{"index.html":{}}}],["existingscriptloaded",{"_index":640,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["existingscriptloaded.element",{"_index":644,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["exponential",{"_index":766,"title":{},"body":{"miscellaneous/functions.html":{}}}],["export",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["exports",{"_index":372,"title":{},"body":{"modules/DashboardModule.html":{},"modules/MainModule.html":{}}}],["express",{"_index":839,"title":{},"body":{"license.html":{}}}],["extends",{"_index":133,"title":{},"body":{"interfaces/BuildConfig.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"miscellaneous/variables.html":{}}}],["extra",{"_index":574,"title":{},"body":{"injectables/RouteLoadingStateService.html":{},"index.html":{}}}],["extraoptions",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extraoptions's",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f5959d486294",{"_index":764,"title":{},"body":{"miscellaneous/functions.html":{}}}],["facing",{"_index":453,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["factory",{"_index":450,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["factory.ts",{"_index":695,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["failed",{"_index":762,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["failure",{"_index":456,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["failurepayload",{"_index":460,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["false",{"_index":498,"title":{},"body":{"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"miscellaneous/variables.html":{}}}],["feature",{"_index":886,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":781,"title":{},"body":{"index.html":{},"license.html":{}}}],["filter",{"_index":568,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["filter((loading",{"_index":576,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["final",{"_index":688,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["firebase",{"_index":788,"title":{},"body":{"index.html":{}}}],["fired",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fitness",{"_index":844,"title":{},"body":{"license.html":{}}}],["flag",{"_index":494,"title":{},"body":{"interfaces/HttpLoadingState.html":{},"interfaces/RouteLoadingState.html":{}}}],["flexlayoutmodule",{"_index":528,"title":{},"body":{"modules/MainModule.html":{}}}],["flows",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["folder",{"_index":183,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["following",{"_index":829,"title":{},"body":{"license.html":{}}}],["force",{"_index":496,"title":{},"body":{"interfaces/HttpLoadingState.html":{},"interfaces/RouteLoadingState.html":{}}}],["forroot",{"_index":154,"title":{},"body":{"modules/BuildConfigModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["forroot(config",{"_index":155,"title":{},"body":{"modules/BuildConfigModule.html":{},"modules/NgLoggerModule.html":{}}}],["forroot(params",{"_index":594,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["free",{"_index":804,"title":{},"body":{"license.html":{}}}],["full",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":263,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":756,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["functionwithparameterstype",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["furnished",{"_index":827,"title":{},"body":{"license.html":{}}}],["gather",{"_index":178,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["gcp",{"_index":789,"title":{},"body":{"index.html":{}}}],["generally",{"_index":121,"title":{},"body":{"interfaces/BuildConfig.html":{},"miscellaneous/variables.html":{}}}],["generated",{"_index":345,"title":{},"body":{"components/DashboardComponent.html":{}}}],["generic",{"_index":878,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["generics",{"_index":424,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["get(this.config.path",{"_index":192,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["getcancel",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcodespacename",{"_index":719,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getfailed",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getfinalchild",{"_index":690,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getgreeting",{"_index":666,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gethidden",{"_index":294,"title":{},"body":{"classes/CommonLogger.html":{}}}],["getid",{"_index":704,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getsuccess",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":769,"title":{"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":145,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["github",{"_index":783,"title":{},"body":{"index.html":{}}}],["given",{"_index":224,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/ScriptLoaderModule.html":{},"miscellaneous/variables.html":{}}}],["global/injection",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["globalerrorhandler",{"_index":430,"title":{"injectables/GlobalErrorHandler.html":{}},"body":{"injectables/GlobalErrorHandler.html":{},"coverage.html":{}}}],["granted",{"_index":803,"title":{},"body":{"license.html":{}}}],["graph",{"_index":344,"title":{},"body":{"components/DashboardComponent.html":{},"modules.html":{}}}],["gridmodule",{"_index":373,"title":{},"body":{"modules/DashboardModule.html":{}}}],["guard",{"_index":236,"title":{"guards/CanDeactivateGuard.html":{}},"body":{"interfaces/DeactivatableComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["guards",{"_index":238,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["guardscheckend",{"_index":565,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["handleerror",{"_index":433,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["handleerror(err",{"_index":437,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["handler.ts",{"_index":432,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"coverage.html":{}}}],["handler.ts:5",{"_index":436,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["handler.ts:8",{"_index":438,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["handles",{"_index":602,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["hash",{"_index":146,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["head",{"_index":653,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["head.appendchild(scriptelement",{"_index":658,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["help",{"_index":128,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["hereby",{"_index":802,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":277,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{}}}],["holders",{"_index":849,"title":{},"body":{"license.html":{}}}],["hook",{"_index":312,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{}}}],["html",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["htt",{"_index":449,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["http",{"_index":188,"title":{},"body":{"injectables/BuildConfigService.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httpactionfactory",{"_index":697,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpactiontypeparams",{"_index":443,"title":{"interfaces/HttpActionTypeParams.html":{}},"body":{"interfaces/HttpActionTypeParams.html":{},"coverage.html":{}}}],["httpclient",{"_index":186,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["httpclientmodule",{"_index":167,"title":{},"body":{"modules/BuildConfigModule.html":{}}}],["httpevent",{"_index":479,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["httphandler",{"_index":477,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["httpinterceptor",{"_index":480,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["httploadinginterceptor",{"_index":464,"title":{"interceptors/HttpLoadingInterceptor.html":{}},"body":{"interceptors/HttpLoadingInterceptor.html":{},"coverage.html":{}}}],["httploadingstate",{"_index":473,"title":{"interfaces/HttpLoadingState.html":{}},"body":{"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"coverage.html":{}}}],["httploadingstateservice",{"_index":471,"title":{"injectables/HttpLoadingStateService.html":{}},"body":{"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"coverage.html":{}}}],["httprequest",{"_index":475,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["httpresponse",{"_index":481,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["https://${codespacename",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://medium.com/angular",{"_index":760,"title":{},"body":{"miscellaneous/functions.html":{}}}],["id",{"_index":406,"title":{},"body":{"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["id.ts",{"_index":703,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["img",{"_index":330,"title":{},"body":{"components/DashboardComponent.html":{}}}],["implements",{"_index":260,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{}}}],["implied",{"_index":840,"title":{},"body":{"license.html":{}}}],["import",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"modules/CommonNgrxModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["important",{"_index":354,"title":{},"body":{"components/DashboardComponent.html":{}}}],["imports",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/BuildConfigModule.html":{},"modules/CommonNgrxModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{}}}],["include",{"_index":365,"title":{},"body":{"components/DashboardComponent.html":{}}}],["included",{"_index":834,"title":{},"body":{"license.html":{}}}],["includes",{"_index":779,"title":{},"body":{"index.html":{}}}],["including",{"_index":814,"title":{},"body":{"license.html":{}}}],["index",{"_index":135,"title":{"index.html":{}},"body":{"interfaces/BuildConfig.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":706,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":620,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["information",{"_index":125,"title":{},"body":{"interfaces/BuildConfig.html":{},"miscellaneous/variables.html":{}}}],["inherited",{"_index":546,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["init",{"_index":583,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initial",{"_index":208,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["initialnavigation",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["initscripts",{"_index":615,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["inject",{"_index":210,"title":{},"body":{"injectables/BuildConfigService.html":{},"injectables/NgLoggerService.html":{},"injectables/ScriptLoaderService.html":{}}}],["inject(build_config_config",{"_index":217,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["inject(document",{"_index":629,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["inject(ng_logger_config",{"_index":554,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["inject(ng_logger_config)@optional",{"_index":552,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["inject(script_loader_init_scripts",{"_index":631,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["inject(script_loader_loaded",{"_index":630,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["injectable",{"_index":174,"title":{"injectables/BuildConfigService.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"injectables/ScriptLoaderService.html":{}},"body":{"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["injectables",{"_index":175,"title":{},"body":{"injectables/BuildConfigService.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"injectables/ScriptLoaderService.html":{},"overview.html":{}}}],["injected",{"_index":601,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["injection",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":147,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ng_config",{"_index":150,"title":{},"body":{"interfaces/BuildConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('script_loader_init_scripts",{"_index":588,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":487,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{},"injectables/RouteLoadingStateService.html":{}}}],["instead",{"_index":883,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["intercept",{"_index":469,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["intercept(request",{"_index":474,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["interceptor",{"_index":463,"title":{"interceptors/HttpLoadingInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":465,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["interface",{"_index":104,"title":{"interfaces/BuildConfig.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"interfaces/HttpLoadingState.html":{},"interfaces/RouteLoadingState.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"interfaces/ScriptParams.html":{}},"body":{"interfaces/BuildConfig.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"interfaces/HttpLoadingState.html":{},"interfaces/RouteLoadingState.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{}}}],["interfaces",{"_index":106,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"interfaces/HttpLoadingState.html":{},"interfaces/RouteLoadingState.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"interfaces/ScriptParams.html":{},"overview.html":{}}}],["internally",{"_index":604,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["invalid",{"_index":202,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["isbuildconfigwithoutpathconfig",{"_index":213,"title":{},"body":{"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isbuildconfigwithoutpathconfig(this.config",{"_index":198,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["isbuildconfigwithpathconfig",{"_index":214,"title":{},"body":{"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isbuildconfigwithpathconfig(this.config",{"_index":190,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["iscodespace",{"_index":722,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isdeactivatable",{"_index":243,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["isdeactivatable(component",{"_index":256,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["isdocumentwithid",{"_index":412,"title":{},"body":{"interfaces/DocumentWithId.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isdocumentwithid(id",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isindexablevalue",{"_index":708,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isindexablevalue(keyvalue",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isolated",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issues",{"_index":131,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["json.stringify(this.config",{"_index":204,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["jump",{"_index":773,"title":{},"body":{"index.html":{}}}],["keep",{"_index":355,"title":{},"body":{"components/DashboardComponent.html":{}}}],["key",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keyof",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keyvalue",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":838,"title":{},"body":{"license.html":{}}}],["latest",{"_index":144,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["layout",{"_index":375,"title":{},"body":{"modules/DashboardModule.html":{},"modules/MainModule.html":{},"dependencies.html":{}}}],["lazy",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["left",{"_index":337,"title":{},"body":{"components/DashboardComponent.html":{}}}],["legend",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["level",{"_index":318,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"miscellaneous/typealiases.html":{}}}],["liability",{"_index":853,"title":{},"body":{"license.html":{}}}],["liable",{"_index":850,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":349,"title":{},"body":{"components/DashboardComponent.html":{}}}],["libs/.../build",{"_index":871,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../common",{"_index":876,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../entity",{"_index":874,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../get",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../http",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../id",{"_index":872,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../is",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../ng",{"_index":877,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../normalize",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../remove",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../retry",{"_index":757,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../script",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../to",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/common",{"_index":107,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"modules/CommonNgrxModule.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/lib/models/date",{"_index":385,"title":{},"body":{"interfaces/DateDocument.html":{},"coverage.html":{}}}],["libs/common/src/lib/models/id",{"_index":405,"title":{},"body":{"interfaces/DocumentWithId.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/lib/utils/common",{"_index":268,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/common/src/lib/utils/get",{"_index":702,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/lib/utils/is",{"_index":705,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/lib/utils/remove",{"_index":709,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/lib/utils/to",{"_index":712,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/gh",{"_index":715,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/script",{"_index":580,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":795,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limitation",{"_index":815,"title":{},"body":{"license.html":{}}}],["limited",{"_index":841,"title":{},"body":{"license.html":{}}}],["link",{"_index":358,"title":{},"body":{"components/DashboardComponent.html":{}}}],["list",{"_index":296,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":595,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":605,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["load(script",{"_index":617,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loaded",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"components/DashboardComponent.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"miscellaneous/variables.html":{}}}],["loaded.ts",{"_index":726,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loader",{"_index":582,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loader.module.ts",{"_index":593,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["loader.module.ts:20",{"_index":596,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["loader.service",{"_index":597,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["loader.service.ts",{"_index":609,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:16",{"_index":628,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:21",{"_index":616,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:42",{"_index":622,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:57",{"_index":618,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader/src/lib/script",{"_index":581,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":493,"title":{},"body":{"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{}}}],["loading.interceptor.ts",{"_index":468,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{},"coverage.html":{}}}],["loading.interceptor.ts:16",{"_index":472,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["loading.interceptor.ts:19",{"_index":478,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["loading.state",{"_index":514,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["loading.state.service",{"_index":484,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["loading.state.service.ts",{"_index":499,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{},"coverage.html":{}}}],["loading.state.service.ts:12",{"_index":507,"title":{},"body":{"injectables/HttpLoadingStateService.html":{}}}],["loading.state.service.ts:14",{"_index":503,"title":{},"body":{"injectables/HttpLoadingStateService.html":{}}}],["loading.state.service.ts:19",{"_index":510,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["loading.state.service.ts:24",{"_index":511,"title":{},"body":{"injectables/HttpLoadingStateService.html":{}}}],["loading.state.service.ts:37",{"_index":563,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["loading.state.service.ts:42",{"_index":564,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["loading.state.ts",{"_index":491,"title":{},"body":{"interfaces/HttpLoadingState.html":{},"interfaces/RouteLoadingState.html":{},"coverage.html":{}}}],["loading/http",{"_index":467,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"coverage.html":{}}}],["loading/route",{"_index":558,"title":{},"body":{"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"coverage.html":{}}}],["loads",{"_index":619,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loadscripts",{"_index":612,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loadscripts(params",{"_index":621,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["log",{"_index":274,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/NgLoggerService.html":{},"miscellaneous/typealiases.html":{}}}],["log(message",{"_index":290,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{}}}],["logger",{"_index":273,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/GlobalErrorHandler.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["logger.module.ts",{"_index":539,"title":{},"body":{"modules/NgLoggerModule.html":{}}}],["logger.module.ts:15",{"_index":540,"title":{},"body":{"modules/NgLoggerModule.html":{}}}],["logger.service",{"_index":541,"title":{},"body":{"modules/NgLoggerModule.html":{}}}],["logger.service.ts",{"_index":543,"title":{},"body":{"injectables/NgLoggerService.html":{},"coverage.html":{}}}],["logger.service.ts:8",{"_index":545,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["logger.ts",{"_index":270,"title":{},"body":{"classes/CommonLogger.html":{},"coverage.html":{}}}],["logger.ts:10",{"_index":295,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger.ts:12",{"_index":280,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger.ts:16",{"_index":282,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger.ts:18",{"_index":289,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger.ts:23",{"_index":291,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger.ts:28",{"_index":285,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger.ts:33",{"_index":293,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger/common",{"_index":269,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["loglevels",{"_index":316,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"miscellaneous/typealiases.html":{}}}],["logs",{"_index":314,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{}}}],["look",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["main",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["main.component",{"_index":534,"title":{},"body":{"modules/MainModule.html":{}}}],["main.component.html",{"_index":517,"title":{},"body":{"components/MainComponent.html":{}}}],["maincomponent",{"_index":34,"title":{"components/MainComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"coverage.html":{},"overview.html":{}}}],["mainmodule",{"_index":51,"title":{"modules/MainModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MainModule.html":{},"modules.html":{},"overview.html":{}}}],["map",{"_index":569,"title":{},"body":{"injectables/RouteLoadingStateService.html":{},"miscellaneous/variables.html":{}}}],["map((event",{"_index":572,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["map.ts",{"_index":713,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapping",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["margin",{"_index":336,"title":{},"body":{"components/DashboardComponent.html":{}}}],["matbuttonmodule",{"_index":376,"title":{},"body":{"modules/DashboardModule.html":{},"modules/MainModule.html":{}}}],["matcardmodule",{"_index":378,"title":{},"body":{"modules/DashboardModule.html":{}}}],["matching",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":529,"title":{},"body":{"modules/MainModule.html":{}}}],["material",{"_index":383,"title":{},"body":{"modules/DashboardModule.html":{},"modules/MainModule.html":{}}}],["maticonmodule",{"_index":380,"title":{},"body":{"modules/DashboardModule.html":{},"modules/MainModule.html":{}}}],["mattoolbarmodule",{"_index":531,"title":{},"body":{"modules/MainModule.html":{}}}],["max",{"_index":331,"title":{},"body":{"components/DashboardComponent.html":{}}}],["menu",{"_index":522,"title":{},"body":{"components/MainComponent.html":{}}}],["merchantability",{"_index":843,"title":{},"body":{"license.html":{}}}],["merge",{"_index":818,"title":{},"body":{"license.html":{}}}],["message",{"_index":286,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/NgLoggerService.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["method",{"_index":251,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["methods",{"_index":152,"title":{},"body":{"modules/BuildConfigModule.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DeactivatableComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["miscellaneous",{"_index":755,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":796,"title":{},"body":{"index.html":{},"license.html":{}}}],["mixed",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":817,"title":{},"body":{"license.html":{}}}],["module",{"_index":41,"title":{"modules/AppModule.html":{},"modules/BuildConfigModule.html":{},"modules/CommonNgrxModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}},"body":{}}],["modules",{"_index":43,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BuildConfigModule.html":{},"modules/CommonNgrxModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/dashboard/dashboard.component",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/dashboard/dashboard.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["modulewithproviders",{"_index":166,"title":{},"body":{"modules/BuildConfigModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["multiple",{"_index":119,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["name",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"components/DashboardComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"components/MainComponent.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["name.ts",{"_index":718,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["navigate",{"_index":403,"title":{},"body":{"interfaces/DeactivatableComponent.html":{}}}],["navigated",{"_index":248,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["navigating",{"_index":400,"title":{},"body":{"interfaces/DeactivatableComponent.html":{}}}],["navigation",{"_index":559,"title":{},"body":{"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{}}}],["navigationend",{"_index":566,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["navigationstart",{"_index":567,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["need",{"_index":425,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["needs",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nested",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":476,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":485,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["ng",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"components/MainComponent.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng/src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["ng/src/app/app.module.ts",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["ng/src/app/core/main/main.component.ts",{"_index":516,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["ng/src/app/core/main/main.component.ts:10",{"_index":520,"title":{},"body":{"components/MainComponent.html":{}}}],["ng/src/app/core/main/main.component.ts:11",{"_index":521,"title":{},"body":{"components/MainComponent.html":{}}}],["ng/src/app/core/main/main.module.ts",{"_index":527,"title":{},"body":{"modules/MainModule.html":{}}}],["ng/src/app/modules/dashboard/dashboard.component.ts",{"_index":326,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["ng/src/app/modules/dashboard/dashboard.module.ts",{"_index":371,"title":{},"body":{"modules/DashboardModule.html":{}}}],["ng/src/environments/environment.prod.ts",{"_index":670,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng/src/environments/environment.ts",{"_index":671,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng/src/lib/build",{"_index":108,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ng/src/lib/can",{"_index":239,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{},"coverage.html":{}}}],["ng/src/lib/http",{"_index":466,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"coverage.html":{}}}],["ng/src/lib/logger/global",{"_index":431,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"coverage.html":{}}}],["ng/src/lib/logger/ng",{"_index":538,"title":{},"body":{"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ng/src/lib/nav/common",{"_index":684,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng/src/lib/nav/get",{"_index":687,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng/src/lib/route",{"_index":557,"title":{},"body":{"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"coverage.html":{}}}],["ng/src/lib/rxjs/retry",{"_index":691,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ng_logger_config",{"_index":542,"title":{},"body":{"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngloggerconfig",{"_index":544,"title":{},"body":{"injectables/NgLoggerService.html":{},"miscellaneous/typealiases.html":{}}}],["ngloggermodule",{"_index":535,"title":{"modules/NgLoggerModule.html":{}},"body":{"modules/NgLoggerModule.html":{},"modules.html":{},"overview.html":{}}}],["ngloggerservice",{"_index":435,"title":{"injectables/NgLoggerService.html":{}},"body":{"injectables/GlobalErrorHandler.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"overview.html":{}}}],["ngmodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/BuildConfigModule.html":{},"modules/CommonNgrxModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["ngrx",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngrx.module.ts",{"_index":323,"title":{},"body":{"modules/CommonNgrxModule.html":{}}}],["ngrx/component",{"_index":512,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"modules/MainModule.html":{},"injectables/RouteLoadingStateService.html":{},"dependencies.html":{}}}],["ngrx/effects",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["ngrx/entity",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["ngrx/router",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["ngrx/src/lib/common",{"_index":322,"title":{},"body":{"modules/CommonNgrxModule.html":{}}}],["ngrx/src/lib/entity/entity",{"_index":694,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ngrx/src/lib/models/entity",{"_index":417,"title":{},"body":{"interfaces/EntityTypeParams.html":{},"coverage.html":{}}}],["ngrx/src/lib/util/http",{"_index":444,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngrx/store",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["nodejs",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["non",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HttpActionTypeParams.html":{}}}],["noninfringement",{"_index":847,"title":{},"body":{"license.html":{}}}],["normalizecodespacerootpath",{"_index":725,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["normalized",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["note",{"_index":451,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"modules/ScriptLoaderModule.html":{},"miscellaneous/variables.html":{}}}],["notice",{"_index":832,"title":{},"body":{"license.html":{}}}],["null",{"_index":413,"title":{},"body":{"interfaces/DocumentWithId.html":{},"injectables/RouteLoadingStateService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nx",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"interfaces/EntityTypeParams.html":{},"components/MainComponent.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"index.html":{}}}],["nxworkspacetemplate",{"_index":771,"title":{},"body":{"index.html":{}}}],["oauth",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":235,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":253,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{},"interceptors/HttpLoadingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":807,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":793,"title":{},"body":{"index.html":{}}}],["of(this.config.overrides",{"_index":199,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["one",{"_index":608,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["onlog",{"_index":310,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{}}}],["optimal",{"_index":452,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["optional",{"_index":164,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"components/MainComponent.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"miscellaneous/functions.html":{}}}],["optionalparams",{"_index":284,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/NgLoggerService.html":{}}}],["options.ts",{"_index":685,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":645,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"license.html":{}}}],["out",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":114,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["over",{"_index":315,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{}}}],["override",{"_index":226,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/variables.html":{}}}],["overrides",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/typealiases.html":{}}}],["overview",{"_index":864,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":733,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":401,"title":{},"body":{"interfaces/DeactivatableComponent.html":{}}}],["pages",{"_index":791,"title":{},"body":{"index.html":{}}}],["param",{"_index":300,"title":{},"body":{"classes/CommonLogger.html":{}}}],["parameters",{"_index":163,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"components/MainComponent.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":317,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["params.scripts",{"_index":606,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["params.ts",{"_index":418,"title":{},"body":{"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{}}}],["paramsinheritancestrategy",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partial",{"_index":219,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{}}}],["particular",{"_index":845,"title":{},"body":{"license.html":{}}}],["passed",{"_index":311,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"interfaces/EntityTypeParams.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/variables.html":{}}}],["path.ts",{"_index":724,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["permission",{"_index":801,"title":{},"body":{"license.html":{}}}],["permit",{"_index":825,"title":{},"body":{"license.html":{}}}],["person",{"_index":806,"title":{},"body":{"license.html":{}}}],["persons",{"_index":826,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":571,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["pipe(sharereplay",{"_index":193,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["pipelines",{"_index":787,"title":{},"body":{"index.html":{}}}],["platform",{"_index":794,"title":{},"body":{"index.html":{}}}],["poccess.env",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["port",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":836,"title":{},"body":{"license.html":{}}}],["port}.githubpreview.dev",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":428,"title":{},"body":{"interfaces/EntityTypeParams.html":{},"miscellaneous/variables.html":{}}}],["preload",{"_index":638,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["prevent",{"_index":399,"title":{},"body":{"interfaces/DeactivatableComponent.html":{},"injectables/RouteLoadingStateService.html":{}}}],["private",{"_index":215,"title":{},"body":{"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"injectables/ScriptLoaderService.html":{}}}],["process.env",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":350,"title":{},"body":{"components/DashboardComponent.html":{}}}],["projects",{"_index":777,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":254,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{},"injectables/ScriptLoaderService.html":{}}}],["promise((resolve",{"_index":655,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["promise.all(scripts.map((script",{"_index":635,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["properties",{"_index":136,"title":{},"body":{"interfaces/BuildConfig.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["props",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":122,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"miscellaneous/typealiases.html":{}}}],["provided",{"_index":220,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"license.html":{}}}],["providedin",{"_index":259,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["providers",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/BuildConfigModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["provides",{"_index":177,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["public",{"_index":182,"title":{},"body":{"injectables/BuildConfigService.html":{},"classes/CommonLogger.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["publish",{"_index":819,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":846,"title":{},"body":{"license.html":{}}}],["reactivecomponentmodule",{"_index":533,"title":{},"body":{"modules/MainModule.html":{}}}],["readonly",{"_index":216,"title":{},"body":{"injectables/BuildConfigService.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["record",{"_index":134,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/EntityTypeParams.html":{},"miscellaneous/variables.html":{}}}],["recordkey",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirects",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirectto",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["refcount",{"_index":196,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["removeduplicates",{"_index":711,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["removes",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaysubject",{"_index":599,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["replaysubject(1",{"_index":600,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["repo",{"_index":778,"title":{},"body":{"index.html":{}}}],["repository",{"_index":772,"title":{},"body":{"index.html":{}}}],["represents",{"_index":113,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/DateDocument.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":457,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"miscellaneous/variables.html":{}}}],["requestpayload",{"_index":461,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["requests",{"_index":763,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["require",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"overview.html":{}}}],["resolve",{"_index":657,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["restriction",{"_index":813,"title":{},"body":{"license.html":{}}}],["result",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":765,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retrywithbackoff",{"_index":693,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["retrywithbackoff(params",{"_index":758,"title":{},"body":{"miscellaneous/functions.html":{}}}],["return",{"_index":172,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/DeactivatableComponent.html":{},"interceptors/HttpLoadingInterceptor.html":{},"modules/NgLoggerModule.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["returne",{"_index":231,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{}}}],["returned",{"_index":222,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{}}}],["returns",{"_index":165,"title":{},"body":{"modules/BuildConfigModule.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/DeactivatableComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["revision",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BuildConfig.html":{}}}],["right",{"_index":339,"title":{},"body":{"components/DashboardComponent.html":{}}}],["rights",{"_index":816,"title":{},"body":{"license.html":{}}}],["root",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["route",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"injectables/RouteLoadingStateService.html":{},"miscellaneous/variables.html":{}}}],["routeloadingstate",{"_index":556,"title":{"interfaces/RouteLoadingState.html":{}},"body":{"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"coverage.html":{}}}],["routeloadingstateservice",{"_index":560,"title":{"injectables/RouteLoadingStateService.html":{}},"body":{"injectables/RouteLoadingStateService.html":{},"coverage.html":{}}}],["router",{"_index":562,"title":{},"body":{"injectables/RouteLoadingStateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forroot",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["rxjs",{"_index":212,"title":{},"body":{"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":483,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["same",{"_index":141,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["scheme",{"_index":454,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["script",{"_index":117,"title":{},"body":{"interfaces/BuildConfig.html":{},"classes/CommonLogger.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["script_loader_init_scripts",{"_index":587,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["script_loader_loaded",{"_index":598,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scriptelement",{"_index":647,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptelement.onload",{"_index":656,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptelement.setattribute('async",{"_index":652,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptelement.setattribute('src",{"_index":651,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptloaderinitscripts",{"_index":579,"title":{"interfaces/ScriptLoaderInitScripts.html":{}},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["scriptloaderloaded",{"_index":614,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptloaderloaded.next(true",{"_index":633,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptloadermodule",{"_index":589,"title":{"modules/ScriptLoaderModule.html":{}},"body":{"modules/ScriptLoaderModule.html":{},"modules.html":{},"overview.html":{}}}],["scriptloaderservice",{"_index":592,"title":{"injectables/ScriptLoaderService.html":{}},"body":{"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["scriptparams",{"_index":586,"title":{"interfaces/ScriptParams.html":{}},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{}}}],["scripts",{"_index":585,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["scripts.ts",{"_index":584,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scriptsloaded",{"_index":610,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptsloaded.src",{"_index":642,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["see",{"_index":625,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["sell",{"_index":823,"title":{},"body":{"license.html":{}}}],["service",{"_index":162,"title":{},"body":{"modules/BuildConfigModule.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":495,"title":{},"body":{"interfaces/HttpLoadingState.html":{},"interfaces/RouteLoadingState.html":{},"miscellaneous/variables.html":{}}}],["setdisabled",{"_index":501,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["setloading",{"_index":502,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["setting",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":159,"title":{},"body":{"modules/BuildConfigModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["shall",{"_index":833,"title":{},"body":{"license.html":{}}}],["sharereplay",{"_index":211,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["shouldn't",{"_index":881,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["shows",{"_index":347,"title":{},"body":{"components/DashboardComponent.html":{}}}],["side",{"_index":124,"title":{},"body":{"interfaces/BuildConfig.html":{},"classes/CommonLogger.html":{}}}],["simple",{"_index":271,"title":{},"body":{"classes/CommonLogger.html":{}}}],["situations",{"_index":120,"title":{},"body":{"interfaces/BuildConfig.html":{},"classes/CommonLogger.html":{}}}],["skip",{"_index":643,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["software",{"_index":809,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["sources",{"_index":634,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["special",{"_index":573,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["specify",{"_index":227,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/variables.html":{}}}],["src",{"_index":637,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["stap",{"_index":143,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["start",{"_index":774,"title":{},"body":{"index.html":{}}}],["started",{"_index":770,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":509,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["state.disabled",{"_index":505,"title":{},"body":{"injectables/HttpLoadingStateService.html":{}}}],["state.loading",{"_index":506,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["statements",{"_index":663,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":153,"title":{},"body":{"modules/BuildConfigModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["still",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":513,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{},"dependencies.html":{}}}],["string",{"_index":137,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/ScriptParams.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["subject",{"_index":828,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":821,"title":{},"body":{"license.html":{}}}],["subscribe((loading",{"_index":577,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["substantial",{"_index":835,"title":{},"body":{"license.html":{}}}],["success",{"_index":458,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"miscellaneous/variables.html":{}}}],["successpaylod",{"_index":462,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["super",{"_index":515,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["super(config",{"_index":555,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["support",{"_index":860,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["supported",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["supporting",{"_index":780,"title":{},"body":{"index.html":{}}}],["svg",{"_index":861,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":411,"title":{},"body":{"interfaces/DocumentWithId.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":407,"title":{},"body":{"interfaces/DocumentWithId.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":759,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tap",{"_index":482,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{},"index.html":{}}}],["template/common",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"interfaces/EntityTypeParams.html":{},"components/MainComponent.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["testing",{"_index":879,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["this.config?.hidden",{"_index":299,"title":{},"body":{"classes/CommonLogger.html":{}}}],["this.document.createelement('script",{"_index":648,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.document.getelementsbytagname('head')[0",{"_index":654,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.hidden?.includes('debug",{"_index":306,"title":{},"body":{"classes/CommonLogger.html":{}}}],["this.hidden?.includes('error",{"_index":302,"title":{},"body":{"classes/CommonLogger.html":{}}}],["this.hidden?.includes('log",{"_index":304,"title":{},"body":{"classes/CommonLogger.html":{}}}],["this.hidden?.includes('warn",{"_index":308,"title":{},"body":{"classes/CommonLogger.html":{}}}],["this.http",{"_index":191,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["this.httploadingstate.setloading(false",{"_index":489,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["this.httploadingstate.setloading(true",{"_index":488,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["this.isdeactivatable(component",{"_index":264,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["this.load(script",{"_index":636,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.loadscripts(initscripts).then",{"_index":632,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.logger.error(err",{"_index":442,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["this.router.events",{"_index":570,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["this.scriptsloaded$.next",{"_index":649,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.scriptsloaded$.value",{"_index":650,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.scriptsloaded$.value.find",{"_index":641,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.select((state",{"_index":504,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["this.setloading(!!loading",{"_index":578,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["this.updater((state",{"_index":508,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["throw",{"_index":200,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["time",{"_index":142,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/CommonLoggerConfig.html":{}}}],["title_case",{"_index":429,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["todo",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":225,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/variables.html":{}}}],["tomap",{"_index":714,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tooling",{"_index":116,"title":{},"body":{"interfaces/BuildConfig.html":{},"index.html":{}}}],["tort",{"_index":856,"title":{},"body":{"license.html":{}}}],["track",{"_index":356,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["true",{"_index":197,"title":{},"body":{"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{},"injectables/RouteLoadingStateService.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":885,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tslib",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":112,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"components/MainComponent.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":869,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedaction",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeof",{"_index":233,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"interfaces/DocumentWithId.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["typeofkey",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeparams['prefix",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types",{"_index":448,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"miscellaneous/typealiases.html":{}}}],["undefined",{"_index":415,"title":{},"body":{"interfaces/DocumentWithId.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":410,"title":{},"body":{"interfaces/DocumentWithId.html":{}}}],["unknown",{"_index":261,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DocumentWithId.html":{},"injectables/GlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["update",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatecancel",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatedat",{"_index":390,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["updatefailed",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatesuccess",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":357,"title":{},"body":{"components/DashboardComponent.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["used",{"_index":118,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"classes/CommonLogger.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":250,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/HttpActionTypeParams.html":{}}}],["usevalue",{"_index":173,"title":{},"body":{"modules/BuildConfigModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["using",{"_index":363,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["usually",{"_index":320,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/EntityTypeParams.html":{}}}],["utilities",{"_index":421,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["utility",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":189,"title":{},"body":{"injectables/BuildConfigService.html":{},"interfaces/DeactivatableComponent.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["value.ts",{"_index":707,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["variable",{"_index":665,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":887,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":138,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["very",{"_index":353,"title":{},"body":{"components/DashboardComponent.html":{}}}],["via",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["viable",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["view",{"_index":359,"title":{},"body":{"components/DashboardComponent.html":{}}}],["void",{"_index":287,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/NgLoggerService.html":{},"interfaces/ScriptParams.html":{}}}],["warn",{"_index":275,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/NgLoggerService.html":{},"miscellaneous/typealiases.html":{}}}],["warn(message",{"_index":292,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{}}}],["warranties",{"_index":842,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":837,"title":{},"body":{"license.html":{}}}],["whether",{"_index":854,"title":{},"body":{"license.html":{}}}],["whitespace",{"_index":393,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["width",{"_index":332,"title":{},"body":{"components/DashboardComponent.html":{}}}],["wip",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":181,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["without",{"_index":812,"title":{},"body":{"license.html":{}}}],["work",{"_index":398,"title":{},"body":{"interfaces/DeactivatableComponent.html":{},"interfaces/HttpActionTypeParams.html":{},"miscellaneous/variables.html":{}}}],["workspace",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"interfaces/EntityTypeParams.html":{},"components/MainComponent.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"index.html":{}}}],["wrap",{"_index":419,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["wrapper",{"_index":446,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["yes",{"_index":281,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{},"modules/ScriptLoaderModule.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/internal-ng/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nx-workspace-template-root\n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'nx-workspace-template-root',\n  templateUrl: './app.component.html',\n  styles: [],\n})\nexport class AppComponent {}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'nx-workspace-template-root'},{'name': 'DashboardComponent', 'selector': 'nx-workspace-template-dashboard'},{'name': 'MainComponent', 'selector': 'nx-workspace-template-main'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nBuildConfigModule\n\nBuildConfigModule\n\nAppModule -->\n\nBuildConfigModule->AppModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nAppModule -->\n\nMainModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/internal-ng/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BuildConfigModule\n                        \n                        \n                            DashboardModule\n                        \n                        \n                            MainModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { BuildConfigModule } from '@nx-workspace-template/common-ng';\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './core/main/main.component';\nimport { MainModule } from './core/main/main.module';\nimport { DashboardComponent } from './modules/dashboard/dashboard.component';\nimport { DashboardModule } from './modules/dashboard/dashboard.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(\n      [\n        {\n          path: '',\n          component: MainComponent,\n          children: [\n            {\n              path: '',\n              pathMatch: 'full',\n              component: DashboardComponent,\n            },\n          ],\n        },\n        {\n          // TODO: add \"404 route\"\n          path: '**',\n          redirectTo: '',\n        },\n      ],\n      { initialNavigation: 'enabledBlocking' }\n    ),\n\n    // core modules\n    MainModule,\n    // nested non-lazy loaded modules\n    DashboardModule,\n\n    // global/injection modules\n    BuildConfigModule.forRoot(\n      environment.production\n        ? {\n            path: './build-config.json',\n          }\n        : {\n            overrides: {\n              angularVersion: '0.0.0',\n              date: new Date().toISOString(),\n              revision: '0.0.0',\n            },\n          }\n    ),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BuildConfig.html":{"url":"interfaces/BuildConfig.html","title":"interface - BuildConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BuildConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/build-config/build-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Type that represents the output of the build-config.js tooling script.\nThis script can be used in multiple of situations, but generally is used\nto provide the client-side information on the current asset build, to help\ndebug caching issues and provide context.\n\n            \n\n            \n                Extends\n            \n            \n                    Record\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            angularVersion\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            revision\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        angularVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        angularVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The version of Angular. It is assumed all dependencies are also\nthe same version.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The time-stap of the latest build.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        revision\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        revision:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The git hash of this build.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport const BUILD_CONFIG = new InjectionToken('NG_CONFIG');\n\n/**\n * Type that represents the output of the `build-config.js` tooling script.\n * This script can be used in multiple of situations, but generally is used\n * to provide the client-side information on the current asset build, to help\n * debug caching issues and provide context.\n */\nexport interface BuildConfig extends Record {\n  /**\n   * The git hash of this build.\n   */\n  revision: string;\n  /**\n   * The version of Angular. It is assumed all dependencies are also\n   * the same version.\n   */\n  angularVersion: string;\n  /**\n   * The time-stap of the latest build.\n   */\n  date: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BuildConfigModule.html":{"url":"modules/BuildConfigModule.html","title":"module - BuildConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    BuildConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common-ng/src/lib/build-config/build-config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: BuildConfigConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/common-ng/src/lib/build-config/build-config.module.ts:13\n                \n            \n\n\n            \n                \n                    Setup configurations with the build-config-service.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                BuildConfigConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BuildConfigService } from './build-config.service';\nimport { BuildConfigConfig, BUILD_CONFIG_CONFIG } from '.';\n\n@NgModule({\n  imports: [HttpClientModule],\n})\nexport class BuildConfigModule {\n  /**\n   * Setup configurations with the build-config-service.\n   */\n  static forRoot(\n    config: BuildConfigConfig\n  ): ModuleWithProviders {\n    return {\n      ngModule: BuildConfigModule,\n      providers: [\n        BuildConfigService,\n        {\n          provide: BUILD_CONFIG_CONFIG,\n          useValue: config,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BuildConfigService.html":{"url":"injectables/BuildConfigService.html","title":"injectable - BuildConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BuildConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/build-config/build-config.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Provides an interface to gather the build config\nfrom the BUILD_CONFIG_PATH injectable.\nBy default it is assumed to be just at config.json\nwithin the root public folder.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buildConfig$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, config: BuildConfigConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/common-ng/src/lib/build-config/build-config.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        BuildConfigConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        buildConfig$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (() => {\n    if (isBuildConfigWithPathConfig(this.config))\n      return this.http\n        .get(this.config.path)\n        .pipe(shareReplay({ bufferSize: 1, refCount: true }));\n    if (isBuildConfigWithoutPathConfig(this.config))\n      return of(this.config.overrides);\n    throw new Error(\n      `Invalid build config configuration: ${JSON.stringify(this.config)}`\n    );\n  })()\n                    \n                \n                    \n                        \n                                Defined in libs/common-ng/src/lib/build-config/build-config.service.ts:23\n                        \n                    \n\n            \n                \n                    The build config file contents. Will be cached after the initial call.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { of, shareReplay } from 'rxjs';\nimport { BuildConfig } from './build-config';\nimport {\n  BuildConfigConfig,\n  BUILD_CONFIG_CONFIG,\n  isBuildConfigWithoutPathConfig,\n  isBuildConfigWithPathConfig,\n} from './build-config-config';\n\n/**\n * Provides an interface to gather the build config\n * from the BUILD_CONFIG_PATH injectable.\n * By default it is assumed to be just at `config.json`\n * within the root public folder.\n */\n@Injectable()\nexport class BuildConfigService {\n  /**\n   * The build config file contents. Will be cached after the initial call.\n   */\n  public buildConfig$ = (() => {\n    if (isBuildConfigWithPathConfig(this.config))\n      return this.http\n        .get(this.config.path)\n        .pipe(shareReplay({ bufferSize: 1, refCount: true }));\n    if (isBuildConfigWithoutPathConfig(this.config))\n      return of(this.config.overrides);\n    throw new Error(\n      `Invalid build config configuration: ${JSON.stringify(this.config)}`\n    );\n  })();\n\n  constructor(\n    private readonly http: HttpClient,\n    @Inject(BUILD_CONFIG_CONFIG) private readonly config: BuildConfigConfig\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BuildConfigWithPathConfig.html":{"url":"interfaces/BuildConfigWithPathConfig.html","title":"interface - BuildConfigWithPathConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BuildConfigWithPathConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/build-config/build-config-config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            overrides\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        overrides\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overrides:         Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Overrides that can be provided to customize the returned data.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The path to the file. If given, then the file will be loaded from this path.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { BuildConfig } from './build-config';\n\n/**\n * Token that represents the configuration of the \"build-config\" service.\n * Used to override the build config, and specify the path to the build config file.\n */\nexport const BUILD_CONFIG_CONFIG = new InjectionToken(\n  'BUILD_CONFIG_CONFIG'\n);\n\n/**\n * The build-config configuration. Can be used to provide overrides of\n * the config file, and customize the actual build-config service behavior.\n */\nexport type BuildConfigConfig =\n  | BuildConfigWithPathConfig\n  | BuildConfigWithoutPathConfig;\n\nexport interface BuildConfigWithPathConfig {\n  /**\n   * The path to the file. If given, then the file will be loaded from this path.\n   */\n  path: string;\n  /**\n   * Overrides that can be provided to customize the returned data.\n   */\n  overrides?: Partial;\n}\n\nexport interface BuildConfigWithoutPathConfig {\n  /**\n   * Overrides that must be provided to defined the returne data.\n   */\n  overrides?: BuildConfig;\n}\n\nexport const isBuildConfigWithPathConfig = (\n  config: BuildConfigConfig\n): config is BuildConfigWithPathConfig =>\n  !!(config as BuildConfigWithPathConfig).path &&\n  typeof (config as BuildConfigWithPathConfig).path === 'string';\n\nexport const isBuildConfigWithoutPathConfig = (\n  config: BuildConfigConfig\n): config is BuildConfigWithoutPathConfig =>\n  !!(config as BuildConfigWithoutPathConfig).overrides &&\n  typeof (config as BuildConfigWithoutPathConfig).overrides === 'object';\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BuildConfigWithoutPathConfig.html":{"url":"interfaces/BuildConfigWithoutPathConfig.html","title":"interface - BuildConfigWithoutPathConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BuildConfigWithoutPathConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/build-config/build-config-config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            overrides\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        overrides\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overrides:         BuildConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BuildConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Overrides that must be provided to defined the returne data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { BuildConfig } from './build-config';\n\n/**\n * Token that represents the configuration of the \"build-config\" service.\n * Used to override the build config, and specify the path to the build config file.\n */\nexport const BUILD_CONFIG_CONFIG = new InjectionToken(\n  'BUILD_CONFIG_CONFIG'\n);\n\n/**\n * The build-config configuration. Can be used to provide overrides of\n * the config file, and customize the actual build-config service behavior.\n */\nexport type BuildConfigConfig =\n  | BuildConfigWithPathConfig\n  | BuildConfigWithoutPathConfig;\n\nexport interface BuildConfigWithPathConfig {\n  /**\n   * The path to the file. If given, then the file will be loaded from this path.\n   */\n  path: string;\n  /**\n   * Overrides that can be provided to customize the returned data.\n   */\n  overrides?: Partial;\n}\n\nexport interface BuildConfigWithoutPathConfig {\n  /**\n   * Overrides that must be provided to defined the returne data.\n   */\n  overrides?: BuildConfig;\n}\n\nexport const isBuildConfigWithPathConfig = (\n  config: BuildConfigConfig\n): config is BuildConfigWithPathConfig =>\n  !!(config as BuildConfigWithPathConfig).path &&\n  typeof (config as BuildConfigWithPathConfig).path === 'string';\n\nexport const isBuildConfigWithoutPathConfig = (\n  config: BuildConfigConfig\n): config is BuildConfigWithoutPathConfig =>\n  !!(config as BuildConfigWithoutPathConfig).overrides &&\n  typeof (config as BuildConfigWithoutPathConfig).overrides === 'object';\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CanDeactivateGuard.html":{"url":"guards/CanDeactivateGuard.html","title":"guard - CanDeactivateGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    CanDeactivateGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                libs/common-ng/src/lib/can-deactivate/can-deactivate.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                            \n                                    Private\n                                isdeactivatable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canDeactivate\n                        \n                    \n                \n            \n            \n                \ncanDeactivate(component: DeactivatableComponent | )\n                \n            \n\n\n            \n                \n                    Defined in libs/common-ng/src/lib/can-deactivate/can-deactivate.guard.ts:28\n                \n            \n\n\n            \n                \n                    Returns if the component can be deactivated, or navigated away from by the user.\nIf the component does not have the canDeactivate method, then it automatically\nwill return true\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                DeactivatableComponent | \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isdeactivatable\n                        \n                    \n                \n            \n            \n                \n                    \n                    isdeactivatable(component)\n                \n            \n\n\n            \n                \n                    Defined in libs/common-ng/src/lib/can-deactivate/can-deactivate.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DeactivatableComponent\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { DeactivatableComponent } from './deactivatable-component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CanDeactivateGuard\n  implements CanDeactivate\n{\n  private isdeactivatable(\n    component: unknown\n  ): component is DeactivatableComponent {\n    return (\n      !!component &&\n      typeof component === 'object' &&\n      (component as DeactivatableComponent).canDeactivate &&\n      typeof (component as DeactivatableComponent).canDeactivate === 'function'\n    );\n  }\n  /**\n   * Returns if the component can be deactivated, or navigated away from by the user.\n   *\n   * If the component does not have the `canDeactivate` method, then it automatically\n   * will return true\n   */\n  canDeactivate(\n    component: DeactivatableComponent | unknown\n  ): Observable | Promise | boolean {\n    return this.isdeactivatable(component) ? component.canDeactivate() : true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonLogger.html":{"url":"classes/CommonLogger.html","title":"class - CommonLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/lib/utils/common-logger/common-logger.ts\n        \n\n\n            \n                Description\n            \n            \n                Simple but configurable logger. Should be used on the client-side\nand script situations\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hidden\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: CommonLoggerConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        CommonLoggerConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                \nconfiguration object\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommonLoggerConfig\n\n                    \n                \n                    \n                        \n                                Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:16\n                        \n                    \n\n            \n                \n                    - configuration object\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n\n                \n                    \n                        gethidden()\n                    \n                \n                            \n                                \n                                    Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:10\n                                \n                            \n                    \n                        \n                                The list of hidden methods, defined from the config object.\n\n\n                                \n                                    Returns :     Array\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { CommonLoggerConfig } from './common-logger-config';\n/**\n * Simple but configurable logger. Should be used on the client-side\n * and script situations\n */\nexport class CommonLogger {\n  /**\n   * The list of hidden methods, defined from the config object.\n   */\n  public get hidden(): Array {\n    return this.config?.hidden || [];\n  }\n  /**\n   * @param config - configuration object\n   */\n  constructor(public config?: CommonLoggerConfig) {}\n\n  error(message?: unknown, ...optionalParams: unknown[]): void {\n    if (this.hidden?.includes('error')) return;\n    console.error(message, ...optionalParams);\n  }\n\n  log(message?: unknown, ...optionalParams: unknown[]): void {\n    if (this.hidden?.includes('log')) return;\n    console.log(message, ...optionalParams);\n  }\n\n  debug(message?: unknown, ...optionalParams: unknown[]): void {\n    if (this.hidden?.includes('debug')) return;\n    console.debug(message, ...optionalParams);\n  }\n\n  warn(message?: unknown, ...optionalParams: unknown[]): void {\n    if (this.hidden?.includes('warn')) return;\n    console.warn(message, ...optionalParams);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonLoggerConfig.html":{"url":"interfaces/CommonLoggerConfig.html","title":"interface - CommonLoggerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CommonLoggerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/lib/utils/common-logger/common-logger-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration object for the common-logger.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hidden\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onLog\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hidden:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of hidden methods for the common-logger.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onLog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onLog:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Function that can be passed to \"hook\" into the emittions of logs\nover time.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        type LogLevels = 'log' | 'debug' | 'warn' | 'error';\n/**\n * Configuration object for the common-logger.\n */\nexport interface CommonLoggerConfig {\n  /**\n   * List of hidden methods for the common-logger.\n   */\n  hidden?: Array;\n\n  /**\n   * Function that can be passed to \"hook\" into the emittions of logs\n   * over time.\n   *\n   */\n  onLog?: (params: {\n    /**\n     * The level called\n     */\n    level: LogLevels;\n    /**\n     * The message given, usually a string\n     */\n    message: unknown;\n    /**\n     * The optional params given\n     */\n    optionalParams: Array;\n  }) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonNgrxModule.html":{"url":"modules/CommonNgrxModule.html","title":"module - CommonNgrxModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonNgrxModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common-ngrx/src/lib/common-ngrx.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class CommonNgrxModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/internal-ng/src/app/modules/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nx-workspace-template-dashboard\n            \n\n\n            \n                styles\n                \n      img {\n        max-width: 300px;\n        display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 50%;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'nx-workspace-template-dashboard',\n  templateUrl: './dashboard.component.html',\n  styles: [\n    `\n      img {\n        max-width: 300px;\n        display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 50%;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DashboardComponent {}\n\n    \n\n    \n        \n\n  \n    Dependency Graph\n    \n    \n    \n      \n        The dependency graph generated by\n        nx-cli\n        shows the how the different libraries of this project\n        are loaded and connect to each other.\n        It is very important to keep track of\n        what libraries use what.\n      \n    \n    \n      \n        link\n        View\n      \n    \n  \n\n  \n    Generated Docs\n    \n    \n      \n        The doc app is generated using\n        compodoc, and should include\n        all the generated docs for the entire codebase.\n      \n    \n    \n      \n        link\n        View\n      \n    \n  \n\n\n\n\n    \n\n    \n            \n      img {\n        max-width: 300px;\n        display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 50%;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Dependency Graph                          The dependency graph generated by        nx-cli        shows the how the different libraries of this project        are loaded and connect to each other.        It is very important to keep track of        what libraries use what.                            link        View                  Generated Docs                      The doc app is generated using        compodoc, and should include        all the generated docs for the entire codebase.                            link        View            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'nx-workspace-template-root'},{'name': 'DashboardComponent', 'selector': 'nx-workspace-template-dashboard'},{'name': 'MainComponent', 'selector': 'nx-workspace-template-main'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_exports\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nDashboardComponent \n\nDashboardComponent \n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/internal-ng/src/app/modules/dashboard/dashboard.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DashboardComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DashboardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { GridModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { DashboardComponent } from './dashboard.component';\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [\n    CommonModule,\n    // Angular Material\n    GridModule,\n    MatCardModule,\n    MatIconModule,\n    MatButtonModule,\n  ],\n  exports: [DashboardComponent],\n})\nexport class DashboardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DateDocument.html":{"url":"interfaces/DateDocument.html","title":"interface - DateDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DateDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/lib/models/date-document.ts\n        \n\n\n            \n                Description\n            \n            \n                A date document represents an object with 2 date properties,\ncreatedAt and updatedAt.\nThese properties are usually readonly and created by the database.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DateDocument {\n  createdAt: Date;\n  updatedAt?: Date;\n}\n\n// whitespace change again, again\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeactivatableComponent.html":{"url":"interfaces/DeactivatableComponent.html","title":"interface - DeactivatableComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DeactivatableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/can-deactivate/deactivatable-component.ts\n        \n\n\n            \n                Description\n            \n            \n                For component classes that work with the CanDeactivate guard, which will\nprevent a user from navigating away from a page.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        canDeactivate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canDeactivate\n                        \n                    \n                \n            \n            \n                \ncanDeactivate()\n                \n            \n\n\n            \n                \n                    Defined in libs/common-ng/src/lib/can-deactivate/deactivatable-component.ts:12\n                \n            \n\n\n            \n                \n                    If the user can navigate away from the page, then\nreturn a true value.\n\n\n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\n/**\n * For component classes that work with the `CanDeactivate` guard, which will\n * prevent a user from navigating away from a page.\n */\nexport interface DeactivatableComponent {\n  /**\n   * If the user can navigate away from the page, then\n   * return a true value.\n   */\n  canDeactivate(): Observable | Promise | boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DocumentWithId.html":{"url":"interfaces/DocumentWithId.html","title":"interface - DocumentWithId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DocumentWithId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/lib/models/id-document.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type DocumentId = string & { readonly brand: unique symbol };\nexport const DocumentId = (documentId: string): T =>\n  documentId as T;\n\nexport interface DocumentWithId {\n  id: T;\n}\n\n/**\n * Is a document with an id\n */\nexport const isDocumentWithId = (\n  doc: DocumentWithId | unknown\n): doc is DocumentWithId =>\n  typeof doc === 'object' &&\n  doc !== null &&\n  (doc as DocumentWithId).id !== undefined;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityTypeParams.html":{"url":"interfaces/EntityTypeParams.html","title":"interface - EntityTypeParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EntityTypeParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ngrx/src/lib/models/entity-type-params.ts\n        \n\n\n            \n                Description\n            \n            \n                This type is used to wrap type-params for all entity\nutilities. This is to cutdown on the amount of\ngenerics that need to be passed around\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            doc\n                                        \n                                \n                                \n                                        \n                                            docId\n                                        \n                                \n                                \n                                        \n                                            prefix\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        doc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        doc:     Doc\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Doc\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the document\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        docId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        docId:     DocId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the document-id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prefix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prefix:     Prefix\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Prefix\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The prefix string, usually TITLE_CASE\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { DocumentWithId } from '@nx-workspace-template/common';\n\n/**\n * This type is used to wrap type-params for all entity\n * utilities. This is to cutdown on the amount of\n * generics that need to be passed around\n */\nexport interface EntityTypeParams = Record & { id: DocId }\n> {\n  /**\n   * The prefix string, usually TITLE_CASE\n   */\n  prefix: Prefix;\n  /**\n   * The type of the document\n   */\n  doc: Doc;\n  /**\n   * The type of the document-id\n   */\n  docId: DocId;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalErrorHandler.html":{"url":"injectables/GlobalErrorHandler.html","title":"injectable - GlobalErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GlobalErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/logger/global-error-handler.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: NgLoggerService)\n                    \n                \n                        \n                            \n                                Defined in libs/common-ng/src/lib/logger/global-error-handler.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        NgLoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(err)\n                \n            \n\n\n            \n                \n                    Defined in libs/common-ng/src/lib/logger/global-error-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ErrorHandler, Injectable } from '@angular/core';\nimport { NgLoggerService } from '.';\n\n@Injectable()\nexport class GlobalErrorHandler implements ErrorHandler {\n  constructor(private logger: NgLoggerService) {}\n\n  handleError(err: unknown) {\n    this.logger.error(err);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpActionTypeParams.html":{"url":"interfaces/HttpActionTypeParams.html","title":"interface - HttpActionTypeParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HttpActionTypeParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ngrx/src/lib/util/http-action-type-params.ts\n        \n\n\n            \n                Description\n            \n            \n                \"Wrapper type\", used to define\nthe types for the htt-action-factory.\nnote the types are non-optimal, but for\nthe user-facing scheme it should work.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cancel\n                                        \n                                \n                                \n                                        \n                                            failure\n                                        \n                                \n                                \n                                        \n                                            request\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cancel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancel:     CancelPayload\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CancelPayload\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        failure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        failure:     FailurePayload\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FailurePayload\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        request\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        request:     RequestPayload\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RequestPayload\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:     SuccessPaylod\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SuccessPaylod\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HttpActionTypeParams {\n  request: RequestPayload;\n  success: SuccessPaylod;\n  failure: FailurePayload;\n  cancel: CancelPayload;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpLoadingInterceptor.html":{"url":"interceptors/HttpLoadingInterceptor.html","title":"interceptor - HttpLoadingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpLoadingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/http-loading/http-loading.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpLoadingState: HttpLoadingStateService)\n                    \n                \n                        \n                            \n                                Defined in libs/common-ng/src/lib/http-loading/http-loading.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpLoadingState\n                                                  \n                                                        \n                                                                        HttpLoadingStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in libs/common-ng/src/lib/http-loading/http-loading.interceptor.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { HttpLoadingStateService } from './http-loading.state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpLoadingInterceptor implements HttpInterceptor {\n  constructor(private httpLoadingState: HttpLoadingStateService) {}\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return next.handle(request).pipe(\n      tap({\n        next: (event) =>\n          event instanceof HttpResponse &&\n          this.httpLoadingState.setLoading(true),\n        error: () => this.httpLoadingState.setLoading(false),\n        complete: () => this.httpLoadingState.setLoading(false),\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpLoadingState.html":{"url":"interfaces/HttpLoadingState.html","title":"interface - HttpLoadingState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HttpLoadingState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/http-loading/http-loading.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            loading\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Flag that can be set to force loading to always be false.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If an http request is loading or not.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface HttpLoadingState {\n  /**\n   * If an http request is loading or not.\n   */\n  loading?: boolean;\n  /**\n   * Flag that can be set to **force** loading to always be false.\n   */\n  disabled?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpLoadingStateService.html":{"url":"injectables/HttpLoadingStateService.html","title":"injectable - HttpLoadingStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpLoadingStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/http-loading/http-loading.state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ComponentStore\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                loading$\n                            \n                            \n                                    Public\n                                    Readonly\n                                setDisabled\n                            \n                            \n                                    Public\n                                    Readonly\n                                setLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/common-ng/src/lib/http-loading/http-loading.state.service.ts:14\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.select((state) =>\n    state.disabled ? false : !!state.loading\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/common-ng/src/lib/http-loading/http-loading.state.service.ts:12\n                        \n                    \n\n            \n                \n                    If the http request is loading or not.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        setDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state, disabled: boolean) => ({\n    ...state,\n    disabled,\n  }))\n                    \n                \n                    \n                        \n                                Defined in libs/common-ng/src/lib/http-loading/http-loading.state.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        setLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state, loading: boolean) => ({\n    ...state,\n    loading,\n  }))\n                    \n                \n                    \n                        \n                                Defined in libs/common-ng/src/lib/http-loading/http-loading.state.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ComponentStore } from '@ngrx/component-store';\nimport { HttpLoadingState } from './http-loading.state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpLoadingStateService extends ComponentStore {\n  /**\n   * If the http request is loading or not.\n   */\n  public readonly loading$ = this.select((state) =>\n    state.disabled ? false : !!state.loading\n  );\n  constructor() {\n    super({});\n  }\n\n  public readonly setDisabled = this.updater((state, disabled: boolean) => ({\n    ...state,\n    disabled,\n  }));\n\n  public readonly setLoading = this.updater((state, loading: boolean) => ({\n    ...state,\n    loading,\n  }));\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/internal-ng/src/app/core/main/main.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nx-workspace-template-main\n            \n\n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                configService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: BuildConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/internal-ng/src/app/core/main/main.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        BuildConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BuildConfigService\n\n                    \n                \n                    \n                        \n                                Defined in apps/internal-ng/src/app/core/main/main.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BuildConfigService } from '@nx-workspace-template/common-ng';\n\n@Component({\n  selector: 'nx-workspace-template-main',\n  templateUrl: './main.component.html',\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MainComponent {\n  constructor(public configService: BuildConfigService) {}\n}\n\n    \n\n    \n        \n  \n    \n\n      \n        \n          menu\n        \n        \n          nx-workspace-template\n        \n      \n\n      \n        \n          \n            {{config.revision}}\n          \n        \n      \n\n    \n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              menu                          nx-workspace-template                                                  {{config.revision}}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'nx-workspace-template-root'},{'name': 'DashboardComponent', 'selector': 'nx-workspace-template-dashboard'},{'name': 'MainComponent', 'selector': 'nx-workspace-template-main'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainModule.html":{"url":"modules/MainModule.html","title":"module - MainModule","body":"\n                   \n\n\n\n\n    Modules\n    MainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MainModule\n\n\n\ncluster_MainModule_declarations\n\n\n\ncluster_MainModule_exports\n\n\n\n\nMainComponent\n\nMainComponent\n\n\n\nMainModule\n\nMainModule\n\nMainModule -->\n\nMainComponent->MainModule\n\n\n\n\n\nMainComponent \n\nMainComponent \n\nMainComponent  -->\n\nMainModule->MainComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/internal-ng/src/app/core/main/main.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MainComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveComponentModule } from '@ngrx/component';\nimport { MainComponent } from './main.component';\n@NgModule({\n  declarations: [MainComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveComponentModule,\n    // Angular Material\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatChipsModule,\n  ],\n  exports: [MainComponent],\n})\nexport class MainModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgLoggerModule.html":{"url":"modules/NgLoggerModule.html","title":"module - NgLoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    NgLoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NgLoggerModule\n\n\n\ncluster_NgLoggerModule_providers\n\n\n\n\nNgLoggerService\n\nNgLoggerService\n\n\n\nNgLoggerModule\n\nNgLoggerModule\n\nNgLoggerModule -->\n\nNgLoggerService->NgLoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common-ng/src/lib/logger/ng-logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NgLoggerService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: CommonLoggerConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/common-ng/src/lib/logger/ng-logger.module.ts:15\n                \n            \n\n\n            \n                \n                    Setup configurations with the ng-logger-service\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                CommonLoggerConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgLoggerService } from './ng-logger.service';\nimport { CommonLoggerConfig } from '@nx-workspace-template/common';\nimport { NG_LOGGER_CONFIG } from './ng-logger-config';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [NgLoggerService],\n})\nexport class NgLoggerModule {\n  /**\n   * Setup configurations with the ng-logger-service\n   */\n  static forRoot(\n    config: CommonLoggerConfig\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgLoggerModule,\n      providers: [\n        NgLoggerService,\n        {\n          provide: NG_LOGGER_CONFIG,\n          useValue: config,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgLoggerService.html":{"url":"injectables/NgLoggerService.html","title":"injectable - NgLoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/logger/ng-logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CommonLogger\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgLoggerConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/common-ng/src/lib/logger/ng-logger.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgLoggerConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Inherited from         CommonLogger\n\n                \n            \n            \n                \n                        Defined in         CommonLogger:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Inherited from         CommonLogger\n\n                \n            \n            \n                \n                        Defined in         CommonLogger:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Inherited from         CommonLogger\n\n                \n            \n            \n                \n                        Defined in         CommonLogger:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Inherited from         CommonLogger\n\n                \n            \n            \n                \n                        Defined in         CommonLogger:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgLoggerConfig\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(NG_LOGGER_CONFIG)@Optional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CommonLogger\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonLogger:10\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@angular/core';\nimport { CommonLogger } from '@nx-workspace-template/common';\nimport { NgLoggerConfig, NG_LOGGER_CONFIG } from './ng-logger-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgLoggerService extends CommonLogger {\n  constructor(\n    @Inject(NG_LOGGER_CONFIG) @Optional() public config: NgLoggerConfig\n  ) {\n    super(config);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouteLoadingState.html":{"url":"interfaces/RouteLoadingState.html","title":"interface - RouteLoadingState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RouteLoadingState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/route-loading/route-loading.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            loading\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Flag that can be set to force loading to always be false.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If navigation is loading or not.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface RouteLoadingState {\n  /**\n   * If navigation is loading or not.\n   */\n  loading?: boolean;\n  /**\n   * Flag that can be set to **force** loading to always be false.\n   */\n  disabled?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RouteLoadingStateService.html":{"url":"injectables/RouteLoadingStateService.html","title":"injectable - RouteLoadingStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RouteLoadingStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/route-loading/route-loading.state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ComponentStore\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                loading$\n                            \n                            \n                                    Public\n                                    Readonly\n                                setDisabled\n                            \n                            \n                                    Public\n                                    Readonly\n                                setLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in libs/common-ng/src/lib/route-loading/route-loading.state.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.select((state) => state.loading)\n                    \n                \n                    \n                        \n                                Defined in libs/common-ng/src/lib/route-loading/route-loading.state.service.ts:19\n                        \n                    \n\n            \n                \n                    If the navigation is loading or not.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        setDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state, disabled: boolean) => ({\n    ...state,\n    disabled,\n  }))\n                    \n                \n                    \n                        \n                                Defined in libs/common-ng/src/lib/route-loading/route-loading.state.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        setLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state, loading: boolean) => ({\n    ...state,\n    loading,\n  }))\n                    \n                \n                    \n                        \n                                Defined in libs/common-ng/src/lib/route-loading/route-loading.state.service.ts:42\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  GuardsCheckEnd,\n  NavigationEnd,\n  NavigationStart,\n  Router,\n} from '@angular/router';\nimport { ComponentStore } from '@ngrx/component-store';\nimport { filter, map } from 'rxjs';\nimport { RouteLoadingState } from './route-loading.state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RouteLoadingStateService extends ComponentStore {\n  /**\n   * If the navigation is loading or not.\n   */\n  public readonly loading$ = this.select((state) => state.loading);\n\n  constructor(private router: Router) {\n    super({});\n    this.router.events\n      .pipe(\n        map((event) => {\n          if (event instanceof NavigationStart) return true;\n          if (event instanceof NavigationEnd) return false;\n          if (event instanceof GuardsCheckEnd) return false;\n          // null is a special value to prevent emittions of extra changes\n          return null;\n        }),\n        filter((loading) => loading !== null)\n      )\n      .subscribe((loading) => this.setLoading(!!loading));\n  }\n\n  public readonly setDisabled = this.updater((state, disabled: boolean) => ({\n    ...state,\n    disabled,\n  }));\n\n  public readonly setLoading = this.updater((state, loading: boolean) => ({\n    ...state,\n    loading,\n  }));\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScriptLoaderInitScripts.html":{"url":"interfaces/ScriptLoaderInitScripts.html","title":"interface - ScriptLoaderInitScripts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScriptLoaderInitScripts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/script-loader/src/lib/script-loader-init-scripts.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            scripts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        scripts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scripts:         ScriptParams[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ScriptParams[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ScriptParams } from './script-params';\n\nexport interface ScriptLoaderInitScripts {\n  scripts: ScriptParams[];\n}\nexport const SCRIPT_LOADER_INIT_SCRIPTS =\n  new InjectionToken('SCRIPT_LOADER_INIT_SCRIPTS');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScriptLoaderModule.html":{"url":"modules/ScriptLoaderModule.html","title":"module - ScriptLoaderModule","body":"\n                   \n\n\n\n\n    Modules\n    ScriptLoaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ScriptLoaderModule\n\n\n\ncluster_ScriptLoaderModule_providers\n\n\n\n\nScriptLoaderService\n\nScriptLoaderService\n\n\n\nScriptLoaderModule\n\nScriptLoaderModule\n\nScriptLoaderModule -->\n\nScriptLoaderService->ScriptLoaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/script-loader/src/lib/script-loader.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ScriptLoaderService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(params?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/script-loader/src/lib/script-loader.module.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ScriptLoaderService } from './script-loader.service';\nimport { ScriptParams } from './script-params';\nimport { SCRIPT_LOADER_INIT_SCRIPTS } from './script-loader-init-scripts';\nimport { SCRIPT_LOADER_LOADED } from './script-loader-loaded';\nimport { ReplaySubject } from 'rxjs';\n\n@NgModule({\n  providers: [\n    ScriptLoaderService,\n    {\n      provide: SCRIPT_LOADER_LOADED,\n      useValue: new ReplaySubject(1),\n    },\n  ],\n})\nexport class ScriptLoaderModule {\n  // **note** this is injected so the script loader service is setup, but handles everything internally\n  constructor(private scriptLoaderService: ScriptLoaderService) {}\n  public static forRoot(params?: {\n    /**\n     * Scripts to load automatically.\n     */\n    scripts?: ScriptParams[];\n  }): ModuleWithProviders {\n    return {\n      ngModule: ScriptLoaderModule,\n      providers: [\n        ScriptLoaderService,\n        // setup init scripts, if given\n        params && params.scripts\n          ? {\n              provide: SCRIPT_LOADER_INIT_SCRIPTS,\n              useValue: {\n                scripts: params.scripts,\n              },\n            }\n          : [],\n        // loaded event emitter, if there is one\n        {\n          provide: SCRIPT_LOADER_LOADED,\n          useValue: new ReplaySubject(1),\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScriptLoaderService.html":{"url":"injectables/ScriptLoaderService.html","title":"injectable - ScriptLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ScriptLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/script-loader/src/lib/script-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                scriptsLoaded$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                load\n                            \n                            \n                                    Public\n                                    Async\n                                loadScripts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document, scriptLoaderLoaded: ReplaySubject, initScripts: ScriptLoaderInitScripts)\n                    \n                \n                        \n                            \n                                Defined in libs/script-loader/src/lib/script-loader.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scriptLoaderLoaded\n                                                  \n                                                        \n                                                                    ReplaySubject\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        initScripts\n                                                  \n                                                        \n                                                                        ScriptLoaderInitScripts\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                    \n                    load(script: ScriptParams)\n                \n            \n\n\n            \n                \n                    Defined in libs/script-loader/src/lib/script-loader.service.ts:57\n                \n            \n\n\n            \n                \n                    Loads the individual scripts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    script\n                                    \n                                                ScriptParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        loadScripts\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadScripts(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/script-loader/src/lib/script-loader.service.ts:42\n                \n            \n\n\n            \n                \n                    Loads the list of scripts.\nDoes not currently check to see if they are already loaded!\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        scriptsLoaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject\n  >([])\n                    \n                \n                    \n                        \n                                Defined in libs/script-loader/src/lib/script-loader.service.ts:16\n                        \n                    \n\n            \n                \n                    List of scripts already loaded\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { BehaviorSubject, ReplaySubject } from 'rxjs';\nimport {\n  ScriptLoaderInitScripts,\n  SCRIPT_LOADER_INIT_SCRIPTS,\n} from './script-loader-init-scripts';\nimport { SCRIPT_LOADER_LOADED } from './script-loader-loaded';\nimport { ScriptParams } from './script-params';\n\n@Injectable()\nexport class ScriptLoaderService {\n  /**\n   * List of scripts already loaded\n   */\n  public scriptsLoaded$ = new BehaviorSubject\n  >([]);\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n\n    @Inject(SCRIPT_LOADER_LOADED)\n    scriptLoaderLoaded: ReplaySubject,\n\n    @Inject(SCRIPT_LOADER_INIT_SCRIPTS)\n    @Optional()\n    initScripts: ScriptLoaderInitScripts\n  ) {\n    if (initScripts) {\n      this.loadScripts(initScripts).then(() => scriptLoaderLoaded.next(true));\n    } else {\n      scriptLoaderLoaded.next(true);\n    }\n  }\n  /**\n   * Loads the list of scripts.\n   * **Does not currently check to see if they are already loaded!**\n   */\n  public async loadScripts(params: {\n    /**\n     * The list of script sources\n     */\n    scripts: ScriptParams[];\n  }): Promise {\n    const { scripts } = params;\n    if (!scripts) {\n      return [];\n    }\n    return Promise.all(scripts.map((script) => this.load(script)));\n  }\n  /**\n   * Loads the individual scripts\n   */\n  private async load(script: ScriptParams): Promise {\n    const { src, async, preLoad, callback } = script;\n    const existingScriptLoaded = this.scriptsLoaded$.value.find(\n      (scriptsLoaded) => scriptsLoaded.src === src\n    );\n    if (existingScriptLoaded) {\n      // if the script is already loaded, skip it;\n      return existingScriptLoaded.element;\n    }\n    // otherwise, create and add it\n    const scriptElement = this.document.createElement('script');\n    this.scriptsLoaded$.next([\n      ...this.scriptsLoaded$.value,\n      {\n        element: scriptElement,\n        src,\n      },\n    ]);\n    if (typeof preLoad === 'function') {\n      preLoad();\n    }\n    scriptElement.setAttribute('src', src);\n    scriptElement.setAttribute('async', '' + async);\n    const head = this.document.getElementsByTagName('head')[0];\n    const promise = new Promise((resolve) => (scriptElement.onload = resolve));\n    head.appendChild(scriptElement);\n    return promise\n      .then(() => {\n        if (typeof callback === 'function') {\n          callback();\n        }\n        return;\n      })\n      .then(() => scriptElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScriptParams.html":{"url":"interfaces/ScriptParams.html","title":"interface - ScriptParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScriptParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/script-loader/src/lib/script-params.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            async\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            callback\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            preLoad\n                                        \n                                \n                                \n                                        \n                                            src\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        async\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        async:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Function to call after the script is loaded\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preLoad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preLoad:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Function to call BEFORE\nthe script is loaded\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ScriptParams {\n  src: string;\n  async?: boolean;\n  /**\n   * Function to call BEFORE\n   * the script is loaded\n   */\n  preLoad?: () => void;\n  /**\n   * Function to call after the script is loaded\n   */\n  callback?: () => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/internal-ng-e2e/src/support/app.po.ts\n            \n            variable\n            getGreeting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/internal-ng/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/internal-ng/src/app/core/main/main.component.ts\n            \n            component\n            MainComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/internal-ng/src/app/modules/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/internal-ng/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/internal-ng/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/build-config/build-config-config.ts\n            \n            interface\n            BuildConfigWithoutPathConfig\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/build-config/build-config-config.ts\n            \n            interface\n            BuildConfigWithPathConfig\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/build-config/build-config-config.ts\n            \n            variable\n            BUILD_CONFIG_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/build-config/build-config-config.ts\n            \n            variable\n            isBuildConfigWithoutPathConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/build-config/build-config-config.ts\n            \n            variable\n            isBuildConfigWithPathConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/build-config/build-config.service.ts\n            \n            injectable\n            BuildConfigService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/build-config/build-config.ts\n            \n            interface\n            BuildConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/build-config/build-config.ts\n            \n            variable\n            BUILD_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/can-deactivate/can-deactivate.guard.ts\n            \n            guard\n            CanDeactivateGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/can-deactivate/deactivatable-component.ts\n            \n            interface\n            DeactivatableComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/http-loading/http-loading.interceptor.ts\n            \n            interceptor\n            HttpLoadingInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/http-loading/http-loading.state.service.ts\n            \n            injectable\n            HttpLoadingStateService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/http-loading/http-loading.state.ts\n            \n            interface\n            HttpLoadingState\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/logger/global-error-handler.ts\n            \n            injectable\n            GlobalErrorHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/logger/ng-logger-config.ts\n            \n            variable\n            NG_LOGGER_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/logger/ng-logger.service.ts\n            \n            injectable\n            NgLoggerService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/nav/common-ng-router-options.ts\n            \n            variable\n            COMMON_NG_ROUTER_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/nav/get-final-child.ts\n            \n            variable\n            getFinalChild\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/route-loading/route-loading.state.service.ts\n            \n            injectable\n            RouteLoadingStateService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/route-loading/route-loading.state.ts\n            \n            interface\n            RouteLoadingState\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/rxjs/retry-with-backoff.ts\n            \n            function\n            retryWithBackOff\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common-ngrx/src/lib/entity/entity-action-factory.ts\n            \n            variable\n            entityActionFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common-ngrx/src/lib/models/entity-type-params.ts\n            \n            interface\n            EntityTypeParams\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                libs/common-ngrx/src/lib/util/http-action-factory.ts\n            \n            variable\n            httpActionFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common-ngrx/src/lib/util/http-action-type-params.ts\n            \n            interface\n            HttpActionTypeParams\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                libs/common/src/lib/models/date-document.ts\n            \n            interface\n            DateDocument\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/common/src/lib/models/id-document.ts\n            \n            interface\n            DocumentWithId\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/lib/models/id-document.ts\n            \n            variable\n            DocumentId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/lib/models/id-document.ts\n            \n            variable\n            isDocumentWithId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common/src/lib/utils/common-logger/common-logger-config.ts\n            \n            interface\n            CommonLoggerConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/common/src/lib/utils/common-logger/common-logger.ts\n            \n            class\n            CommonLogger\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                libs/common/src/lib/utils/get-id.ts\n            \n            variable\n            getId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common/src/lib/utils/is-indexable-value.ts\n            \n            variable\n            isIndexableValue\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common/src/lib/utils/remove-duplicates.ts\n            \n            variable\n            removeDuplicates\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common/src/lib/utils/to-map.ts\n            \n            variable\n            toMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/gh-codespaces/src/lib/util/get-codespace-name.ts\n            \n            variable\n            getCodespaceName\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/gh-codespaces/src/lib/util/is-codespace.ts\n            \n            variable\n            isCodespace\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/gh-codespaces/src/lib/util/normalize-codespace-root-path.ts\n            \n            variable\n            normalizeCodespaceRootPath\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/script-loader/src/lib/script-loader-init-scripts.ts\n            \n            interface\n            ScriptLoaderInitScripts\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/script-loader/src/lib/script-loader-init-scripts.ts\n            \n            variable\n            SCRIPT_LOADER_INIT_SCRIPTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/script-loader/src/lib/script-loader-loaded.ts\n            \n            variable\n            SCRIPT_LOADER_LOADED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/script-loader/src/lib/script-loader.service.ts\n            \n            injectable\n            ScriptLoaderService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                libs/script-loader/src/lib/script-params.ts\n            \n            interface\n            ScriptParams\n            \n                40 %\n                (2/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^13.0.0\n        \n            @angular/cdk : ^13.0.2\n        \n            @angular/common : ^13.0.0\n        \n            @angular/compiler : ^13.0.0\n        \n            @angular/core : ^13.0.0\n        \n            @angular/flex-layout : ^12.0.0-beta.35\n        \n            @angular/forms : ^13.0.0\n        \n            @angular/material : ^13.0.2\n        \n            @angular/platform-browser : ^13.0.0\n        \n            @angular/platform-browser-dynamic : ^13.0.0\n        \n            @angular/router : ^13.0.0\n        \n            @ngrx/component : ^13.0.1\n        \n            @ngrx/component-store : ^13.0.2\n        \n            @ngrx/effects : ^13.0.1\n        \n            @ngrx/entity : ^13.0.1\n        \n            @ngrx/router-store : ^13.0.1\n        \n            @ngrx/store : ^13.0.1\n        \n            @ngrx/store-devtools : ^13.0.1\n        \n            rxjs : ~7.4.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            retryWithBackOff   (libs/.../retry-with-backoff.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/common-ng/src/lib/rxjs/retry-with-backoff.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        retryWithBackOff\n                        \n                    \n                \n            \n            \n                \nretryWithBackOff(params?)\n                \n            \n\n\n\n\n            \n                \n                    Taken from:\nhttps://medium.com/angular-in-depth/retry-failed-http-requests-in-angular-f5959d486294\nRetry with exponential back-off.\nDefaults\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNxWorkspaceTemplate\nThis is a template repository that can be used to jump start\ndevelopment on nx-workspace based projects.\nMost tooling can be used as-is, this repo only includes extra\nsupporting files for codespaces\ndevelopment, using github-actions, with example deployment pipelines\nfor firebase, GCP App Engine, github pages and digital-ocean app platform.\nLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 Brad\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BuildConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonNgrxModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgLoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScriptLoaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_exports\n\n\n\ncluster_MainModule\n\n\n\ncluster_MainModule_declarations\n\n\n\ncluster_MainModule_exports\n\n\n\ncluster_NgLoggerModule\n\n\n\ncluster_NgLoggerModule_providers\n\n\n\ncluster_ScriptLoaderModule\n\n\n\ncluster_ScriptLoaderModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nBuildConfigModule\n\nBuildConfigModule\n\nAppModule -->\n\nBuildConfigModule->AppModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nDashboardComponent \n\nDashboardComponent \n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\n\n\nMainModule\n\nMainModule\n\nAppModule -->\n\nMainModule->AppModule\n\n\n\n\n\nMainComponent \n\nMainComponent \n\nMainComponent  -->\n\nMainModule->MainComponent \n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nMainModule -->\n\nMainComponent->MainModule\n\n\n\n\n\nNgLoggerService\n\nNgLoggerService\n\n\n\nNgLoggerModule\n\nNgLoggerModule\n\nNgLoggerModule -->\n\nNgLoggerService->NgLoggerModule\n\n\n\n\n\nScriptLoaderService\n\nScriptLoaderService\n\n\n\nScriptLoaderModule\n\nScriptLoaderModule\n\nScriptLoaderModule -->\n\nScriptLoaderService->ScriptLoaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BuildConfigConfig   (libs/.../build-config-config.ts)\n                        \n                        \n                            DocumentId   (libs/.../id-document.ts)\n                        \n                        \n                            EntityActions   (libs/.../entity-actions.ts)\n                        \n                        \n                            LogLevels   (libs/.../common-logger-config.ts)\n                        \n                        \n                            NgLoggerConfig   (libs/.../ng-logger-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/common-ng/src/lib/build-config/build-config-config.ts\n    \n    \n        \n            \n                \n                    \n                    BuildConfigConfig\n                \n            \n            \n                \n                    The build-config configuration. Can be used to provide overrides of\nthe config file, and customize the actual build-config service behavior.\n\n                \n            \n            \n                \n                        BuildConfigWithPathConfig | BuildConfigWithoutPathConfig\n\n                \n            \n        \n    \n    libs/common/src/lib/models/id-document.ts\n    \n    \n        \n            \n                \n                    \n                    DocumentId\n                \n            \n            \n                \n                    Generic document-id. Used for generic testing and documents.\nYou shouldn't use this directly, instead use\nbranded types.\nThis is also a TS-level feature\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/common-ngrx/src/lib/entity/entity-actions.ts\n    \n    \n        \n            \n                \n                    \n                    EntityActions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    libs/common/src/lib/utils/common-logger/common-logger-config.ts\n    \n    \n        \n            \n                \n                    \n                    LogLevels\n                \n            \n            \n                \n                        \"log\" | \"debug\" | \"warn\" | \"error\"\n\n                \n            \n        \n    \n    libs/common-ng/src/lib/logger/ng-logger-config.ts\n    \n    \n        \n            \n                \n                    \n                    NgLoggerConfig\n                \n            \n            \n                \n                            CommonLoggerConfig\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BUILD_CONFIG   (libs/.../build-config.ts)\n                        \n                        \n                            BUILD_CONFIG_CONFIG   (libs/.../build-config-config.ts)\n                        \n                        \n                            COMMON_NG_ROUTER_OPTIONS   (libs/.../common-ng-router-options.ts)\n                        \n                        \n                            DocumentId   (libs/.../id-document.ts)\n                        \n                        \n                            entityActionFactory   (libs/.../entity-action-factory.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            getCodespaceName   (libs/.../get-codespace-name.ts)\n                        \n                        \n                            getFinalChild   (libs/.../get-final-child.ts)\n                        \n                        \n                            getGreeting   (apps/.../app.po.ts)\n                        \n                        \n                            getId   (libs/.../get-id.ts)\n                        \n                        \n                            httpActionFactory   (libs/.../http-action-factory.ts)\n                        \n                        \n                            isBuildConfigWithoutPathConfig   (libs/.../build-config-config.ts)\n                        \n                        \n                            isBuildConfigWithPathConfig   (libs/.../build-config-config.ts)\n                        \n                        \n                            isCodespace   (libs/.../is-codespace.ts)\n                        \n                        \n                            isDocumentWithId   (libs/.../id-document.ts)\n                        \n                        \n                            isIndexableValue   (libs/.../is-indexable-value.ts)\n                        \n                        \n                            NG_LOGGER_CONFIG   (libs/.../ng-logger-config.ts)\n                        \n                        \n                            normalizeCodespaceRootPath   (libs/.../normalize-codespace-root-path.ts)\n                        \n                        \n                            removeDuplicates   (libs/.../remove-duplicates.ts)\n                        \n                        \n                            SCRIPT_LOADER_INIT_SCRIPTS   (libs/.../script-loader-init-scripts.ts)\n                        \n                        \n                            SCRIPT_LOADER_LOADED   (libs/.../script-loader-loaded.ts)\n                        \n                        \n                            toMap   (libs/.../to-map.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/common-ng/src/lib/build-config/build-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BUILD_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('NG_CONFIG')\n                    \n                \n\n\n        \n    \n\n    libs/common-ng/src/lib/build-config/build-config-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BUILD_CONFIG_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'BUILD_CONFIG_CONFIG'\n)\n                    \n                \n\n            \n                \n                    Token that represents the configuration of the \"build-config\" service.\nUsed to override the build config, and specify the path to the build config file.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBuildConfigWithoutPathConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  config: BuildConfigConfig\n): config is BuildConfigWithoutPathConfig =>\n  !!(config as BuildConfigWithoutPathConfig).overrides &&\n  typeof (config as BuildConfigWithoutPathConfig).overrides === 'object'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBuildConfigWithPathConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  config: BuildConfigConfig\n): config is BuildConfigWithPathConfig =>\n  !!(config as BuildConfigWithPathConfig).path &&\n  typeof (config as BuildConfigWithPathConfig).path === 'string'\n                    \n                \n\n\n        \n    \n\n    libs/common-ng/src/lib/nav/common-ng-router-options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        COMMON_NG_ROUTER_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExtraOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  paramsInheritanceStrategy: 'always',\n}\n                    \n                \n\n            \n                \n                    Common settings that should be activated for all Angular projects.\n\n                \n            \n\n        \n    \n\n    libs/common/src/lib/models/id-document.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DocumentId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (documentId: string): T =>\n  documentId as T\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDocumentWithId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  doc: DocumentWithId | unknown\n): doc is DocumentWithId =>\n  typeof doc === 'object' &&\n  doc !== null &&\n  (doc as DocumentWithId).id !== undefined\n                    \n                \n\n            \n                \n                    Is a document with an id\n\n                \n            \n\n        \n    \n\n    libs/common-ngrx/src/lib/entity/entity-action-factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        entityActionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  prefix: TypeParams['prefix']\n): EntityActions => ({\n  get: createAction(\n    `[${prefix}] Get`,\n    props()\n  ),\n  getSuccess: createAction(\n    `[${prefix}] Get Success`,\n    props()\n  ),\n  getFailed: createAction(\n    `[${prefix}] Get Failed`,\n    props()\n  ),\n  getCancel: createAction(`[${prefix}] Get Cancel`),\n\n  create: createAction(\n    `[${prefix}] Create`,\n    props;\n    }>()\n  ),\n  createSuccess: createAction(\n    `[${prefix}] Create Success`,\n    props()\n  ),\n  createFailed: createAction(\n    `[${prefix}] Create Failed`,\n    props()\n  ),\n  createCancel: createAction(`[${prefix}] Create Cancel`),\n\n  update: createAction(\n    `[${prefix}] Update`,\n    props()\n  ),\n  updateSuccess: createAction(\n    `[${prefix}] Update Success`,\n    props()\n  ),\n  updateFailed: createAction(\n    `[${prefix}] Update Failed`,\n    props()\n  ),\n  updateCancel: createAction(`[${prefix}] Update Cancel`),\n\n  delete: createAction(\n    `[${prefix}] Delete`,\n    props()\n  ),\n  deleteSuccess: createAction(\n    `[${prefix}] Delete Success`,\n    props()\n  ),\n  deleteFailed: createAction(\n    `[${prefix}] Delete Failed`,\n    props()\n  ),\n  deleteCancel: createAction(`[${prefix}] Delete Cancel`),\n  // TODO: add bulk actions\n})\n                    \n                \n\n            \n                \n                    Returns a list of common actions for an entity.\n\n                \n            \n\n        \n    \n\n    apps/internal-ng/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n}\n                    \n                \n\n\n        \n    \n\n    apps/internal-ng/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n}\n                    \n                \n\n\n        \n    \n\n    libs/gh-codespaces/src/lib/util/get-codespace-name.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCodespaceName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (env: Record): string =>\n  env.CODESPACE_NAME\n                    \n                \n\n            \n                \n                    Returns the codespace name from the env, should be passed\nthe process.env from nodejs.\n\n                \n            \n\n        \n    \n\n    libs/common-ng/src/lib/nav/get-final-child.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getFinalChild\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (root: ActivatedRoute) => {\n  let child = root;\n  while (child.firstChild) child = child.firstChild;\n  return child;\n}\n                    \n                \n\n            \n                \n                    Function that can be used to get the \"final child\" in the route.\nCan be mixed with the ExtraOptions's paramsInheritanceStrategy \"always\"\nsetting passed to the RouterModule.\nCommon settings are available via COMMON_NG_ROUTER_OPTIONS\n\n                \n            \n\n        \n    \n\n    apps/internal-ng-e2e/src/support/app.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getGreeting\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('h1')\n                    \n                \n\n\n        \n    \n\n    libs/common/src/lib/utils/get-id.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  id: string | DocumentId | DocumentWithId\n): T | '' => {\n  if (!id) {\n    return '';\n  }\n  if (typeof id === 'string') {\n    return DocumentId(id);\n  }\n  if (isDocumentWithId(id)) {\n    return DocumentId(id.id);\n  }\n  return '';\n}\n                    \n                \n\n            \n                \n                    Utility function to get id information\nnote assumes the id of the document is\n\n                \n            \n\n        \n    \n\n    libs/common-ngrx/src/lib/util/http-action-factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpActionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ({\n  prefix,\n  action,\n}: {\n  prefix: TypeParams['prefix'];\n  action: Action;\n}): [\n  FunctionWithParametersType &\n    TypedAction,\n  FunctionWithParametersType &\n    TypedAction,\n  FunctionWithParametersType &\n    TypedAction,\n  FunctionWithParametersType &\n    TypedAction\n] => [\n  createAction(`[${prefix}] ${action} Request`, props()),\n  createAction(`[${prefix}] ${action} Success`, props()),\n  createAction(`[${prefix}] ${action} Failed`, props()),\n  createAction(`[${prefix}] ${action} Cancel`, props()),\n]\n                    \n                \n\n            \n                \n                    Function that that returns 4 actions.\n\n\"request\" action\n\"success\" action\n\"Failed\" action\n\"cancel\" action\n\nThese 4 can be used to create other ngrx actions flows, and aren't only\nisolated to just HTTP requests.\n\n                \n            \n\n        \n    \n\n    libs/gh-codespaces/src/lib/util/is-codespace.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isCodespace\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (env: Record) =>\n  env.CODESPACES === 'true'\n                    \n                \n\n            \n                \n                    Returns if we are in a codespace from the env, which\nshould be passed the poccess.env, as we look if\nthere is an environment variable of CODESPACES=true\n\n                \n            \n\n        \n    \n\n    libs/common/src/lib/utils/is-indexable-value.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isIndexableValue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  value: unknown\n): value is string | symbol | number =>\n  typeof value === 'string' ||\n  typeof value === 'symbol' ||\n  typeof value === 'number'\n                    \n                \n\n            \n                \n                    Type-guard that can be used on individual entities, to verify\nthey can be a \"key\" in a Record<> type.\n\n                \n            \n\n        \n    \n\n    libs/common-ng/src/lib/logger/ng-logger-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NG_LOGGER_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'NG_LOGGER_CONFIG'\n)\n                    \n                \n\n\n        \n    \n\n    libs/gh-codespaces/src/lib/util/normalize-codespace-root-path.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        normalizeCodespaceRootPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ({\n  codespaceName,\n  port,\n}: {\n  /**\n   * The name of the codespace, available from the environment variables\n   * in a codespace via `CODESPACE_NAME`\n   */\n  codespaceName: string;\n  /**\n   * The port number we are to append to the end of the codespaceURL.\n   */\n  port: number | string;\n}) => `https://${codespaceName}-${port}.githubpreview.dev/`\n                    \n                \n\n            \n                \n                    Returns the normalized codespace path, from the given params.\nGenerally used on the back-end for oauth redirects, will require\nwork with the console documentation for supported domains.\nnote still a WIP and needs testing to see if this is a viable\napproach to support oauth redirects in a codespace.\n\n                \n            \n\n        \n    \n\n    libs/common/src/lib/utils/remove-duplicates.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        removeDuplicates\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (arr: Array): Array => {\n  if (!arr) {\n    return [];\n  }\n  return Array.from(arr.reduce((acc, el) => acc.add(el), new Set()));\n}\n                    \n                \n\n            \n                \n                    Removes duplicates using a set\n\n                \n            \n\n        \n    \n\n    libs/script-loader/src/lib/script-loader-init-scripts.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SCRIPT_LOADER_INIT_SCRIPTS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('SCRIPT_LOADER_INIT_SCRIPTS')\n                    \n                \n\n\n        \n    \n\n    libs/script-loader/src/lib/script-loader-loaded.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SCRIPT_LOADER_LOADED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>(\n  'SCRIPT_LOADER_LOADED'\n)\n                    \n                \n\n            \n                \n                    Injection token of the observable fired when init scripts are loaded\n\n                \n            \n\n        \n    \n\n    libs/common/src/lib/utils/to-map.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toMap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ,\n  Key extends keyof Entity,\n  TypeOfKey extends string\n>(\n  entities: Entity[],\n  key?: Key\n): Record => {\n  type RecordKey = (Entity[Key] & string) | symbol | number;\n  if (!entities) return {} as Record;\n\n  return entities.reduce((acc, entity) => {\n    const keyValue = entity[key || 'id'];\n    if (isIndexableValue(keyValue)) acc[keyValue as RecordKey] = entity;\n    return acc;\n  }, {} as Record);\n}\n                    \n                \n\n            \n                \n                    Generic map function used to convert an array to\na map with the given key. All ids are automatically converted to ids\nin the return mapping\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
