var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/CommonLogger.html",[0,0.878,1,1.659]],["body/classes/CommonLogger.html",[0,0.621,1,1.757,2,1.987,3,0.361,4,0.361,5,0.308,6,2.801,7,2.801,8,1.609,9,1.535,10,2.974,11,2.974,12,1.428,13,1.35,14,2.974,15,2.974,16,1.535,17,2.974,18,0.361,19,0.819,20,2.106,21,1.632,22,3.244,23,1.796,24,1.757,25,1.757,26,1.757,27,1.757,28,2.974,29,3.431,30,1.36,31,1.609,32,1.923,33,2.501,34,1.987,35,2.187,36,0.049,37,1.923,38,0.58,39,2.9,40,2.886,41,2.187,42,1.987,43,2.408,44,3.6,45,1.987,46,2.708,47,1.923,48,2.801,49,2.408,50,1.987,51,2.408,52,1.987,53,2.408,54,1.987,55,1.987,56,1.987,57,1.757,58,2.036,59,0.704,60,1.36,61,0.361,62,2.187,63,1.987,64,1.987,65,1.987,66,2.801,67,1.987,68,1.987,69,1.987,70,1.987,71,1.987,72,1.987,73,1.987,74,1.987,75,0.017,76,0.025,77,0.017]],["title/interfaces/CommonLoggerConfig.html",[32,1.275,78,0.366]],["body/interfaces/CommonLoggerConfig.html",[3,0.507,4,0.507,5,0.433,6,1.649,7,1.649,9,1.44,12,1.935,18,0.507,19,1.044,21,1.71,23,1.721,24,1.649,25,1.649,26,1.649,27,1.649,29,4.033,32,1.721,36,0.049,38,0.561,40,3.07,41,1.957,44,1.91,46,2.595,48,1.649,57,2.24,58,3.161,60,3.161,61,0.507,66,1.649,75,0.024,76,0.032,77,0.024,78,0.364,79,0.988,80,1.649,81,4.618,82,2.729,83,2.595,84,3.791,85,3.791,86,3.791,87,3.791,88,3.791,89,3.07,90,1.721,91,3.07,92,2.791,93,2.595,94,1.91,95,1.44]],["title/modules/CommonNgrxModule.html",[96,1.922,97,1.922]],["body/modules/CommonNgrxModule.html",[0,1.227,3,0.713,4,0.713,5,0.609,36,0.048,59,1.67,61,0.713,75,0.034,76,0.04,77,0.034,97,3.228,98,1.781,99,1.781,100,3.923,101,3.923,102,3.228,103,1.572,104,3.819,105,2.318,106,3.177]],["title/interfaces/DateDocument.html",[78,0.366,107,1.922]],["body/interfaces/DateDocument.html",[3,0.635,4,0.635,5,0.542,9,1.802,18,0.635,19,1.387,21,1.554,36,0.046,38,0.572,41,1.802,61,0.635,75,0.03,76,0.038,77,0.03,78,0.455,79,1.236,94,2.389,107,3.004,108,2.827,109,1.802,110,5.438,111,1.585,112,3.491,113,2.827,114,5.189,115,5.189,116,2.827,117,3.491,118,3.491,119,3.491,120,3.491,121,4.389]],["title/interfaces/DocumentWithId.html",[78,0.366,122,1.449]],["body/interfaces/DocumentWithId.html",[3,0.586,4,0.586,5,0.5,18,0.586,19,1.148,36,0.049,38,0.544,41,1.663,61,0.889,66,1.904,75,0.028,76,0.036,77,0.028,78,0.42,79,1.141,95,2.152,109,1.663,111,1.462,116,2.609,122,2.524,123,1.904,124,2.992,125,4.1,126,2.889,127,3.221,128,3.221,129,2.609,130,2.464,131,2.205,132,3.466,133,2.205,134,2.609,135,2.609,136,2.609]],["title/interfaces/EntityTypeParams.html",[78,0.366,137,1.922]],["body/interfaces/EntityTypeParams.html",[3,0.512,4,0.512,5,0.437,9,1.454,13,1.732,18,0.512,19,1.051,36,0.049,38,0.706,59,0.997,61,0.512,75,0.024,76,0.033,77,0.024,78,0.367,79,0.997,83,2.611,90,1.732,94,2.611,95,1.969,99,1.279,111,2.105,122,1.454,124,2.556,132,3.496,137,2.611,138,2.281,139,1.664,140,3.814,141,3.089,142,3.814,143,3.814,144,3.814,145,3.814,146,3.814,147,3.814,148,5.195,149,4.264,150,3.814,151,1.664,152,1.664,153,1.928,154,2.281]],["title/interfaces/HttpActionTypeParams.html",[78,0.366,155,1.922]],["body/interfaces/HttpActionTypeParams.html",[3,0.598,4,0.598,5,0.511,9,1.699,13,1.494,18,0.598,19,1.164,36,0.046,38,0.68,61,0.598,75,0.028,76,0.036,77,0.028,78,0.429,79,1.165,99,1.494,139,1.944,155,2.893,156,2.252,157,2.498,158,3.291,159,3.291,160,3.423,161,3.291,162,3.291,163,2.252,164,3.291,165,3.291,166,3.291,167,3.291,168,3.291,169,2.665,170,3.991,171,4.928,172,3.991,173,3.991,174,4.67,175,4.67,176,4.67,177,4.67]],["title/modules/NgLoggerModule.html",[96,1.922,178,1.659]],["body/modules/NgLoggerModule.html",[0,0.867,3,0.504,4,0.504,5,0.431,12,1.72,21,0.982,22,3.153,23,1.259,32,2.091,33,1.432,35,1.432,36,0.049,37,1.259,38,0.362,47,1.259,59,1.706,61,0.504,62,1.432,75,0.024,76,0.032,77,0.024,98,1.259,102,2.938,103,1.111,104,3.057,105,1.639,106,2.246,151,1.639,152,1.639,153,1.899,178,3.006,179,1.949,180,2.246,181,2.246,182,2.626,183,2.584,184,1.899,185,1.639,186,1.949,187,1.949,188,2.774,189,3.475,190,3.057,191,3.057,192,2.774,193,2.774,194,3.057,195,3.775,196,3.73,197,3.057,198,3.475,199,2.774,200,2.231,201,2.246,202,2.246]],["title/injectables/NgLoggerService.html",[182,1.449,203,1.449]],["body/injectables/NgLoggerService.html",[0,0.759,1,2.961,3,0.442,4,0.442,5,0.377,12,0.973,18,0.442,19,0.948,20,2.363,21,1.737,22,3.144,23,1.563,24,2.034,25,2.034,26,2.034,27,2.034,30,2.356,31,1.967,33,2.462,35,2.371,36,0.048,37,2.085,38,0.622,39,2.978,43,1.967,44,3.43,46,2.978,47,1.975,48,2.571,49,1.967,51,1.967,53,1.967,59,1.416,61,0.442,75,0.021,76,0.029,77,0.021,103,0.973,151,1.435,152,1.435,153,1.663,182,1.777,186,1.777,187,1.777,196,1.967,200,1.435,203,1.777,204,1.663,205,1.967,206,2.788,207,3.719,208,2.429,209,4.592,210,2.429,211,2.429,212,2.429,213,2.429,214,2.429,215,2.429,216,2.429,217,1.967,218,2.429,219,1.663,220,2.429,221,2.429]],["title/interfaces/ScriptLoaderInitScripts.html",[78,0.366,222,1.659]],["body/interfaces/ScriptLoaderInitScripts.html",[3,0.662,4,0.662,5,0.566,16,1.881,18,0.662,19,1.241,36,0.048,38,0.475,59,1.596,61,0.82,75,0.031,76,0.039,77,0.031,78,0.475,79,1.29,90,1.654,103,1.46,130,2.153,222,2.663,223,1.654,224,1.654,225,1.881,226,1.881,227,2.494,228,3.022,229,2.321,230,2.95,231,1.881,232,1.881,233,2.95]],["title/modules/ScriptLoaderModule.html",[96,1.922,234,1.659]],["body/modules/ScriptLoaderModule.html",[0,0.75,3,0.436,4,0.436,5,0.372,16,2.359,20,1.416,21,0.849,23,1.088,33,1.237,35,1.237,36,0.049,37,1.088,38,0.518,39,1.641,47,1.088,59,1.682,61,0.436,62,1.237,75,0.021,76,0.029,77,0.021,90,1.802,93,1.641,98,1.088,102,2.717,103,0.961,163,1.641,179,1.76,183,2.334,184,1.641,185,1.416,189,3.215,190,2.762,191,1.941,194,2.762,197,1.941,198,3.215,201,3.215,202,3.215,223,1.548,224,1.548,225,2.049,226,1.76,228,2.7,229,1.548,231,1.76,232,1.76,234,2.887,235,1.941,236,1.941,237,2.623,238,2.397,239,3.41,240,2.334,241,2.397,242,2.397,243,2.346,244,2.015,245,1.941,246,1.641,247,3.41,248,2.397,249,2.397,250,2.397,251,2.397,252,2.397,253,1.941,254,1.941,255,3.41,256,1.941,257,2.397,258,2.397]],["title/injectables/ScriptLoaderService.html",[203,1.449,237,1.449]],["body/injectables/ScriptLoaderService.html",[0,0.528,3,0.307,4,0.307,5,0.262,16,2.247,18,0.307,19,0.723,20,2.464,21,1.395,23,1.192,30,1.797,33,1.877,35,1.663,36,0.049,37,1.463,38,0.514,47,1.192,57,2.327,59,1.477,61,0.307,62,2.033,75,0.014,76,0.022,77,0.014,82,1.551,90,1.463,103,0.676,105,0.997,111,1.893,130,2.464,133,1.797,203,1.355,204,1.155,217,1.367,222,2.148,223,1.788,224,1.788,225,1.355,226,0.871,228,2.793,229,1.788,231,0.871,232,1.663,237,1.355,240,1.797,243,0.997,244,2.464,245,2.944,246,1.155,253,2.126,259,1.367,260,3.635,261,3.635,262,3.645,263,2.625,264,1.688,265,3.222,266,3.635,267,1.688,268,2.625,269,1.688,270,3.635,271,2.126,272,4.17,273,2.625,274,1.688,275,2.625,276,2.625,277,2.126,278,3.938,279,1.367,280,1.367,281,3.222,282,1.688,283,1.688,284,1.688,285,1.688,286,1.688,287,2.625,288,1.688,289,1.688,290,1.688,291,2.944,292,2.609,293,2.609,294,2.625,295,1.688,296,1.688,297,1.688,298,1.688,299,1.367,300,1.367,301,1.367,302,3.222,303,1.688,304,1.688,305,1.688,306,1.688,307,1.688,308,1.688,309,1.688,310,1.688,311,1.688,312,1.688,313,1.688,314,1.688]],["title/interfaces/ScriptParams.html",[78,0.366,229,1.275]],["body/interfaces/ScriptParams.html",[3,0.566,4,0.566,5,0.483,16,2.49,18,0.566,19,1.123,21,1.82,36,0.048,38,0.629,48,2.409,61,0.566,75,0.027,76,0.035,77,0.027,78,0.406,79,1.102,82,3.139,95,2.347,139,1.839,223,1.413,224,1.413,229,1.851,244,2.851,262,3.907,291,3.907,292,3.907,293,3.907,315,4.547,316,4.825,317,4.077]],["title/coverage.html",[318,3.083]],["body/coverage.html",[0,0.688,1,1.301,5,0.342,6,1.896,7,1.896,8,1.783,12,1.285,32,1,36,0.048,38,0.494,75,0.019,76,0.027,77,0.019,78,0.621,80,1.896,99,1.888,107,1.507,108,1.783,109,2.146,122,1.136,123,2.236,126,1.301,131,1.507,137,1.507,138,1.783,139,2.236,155,1.507,156,2.196,157,2.236,182,1.136,186,1.656,187,1.656,200,1.301,203,1.656,205,1.783,219,1.507,222,1.301,223,2.007,224,2.007,225,1.954,226,1.656,227,2.196,229,1,231,1.136,232,1.136,237,1.136,243,1.301,259,1.783,318,1.783,319,1.507,320,2.202,321,2.202,322,1.507,323,2.598,324,4.271,325,1.783,326,5.231,327,5.124,328,2.202,329,1.783,330,2.202,331,2.202,332,2.202,333,2.202,334,4.614,335,3.208,336,3.784,337,2.202,338,2.202,339,2.202,340,1.783,341,1.783,342,1.783,343,1.783,344,1.783,345,1.783,346,1.783,347,1.783,348,1.783,349,1.783,350,1.783,351,1.783,352,1.783,353,3.065,354,1.783,355,2.598,356,1.783,357,1.783,358,1.783,359,1.783,360,1.783,361,1.783,362,1.783,363,1.783,364,2.202,365,1.783,366,2.202,367,2.202,368,2.202,369,2.202,370,2.202,371,2.202]],["title/dependencies.html",[179,1.74,372,2.357]],["body/dependencies.html",[36,0.049,75,0.028,76,0.036,77,0.028,103,1.333,105,1.966,179,1.717,246,2.277,373,3.326,374,5.386,375,3.326,376,4.256,377,3.326,378,3.326,379,3.326,380,3.326,381,3.326,382,3.326,383,3.326,384,4.256,385,3.447,386,3.326,387,3.326,388,3.326,389,5.231,390,3.326,391,3.326,392,3.326,393,3.326,394,4.256,395,3.326,396,3.326,397,3.326,398,3.326,399,3.326,400,3.326]],["title/index.html",[18,0.429,401,1.909,402,1.909]],["body/index.html",[13,2.077,36,0.039,75,0.032,76,0.039,77,0.032,151,2.205,152,2.205,403,3.732,404,3.732,405,3.732,406,3.732,407,3.732,408,4.574,409,3.732,410,3.732,411,3.732,412,3.732,413,3.732,414,3.732,415,3.732,416,3.022,417,3.732,418,3.022,419,4.574,420,3.022,421,3.732,422,3.732,423,3.732,424,3.732,425,3.732,426,4.574,427,3.732,428,3.732,429,3.732,430,3.732,431,3.732,432,2.555,433,3.022]],["title/license.html",[401,1.909,402,1.909,432,1.614]],["body/license.html",[36,0.035,75,0.026,76,0.035,77,0.026,157,1.808,185,1.808,256,2.478,299,2.478,319,2.095,416,2.478,432,2.095,433,2.478,434,4.509,435,3.06,436,3.06,437,3.06,438,4.032,439,3.06,440,3.06,441,3.06,442,3.06,443,3.06,444,3.06,445,4.032,446,5.355,447,3.06,448,3.06,449,4.509,450,3.06,451,4.032,452,3.06,453,3.06,454,3.265,455,3.06,456,3.06,457,3.06,458,3.06,459,3.06,460,3.06,461,3.06,462,4.032,463,3.06,464,3.06,465,3.06,466,3.06,467,3.06,468,3.06,469,3.06,470,4.032,471,4.032,472,3.06,473,3.06,474,3.06,475,3.06,476,3.06,477,3.06,478,3.06,479,3.06,480,3.06,481,3.06,482,3.06,483,3.06,484,3.06,485,3.06,486,3.06,487,3.06,488,3.06,489,3.06,490,3.06,491,3.06,492,3.06,493,3.06,494,3.06,495,3.06,496,3.06,497,3.06,498,3.06]],["title/modules.html",[98,1.728]],["body/modules.html",[36,0.042,75,0.035,76,0.042,77,0.035,97,2.818,98,1.869,178,2.433,234,2.433,385,3.93,499,4.117,500,3.334,501,5.16,502,3.93,503,4.853]],["title/overview.html",[504,3.083]],["body/overview.html",[0,1.181,36,0.044,75,0.032,76,0.039,77,0.032,79,1.338,98,1.715,113,3.059,178,3.06,179,2.379,180,3.059,181,3.059,182,2.567,183,3.155,184,2.586,185,2.233,204,2.586,234,3.06,235,3.059,236,3.059,237,2.567,504,3.059,505,3.778,506,3.778,507,3.778]],["title/miscellaneous/typealiases.html",[508,1.393,509,3.37]],["body/miscellaneous/typealiases.html",[6,2.009,7,2.009,12,1.999,13,1.544,18,0.618,24,2.009,25,2.009,26,2.009,27,2.009,32,1.544,36,0.044,38,0.563,75,0.029,76,0.037,77,0.029,80,2.948,89,3.495,91,2.754,99,1.544,109,2.228,111,1.544,123,2.009,124,2.009,126,2.551,160,2.754,186,1.755,187,1.755,207,3.495,240,2.327,322,2.327,454,3.495,508,2.009,510,3.4,511,2.754,512,3.495,513,2.754,514,4.316,515,3.4,516,2.754,517,3.495,518,2.754,519,3.4,520,3.4,521,3.4,522,3.4,523,3.4,524,3.4,525,3.4]],["title/miscellaneous/variables.html",[508,1.393,526,2.729]],["body/miscellaneous/variables.html",[12,0.737,13,1.274,18,0.198,36,0.049,37,0.835,38,0.311,41,0.562,47,1.423,57,0.644,58,1.634,60,0.745,62,2.114,66,1.087,75,0.009,76,0.016,77,0.009,80,1.087,82,1.411,83,1.259,90,0.494,93,1.259,95,2.114,99,0.835,109,1.232,111,0.835,122,1.232,123,0.644,124,2.139,125,1.933,126,1.852,129,1.933,130,0.644,131,1.259,132,2.145,133,2.145,134,0.882,135,0.882,136,0.882,141,2.538,149,3.695,154,2.754,156,0.745,157,2.696,163,1.259,169,0.882,170,2.754,172,1.489,173,2.754,186,0.562,187,0.562,200,1.411,206,1.489,219,1.259,223,0.835,224,0.835,225,1.448,226,1.232,227,1.259,228,0.644,230,1.489,231,0.949,232,1.448,233,0.882,243,1.411,244,0.644,254,0.882,271,0.882,277,0.882,279,3.635,280,3.881,300,2.754,301,0.882,319,0.745,322,0.745,323,2.272,324,0.882,325,1.489,329,1.489,340,0.882,341,1.489,342,1.489,343,0.882,344,1.489,345,1.489,346,1.489,347,0.882,348,1.489,349,1.489,350,0.882,351,1.489,352,1.489,353,1.933,354,0.882,355,3.317,356,1.489,357,1.489,358,0.882,359,1.489,360,1.489,361,0.882,362,1.489,363,1.489,365,1.489,418,0.882,420,2.272,500,0.882,502,0.882,508,0.644,511,1.489,512,0.882,513,0.882,516,0.882,517,0.882,518,0.882,526,1.489,527,1.839,528,1.089,529,1.839,530,1.089,531,1.089,532,1.839,533,1.089,534,1.839,535,4.317,536,4.628,537,1.089,538,1.089,539,3.4,540,1.089,541,3.804,542,1.089,543,1.089,544,1.089,545,3.134,546,1.089,547,1.089,548,1.089,549,3.134,550,1.089,551,1.089,552,1.089,553,1.089,554,1.089,555,2.805,556,1.089,557,1.089,558,1.089,559,1.089,560,1.089,561,1.089,562,1.089,563,1.089,564,1.089,565,2.805,566,2.805,567,1.839,568,1.089,569,1.089,570,1.089,571,1.089,572,1.089,573,1.089,574,1.089,575,1.089,576,1.089,577,1.089,578,1.839,579,1.089,580,3.134,581,1.089,582,2.387,583,1.089,584,3.134,585,1.839,586,2.387,587,1.089,588,1.089,589,1.089,590,1.839,591,1.089,592,1.089,593,1.089,594,1.089,595,1.089,596,1.089,597,1.089,598,1.839,599,1.839,600,1.089,601,1.089,602,1.089,603,1.089,604,1.089,605,1.089,606,1.089,607,1.089,608,1.089,609,1.839,610,1.089,611,1.089,612,1.089,613,1.839,614,1.089,615,1.089,616,1.089,617,1.089,618,1.089,619,1.089,620,1.089,621,1.089,622,1.839,623,1.839,624,1.089,625,1.089,626,1.089,627,1.089,628,1.089,629,1.839,630,1.089,631,1.839,632,1.089,633,1.089]]],"invertedIndex":[["",{"_index":36,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["0.11.4",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":336,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":506,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["12.0.0",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["13.0.0",{"_index":374,"title":{},"body":{"dependencies.html":{}}}],["13.0.1",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["13.0.2",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":113,"title":{},"body":{"interfaces/DateDocument.html":{},"overview.html":{}}}],["2.0.0",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["2/5",{"_index":369,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":339,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["2021",{"_index":436,"title":{},"body":{"license.html":{}}}],["28",{"_index":338,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":505,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":337,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":367,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4/4",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":368,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":507,"title":{},"body":{"overview.html":{}}}],["7.4.0",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":469,"title":{},"body":{"license.html":{}}}],["acc",{"_index":628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acc.add(el",{"_index":612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acc[keyvalue",{"_index":627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors",{"_index":28,"title":{},"body":{"classes/CommonLogger.html":{}}}],["action",{"_index":157,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":420,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["actions.ts",{"_index":514,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["add",{"_index":301,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["again",{"_index":121,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["aliases",{"_index":510,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":278,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["amount",{"_index":144,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["and/or",{"_index":460,"title":{},"body":{"license.html":{}}}],["angular/animations",{"_index":373,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":105,"title":{},"body":{"modules/CommonNgrxModule.html":{},"modules/NgLoggerModule.html":{},"injectables/ScriptLoaderService.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":377,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":103,"title":{},"body":{"modules/CommonNgrxModule.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":378,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":426,"title":{},"body":{"index.html":{}}}],["append",{"_index":589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approach",{"_index":608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aren't",{"_index":570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arising",{"_index":496,"title":{},"body":{"license.html":{}}}],["around",{"_index":147,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["arr",{"_index":609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":58,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"miscellaneous/variables.html":{}}}],["array.from(arr.reduce((acc",{"_index":610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associated",{"_index":447,"title":{},"body":{"license.html":{}}}],["assumes",{"_index":564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":262,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["authors",{"_index":487,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":254,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":500,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["back",{"_index":597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":409,"title":{},"body":{"index.html":{}}}],["before",{"_index":317,"title":{},"body":{"interfaces/ScriptParams.html":{}}}],["behaviorsubject",{"_index":281,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["beta.35",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":315,"title":{},"body":{"interfaces/ScriptParams.html":{}}}],["brad",{"_index":437,"title":{},"body":{"license.html":{}}}],["brand",{"_index":127,"title":{},"body":{"interfaces/DocumentWithId.html":{}}}],["branded",{"_index":523,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["browse",{"_index":501,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":385,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["bulk",{"_index":554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c",{"_index":435,"title":{},"body":{"license.html":{}}}],["call",{"_index":316,"title":{},"body":{"interfaces/ScriptParams.html":{}}}],["callback",{"_index":293,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["called",{"_index":92,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{}}}],["cancel",{"_index":170,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"miscellaneous/variables.html":{}}}],["cancelpayload",{"_index":174,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["change",{"_index":120,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["charge",{"_index":442,"title":{},"body":{"license.html":{}}}],["check",{"_index":276,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["claim",{"_index":490,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/CommonLogger.html":{}},"body":{"classes/CommonLogger.html":{},"modules/CommonNgrxModule.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/CommonLogger.html":{}}}],["client",{"_index":14,"title":{},"body":{"classes/CommonLogger.html":{}}}],["cluster_ngloggermodule",{"_index":180,"title":{},"body":{"modules/NgLoggerModule.html":{},"overview.html":{}}}],["cluster_ngloggermodule_providers",{"_index":181,"title":{},"body":{"modules/NgLoggerModule.html":{},"overview.html":{}}}],["cluster_scriptloadermodule",{"_index":235,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"overview.html":{}}}],["cluster_scriptloadermodule_providers",{"_index":236,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"overview.html":{}}}],["codespace",{"_index":355,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["codespace.ts",{"_index":359,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["codespace_name",{"_index":588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["codespacename",{"_index":585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["codespaces",{"_index":417,"title":{},"body":{"index.html":{}}}],["codespaces/src/lib/util/get",{"_index":354,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["codespaces/src/lib/util/is",{"_index":358,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["codespaces/src/lib/util/normalize",{"_index":361,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["codespaces=true",{"_index":579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["codespaceurl",{"_index":591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["common",{"_index":60,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"miscellaneous/variables.html":{}}}],["commonlogger",{"_index":1,"title":{"classes/CommonLogger.html":{}},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{}}}],["commonlogger:10",{"_index":216,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["commonlogger:18",{"_index":211,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["commonlogger:23",{"_index":212,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["commonlogger:28",{"_index":210,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["commonlogger:33",{"_index":213,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["commonloggerconfig",{"_index":32,"title":{"interfaces/CommonLoggerConfig.html":{}},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/NgLoggerModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["commonmodule",{"_index":104,"title":{},"body":{"modules/CommonNgrxModule.html":{},"modules/NgLoggerModule.html":{}}}],["commonngrxmodule",{"_index":97,"title":{"modules/CommonNgrxModule.html":{}},"body":{"modules/CommonNgrxModule.html":{},"modules.html":{}}}],["conditions",{"_index":468,"title":{},"body":{"license.html":{}}}],["config",{"_index":22,"title":{},"body":{"classes/CommonLogger.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{}}}],["config.ts",{"_index":80,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["configurable",{"_index":11,"title":{},"body":{"classes/CommonLogger.html":{}}}],["configuration",{"_index":40,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{}}}],["configurations",{"_index":195,"title":{},"body":{"modules/NgLoggerModule.html":{}}}],["connection",{"_index":497,"title":{},"body":{"license.html":{}}}],["console",{"_index":601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.debug(message",{"_index":72,"title":{},"body":{"classes/CommonLogger.html":{}}}],["console.error(message",{"_index":68,"title":{},"body":{"classes/CommonLogger.html":{}}}],["console.log(message",{"_index":70,"title":{},"body":{"classes/CommonLogger.html":{}}}],["console.warn(message",{"_index":74,"title":{},"body":{"classes/CommonLogger.html":{}}}],["const",{"_index":130,"title":{},"body":{"interfaces/DocumentWithId.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":30,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{},"injectables/ScriptLoaderService.html":{}}}],["constructor(config",{"_index":31,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{}}}],["constructor(document",{"_index":264,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["constructor(private",{"_index":252,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["constructor(public",{"_index":65,"title":{},"body":{"classes/CommonLogger.html":{}}}],["contract",{"_index":494,"title":{},"body":{"license.html":{}}}],["convert",{"_index":630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["converted",{"_index":632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["copies",{"_index":462,"title":{},"body":{"license.html":{}}}],["copy",{"_index":445,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":434,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":318,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":300,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["createaction",{"_index":535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction(`[${prefix",{"_index":541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcancel",{"_index":544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created",{"_index":117,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["createdat",{"_index":114,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["createfailed",{"_index":543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createsuccess",{"_index":542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currently",{"_index":275,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["cutdown",{"_index":143,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["damages",{"_index":491,"title":{},"body":{"license.html":{}}}],["database",{"_index":118,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["date",{"_index":110,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["datedocument",{"_index":107,"title":{"interfaces/DateDocument.html":{}},"body":{"interfaces/DateDocument.html":{},"coverage.html":{}}}],["deal",{"_index":448,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":498,"title":{},"body":{"license.html":{}}}],["debug",{"_index":24,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/NgLoggerService.html":{},"miscellaneous/typealiases.html":{}}}],["debug(message",{"_index":43,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{}}}],["decorators",{"_index":214,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["default",{"_index":279,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":159,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["defined",{"_index":33,"title":{},"body":{"classes/CommonLogger.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["delete",{"_index":549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletecancel",{"_index":552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletefailed",{"_index":551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletesuccess",{"_index":550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":179,"title":{"dependencies.html":{}},"body":{"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deployment",{"_index":422,"title":{},"body":{"index.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{}}}],["development",{"_index":408,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["digital",{"_index":429,"title":{},"body":{"index.html":{}}}],["directly",{"_index":521,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["distribute",{"_index":458,"title":{},"body":{"license.html":{}}}],["doc",{"_index":132,"title":{},"body":{"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"miscellaneous/variables.html":{}}}],["docid",{"_index":148,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["document",{"_index":111,"title":{},"body":{"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["document.ts",{"_index":109,"title":{},"body":{"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":319,"title":{},"body":{"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["documentid",{"_index":126,"title":{},"body":{"interfaces/DocumentWithId.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["documentid(id",{"_index":559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentid(id.id",{"_index":561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documents",{"_index":519,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["documentwithid",{"_index":122,"title":{"interfaces/DocumentWithId.html":{}},"body":{"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["documentwithid).id",{"_index":135,"title":{},"body":{"interfaces/DocumentWithId.html":{},"miscellaneous/variables.html":{}}}],["domains",{"_index":603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duplicates",{"_index":615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duplicates.ts",{"_index":348,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":386,"title":{},"body":{"dependencies.html":{}}}],["el",{"_index":611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":306,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["emitter",{"_index":257,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["emittions",{"_index":85,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{}}}],["end",{"_index":590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["engine",{"_index":427,"title":{},"body":{"index.html":{}}}],["entities",{"_index":582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entities.reduce((acc",{"_index":624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":141,"title":{},"body":{"interfaces/EntityTypeParams.html":{},"miscellaneous/variables.html":{}}}],["entity[key",{"_index":623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entityactionfactory",{"_index":325,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["entityactions",{"_index":512,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["entitytypeparams",{"_index":137,"title":{"interfaces/EntityTypeParams.html":{}},"body":{"interfaces/EntityTypeParams.html":{},"coverage.html":{}}}],["env",{"_index":555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.codespace_name",{"_index":556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.codespaces",{"_index":574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":25,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/NgLoggerService.html":{},"miscellaneous/typealiases.html":{}}}],["error(message",{"_index":49,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{}}}],["event",{"_index":256,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"license.html":{}}}],["everything",{"_index":250,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["example",{"_index":421,"title":{},"body":{"index.html":{}}}],["existingscriptloaded",{"_index":294,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["existingscriptloaded.element",{"_index":298,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["export",{"_index":61,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["express",{"_index":478,"title":{},"body":{"license.html":{}}}],["extends",{"_index":206,"title":{},"body":{"injectables/NgLoggerService.html":{},"miscellaneous/variables.html":{}}}],["extra",{"_index":414,"title":{},"body":{"index.html":{}}}],["facing",{"_index":167,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["factory",{"_index":162,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["factory.ts",{"_index":323,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["failed",{"_index":539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["failure",{"_index":171,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["failurepayload",{"_index":175,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["feature",{"_index":525,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{}}}],["files",{"_index":416,"title":{},"body":{"index.html":{},"license.html":{}}}],["firebase",{"_index":424,"title":{},"body":{"index.html":{}}}],["fired",{"_index":619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fitness",{"_index":483,"title":{},"body":{"license.html":{}}}],["flows",{"_index":569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["following",{"_index":467,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":191,"title":{},"body":{"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["forroot(config",{"_index":192,"title":{},"body":{"modules/NgLoggerModule.html":{}}}],["forroot(params",{"_index":239,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["free",{"_index":441,"title":{},"body":{"license.html":{}}}],["function",{"_index":82,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"miscellaneous/variables.html":{}}}],["functionwithparameterstype",{"_index":565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["furnished",{"_index":465,"title":{},"body":{"license.html":{}}}],["gcp",{"_index":425,"title":{},"body":{"index.html":{}}}],["generally",{"_index":596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generic",{"_index":517,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["generics",{"_index":145,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["getcancel",{"_index":540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcodespacename",{"_index":357,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getfailed",{"_index":538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gethidden",{"_index":55,"title":{},"body":{"classes/CommonLogger.html":{}}}],["getid",{"_index":342,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getsuccess",{"_index":537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":401,"title":{"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":419,"title":{},"body":{"index.html":{}}}],["given",{"_index":93,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"modules/ScriptLoaderModule.html":{},"miscellaneous/variables.html":{}}}],["granted",{"_index":440,"title":{},"body":{"license.html":{}}}],["graph",{"_index":499,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handles",{"_index":249,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["head",{"_index":309,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["head.appendchild(scriptelement",{"_index":314,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["hereby",{"_index":439,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":29,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{}}}],["holders",{"_index":488,"title":{},"body":{"license.html":{}}}],["hook",{"_index":84,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{}}}],["htt",{"_index":161,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["http",{"_index":572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpactionfactory",{"_index":329,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpactiontypeparams",{"_index":155,"title":{"interfaces/HttpActionTypeParams.html":{}},"body":{"interfaces/HttpActionTypeParams.html":{},"coverage.html":{}}}],["https://${codespacename",{"_index":592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":124,"title":{},"body":{"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["id.ts",{"_index":341,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implied",{"_index":479,"title":{},"body":{"license.html":{}}}],["import",{"_index":59,"title":{},"body":{"classes/CommonLogger.html":{},"modules/CommonNgrxModule.html":{},"interfaces/EntityTypeParams.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["imports",{"_index":106,"title":{},"body":{"modules/CommonNgrxModule.html":{},"modules/NgLoggerModule.html":{}}}],["included",{"_index":472,"title":{},"body":{"license.html":{}}}],["includes",{"_index":413,"title":{},"body":{"index.html":{}}}],["including",{"_index":451,"title":{},"body":{"license.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"injectables/NgLoggerService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":344,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":271,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["information",{"_index":563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inherited",{"_index":209,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["init",{"_index":226,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initscripts",{"_index":266,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["inject",{"_index":217,"title":{},"body":{"injectables/NgLoggerService.html":{},"injectables/ScriptLoaderService.html":{}}}],["inject(document",{"_index":283,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["inject(ng_logger_config",{"_index":220,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["inject(ng_logger_config)@optional",{"_index":215,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["inject(script_loader_init_scripts",{"_index":285,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["inject(script_loader_loaded",{"_index":284,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["injectable",{"_index":203,"title":{"injectables/NgLoggerService.html":{},"injectables/ScriptLoaderService.html":{}},"body":{"injectables/NgLoggerService.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["injectables",{"_index":204,"title":{},"body":{"injectables/NgLoggerService.html":{},"injectables/ScriptLoaderService.html":{},"overview.html":{}}}],["injected",{"_index":248,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["injection",{"_index":616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":230,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('script_loader_init_scripts",{"_index":233,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"miscellaneous/variables.html":{}}}],["instead",{"_index":522,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["interface",{"_index":78,"title":{"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"interfaces/ScriptParams.html":{}},"body":{"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{}}}],["interfaces",{"_index":79,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"interfaces/ScriptParams.html":{},"overview.html":{}}}],["internally",{"_index":251,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["iscodespace",{"_index":360,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isdocumentwithid",{"_index":131,"title":{},"body":{"interfaces/DocumentWithId.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isdocumentwithid(id",{"_index":560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isindexablevalue",{"_index":346,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isindexablevalue(keyvalue",{"_index":626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isolated",{"_index":571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jump",{"_index":406,"title":{},"body":{"index.html":{}}}],["key",{"_index":584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keyof",{"_index":620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keyvalue",{"_index":625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":477,"title":{},"body":{"license.html":{}}}],["layout",{"_index":379,"title":{},"body":{"dependencies.html":{}}}],["level",{"_index":91,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"miscellaneous/typealiases.html":{}}}],["liability",{"_index":492,"title":{},"body":{"license.html":{}}}],["liable",{"_index":489,"title":{},"body":{"license.html":{}}}],["libs/.../common",{"_index":515,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../entity",{"_index":513,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../get",{"_index":527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../http",{"_index":528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../id",{"_index":511,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../is",{"_index":529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../ng",{"_index":516,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../normalize",{"_index":530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../remove",{"_index":531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../script",{"_index":532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../to",{"_index":533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/common",{"_index":99,"title":{},"body":{"modules/CommonNgrxModule.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/lib/models/date",{"_index":108,"title":{},"body":{"interfaces/DateDocument.html":{},"coverage.html":{}}}],["libs/common/src/lib/models/id",{"_index":123,"title":{},"body":{"interfaces/DocumentWithId.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/lib/utils/common",{"_index":6,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/common/src/lib/utils/get",{"_index":340,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/lib/utils/is",{"_index":343,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/lib/utils/remove",{"_index":347,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/lib/utils/to",{"_index":350,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/gh",{"_index":353,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/ng",{"_index":186,"title":{},"body":{"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/script",{"_index":223,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":432,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limitation",{"_index":452,"title":{},"body":{"license.html":{}}}],["limited",{"_index":480,"title":{},"body":{"license.html":{}}}],["list",{"_index":57,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":240,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":253,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["load(script",{"_index":268,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loaded",{"_index":244,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"miscellaneous/variables.html":{}}}],["loaded.ts",{"_index":365,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loader",{"_index":225,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loader.module.ts",{"_index":238,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["loader.module.ts:20",{"_index":241,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["loader.service",{"_index":242,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["loader.service.ts",{"_index":259,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:16",{"_index":282,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:21",{"_index":267,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:42",{"_index":274,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:57",{"_index":269,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader/src/lib/script",{"_index":224,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loads",{"_index":270,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loadscripts",{"_index":263,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loadscripts(params",{"_index":273,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["log",{"_index":26,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/NgLoggerService.html":{},"miscellaneous/typealiases.html":{}}}],["log(message",{"_index":51,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{}}}],["logger",{"_index":12,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["logger.module.ts",{"_index":188,"title":{},"body":{"modules/NgLoggerModule.html":{}}}],["logger.module.ts:15",{"_index":193,"title":{},"body":{"modules/NgLoggerModule.html":{}}}],["logger.service",{"_index":199,"title":{},"body":{"modules/NgLoggerModule.html":{}}}],["logger.service.ts",{"_index":205,"title":{},"body":{"injectables/NgLoggerService.html":{},"coverage.html":{}}}],["logger.service.ts:8",{"_index":208,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["logger.ts",{"_index":8,"title":{},"body":{"classes/CommonLogger.html":{},"coverage.html":{}}}],["logger.ts:10",{"_index":56,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger.ts:12",{"_index":34,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger.ts:16",{"_index":42,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger.ts:18",{"_index":50,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger.ts:23",{"_index":52,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger.ts:28",{"_index":45,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger.ts:33",{"_index":54,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger/common",{"_index":7,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["logger/src/lib/ng",{"_index":187,"title":{},"body":{"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["loglevels",{"_index":89,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"miscellaneous/typealiases.html":{}}}],["logs",{"_index":86,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{}}}],["look",{"_index":577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map",{"_index":629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map.ts",{"_index":351,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapping",{"_index":633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":76,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":482,"title":{},"body":{"license.html":{}}}],["merge",{"_index":456,"title":{},"body":{"license.html":{}}}],["message",{"_index":46,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/NgLoggerService.html":{}}}],["methods",{"_index":23,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["miscellaneous",{"_index":508,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":433,"title":{},"body":{"index.html":{},"license.html":{}}}],["modify",{"_index":455,"title":{},"body":{"license.html":{}}}],["module",{"_index":96,"title":{"modules/CommonNgrxModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}},"body":{}}],["modules",{"_index":98,"title":{"modules.html":{}},"body":{"modules/CommonNgrxModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":198,"title":{},"body":{"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["name",{"_index":37,"title":{},"body":{"classes/CommonLogger.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["name.ts",{"_index":356,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":146,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["needs",{"_index":606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":232,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":196,"title":{},"body":{"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{}}}],["ng_logger_config",{"_index":200,"title":{},"body":{"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngloggerconfig",{"_index":207,"title":{},"body":{"injectables/NgLoggerService.html":{},"miscellaneous/typealiases.html":{}}}],["ngloggermodule",{"_index":178,"title":{"modules/NgLoggerModule.html":{}},"body":{"modules/NgLoggerModule.html":{},"modules.html":{},"overview.html":{}}}],["ngloggerservice",{"_index":182,"title":{"injectables/NgLoggerService.html":{}},"body":{"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"overview.html":{}}}],["ngmodule",{"_index":102,"title":{},"body":{"modules/CommonNgrxModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["ngrx",{"_index":568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngrx.module.ts",{"_index":101,"title":{},"body":{"modules/CommonNgrxModule.html":{}}}],["ngrx/component",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["ngrx/effects",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["ngrx/entity",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["ngrx/router",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["ngrx/src/lib/common",{"_index":100,"title":{},"body":{"modules/CommonNgrxModule.html":{}}}],["ngrx/src/lib/entity/entity",{"_index":322,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ngrx/src/lib/models/entity",{"_index":138,"title":{},"body":{"interfaces/EntityTypeParams.html":{},"coverage.html":{}}}],["ngrx/src/lib/util/http",{"_index":156,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngrx/store",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["nodejs",{"_index":558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["non",{"_index":164,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["noninfringement",{"_index":486,"title":{},"body":{"license.html":{}}}],["normalizecodespacerootpath",{"_index":363,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["normalized",{"_index":594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["note",{"_index":163,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"modules/ScriptLoaderModule.html":{},"miscellaneous/variables.html":{}}}],["notice",{"_index":470,"title":{},"body":{"license.html":{}}}],["null",{"_index":134,"title":{},"body":{"interfaces/DocumentWithId.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nx",{"_index":151,"title":{},"body":{"interfaces/EntityTypeParams.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"index.html":{}}}],["nxworkspacetemplate",{"_index":403,"title":{},"body":{"index.html":{}}}],["oauth",{"_index":598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":41,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obtaining",{"_index":444,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":430,"title":{},"body":{"index.html":{}}}],["one",{"_index":258,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["onlog",{"_index":81,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{}}}],["optimal",{"_index":165,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["optional",{"_index":21,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["optionalparams",{"_index":44,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/NgLoggerService.html":{}}}],["otherwise",{"_index":299,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"license.html":{}}}],["out",{"_index":185,"title":{},"body":{"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"license.html":{},"overview.html":{}}}],["over",{"_index":87,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{}}}],["overview",{"_index":504,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":372,"title":{"dependencies.html":{}},"body":{}}],["pages",{"_index":428,"title":{},"body":{"index.html":{}}}],["param",{"_index":64,"title":{},"body":{"classes/CommonLogger.html":{}}}],["parameters",{"_index":35,"title":{},"body":{"classes/CommonLogger.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["params",{"_index":90,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["params.scripts",{"_index":255,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["params.ts",{"_index":139,"title":{},"body":{"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{}}}],["particular",{"_index":484,"title":{},"body":{"license.html":{}}}],["passed",{"_index":83,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"interfaces/EntityTypeParams.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path.ts",{"_index":362,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission",{"_index":438,"title":{},"body":{"license.html":{}}}],["permit",{"_index":463,"title":{},"body":{"license.html":{}}}],["person",{"_index":443,"title":{},"body":{"license.html":{}}}],["persons",{"_index":464,"title":{},"body":{"license.html":{}}}],["pipelines",{"_index":423,"title":{},"body":{"index.html":{}}}],["platform",{"_index":431,"title":{},"body":{"index.html":{}}}],["poccess.env",{"_index":576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["port",{"_index":586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":474,"title":{},"body":{"license.html":{}}}],["port}.githubpreview.dev",{"_index":593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":149,"title":{},"body":{"interfaces/EntityTypeParams.html":{},"miscellaneous/variables.html":{}}}],["preload",{"_index":292,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["private",{"_index":261,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["process.env",{"_index":557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects",{"_index":410,"title":{},"body":{"index.html":{}}}],["promise",{"_index":272,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["promise((resolve",{"_index":311,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["promise.all(scripts.map((script",{"_index":289,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["properties",{"_index":19,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"injectables/NgLoggerService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["props",{"_index":536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":201,"title":{},"body":{"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["provided",{"_index":475,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":218,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["providers",{"_index":189,"title":{},"body":{"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["public",{"_index":20,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["publish",{"_index":457,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":485,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":116,"title":{},"body":{"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{}}}],["record",{"_index":154,"title":{},"body":{"interfaces/EntityTypeParams.html":{},"miscellaneous/variables.html":{}}}],["recordkey",{"_index":622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirects",{"_index":599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["removeduplicates",{"_index":349,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["removes",{"_index":614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaysubject",{"_index":245,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["replaysubject(1",{"_index":247,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["repo",{"_index":412,"title":{},"body":{"index.html":{}}}],["repository",{"_index":405,"title":{},"body":{"index.html":{}}}],["represents",{"_index":112,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["request",{"_index":172,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"miscellaneous/variables.html":{}}}],["requestpayload",{"_index":176,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["requests",{"_index":573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require",{"_index":600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":184,"title":{},"body":{"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"overview.html":{}}}],["resolve",{"_index":313,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["restriction",{"_index":450,"title":{},"body":{"license.html":{}}}],["result",{"_index":75,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":77,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":62,"title":{},"body":{"classes/CommonLogger.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":47,"title":{},"body":{"classes/CommonLogger.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["rights",{"_index":453,"title":{},"body":{"license.html":{}}}],["root",{"_index":219,"title":{},"body":{"injectables/NgLoggerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":246,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"dependencies.html":{}}}],["scheme",{"_index":168,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["script",{"_index":16,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["script_loader_init_scripts",{"_index":231,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["script_loader_loaded",{"_index":243,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scriptelement",{"_index":302,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptelement.onload",{"_index":312,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptelement.setattribute('async",{"_index":308,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptelement.setattribute('src",{"_index":307,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptloaderinitscripts",{"_index":222,"title":{"interfaces/ScriptLoaderInitScripts.html":{}},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["scriptloaderloaded",{"_index":265,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptloaderloaded.next(true",{"_index":287,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptloadermodule",{"_index":234,"title":{"modules/ScriptLoaderModule.html":{}},"body":{"modules/ScriptLoaderModule.html":{},"modules.html":{},"overview.html":{}}}],["scriptloaderservice",{"_index":237,"title":{"injectables/ScriptLoaderService.html":{}},"body":{"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["scriptparams",{"_index":229,"title":{"interfaces/ScriptParams.html":{}},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{}}}],["scripts",{"_index":228,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["scripts.ts",{"_index":227,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scriptsloaded",{"_index":260,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptsloaded.src",{"_index":296,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["see",{"_index":277,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["sell",{"_index":461,"title":{},"body":{"license.html":{}}}],["service",{"_index":197,"title":{},"body":{"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["set",{"_index":613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":194,"title":{},"body":{"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["shall",{"_index":471,"title":{},"body":{"license.html":{}}}],["shouldn't",{"_index":520,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["side",{"_index":15,"title":{},"body":{"classes/CommonLogger.html":{}}}],["simple",{"_index":10,"title":{},"body":{"classes/CommonLogger.html":{}}}],["situations",{"_index":17,"title":{},"body":{"classes/CommonLogger.html":{}}}],["skip",{"_index":297,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["software",{"_index":446,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["sources",{"_index":288,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["src",{"_index":291,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["start",{"_index":407,"title":{},"body":{"index.html":{}}}],["started",{"_index":402,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":190,"title":{},"body":{"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["still",{"_index":604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":95,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/ScriptParams.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":466,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":459,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":473,"title":{},"body":{"license.html":{}}}],["success",{"_index":173,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"miscellaneous/variables.html":{}}}],["successpaylod",{"_index":177,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["super(config",{"_index":221,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["support",{"_index":502,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["supported",{"_index":602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["supporting",{"_index":415,"title":{},"body":{"index.html":{}}}],["svg",{"_index":503,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":129,"title":{},"body":{"interfaces/DocumentWithId.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":125,"title":{},"body":{"interfaces/DocumentWithId.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":370,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":404,"title":{},"body":{"index.html":{}}}],["template/common",{"_index":153,"title":{},"body":{"interfaces/EntityTypeParams.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{}}}],["testing",{"_index":518,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["this.config?.hidden",{"_index":63,"title":{},"body":{"classes/CommonLogger.html":{}}}],["this.document.createelement('script",{"_index":303,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.document.getelementsbytagname('head')[0",{"_index":310,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.hidden?.includes('debug",{"_index":71,"title":{},"body":{"classes/CommonLogger.html":{}}}],["this.hidden?.includes('error",{"_index":67,"title":{},"body":{"classes/CommonLogger.html":{}}}],["this.hidden?.includes('log",{"_index":69,"title":{},"body":{"classes/CommonLogger.html":{}}}],["this.hidden?.includes('warn",{"_index":73,"title":{},"body":{"classes/CommonLogger.html":{}}}],["this.load(script",{"_index":290,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.loadscripts(initscripts).then",{"_index":286,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.scriptsloaded$.next",{"_index":304,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.scriptsloaded$.value",{"_index":305,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.scriptsloaded$.value.find",{"_index":295,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["time",{"_index":88,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{}}}],["title_case",{"_index":150,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["todo",{"_index":553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token",{"_index":617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tomap",{"_index":352,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tooling",{"_index":411,"title":{},"body":{"index.html":{}}}],["tort",{"_index":495,"title":{},"body":{"license.html":{}}}],["true",{"_index":575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ts",{"_index":524,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tslib",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":38,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":509,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedaction",{"_index":566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeof",{"_index":133,"title":{},"body":{"interfaces/DocumentWithId.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["typeofkey",{"_index":621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeparams['prefix",{"_index":534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types",{"_index":160,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"miscellaneous/typealiases.html":{}}}],["undefined",{"_index":136,"title":{},"body":{"interfaces/DocumentWithId.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":128,"title":{},"body":{"interfaces/DocumentWithId.html":{}}}],["unknown",{"_index":66,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DocumentWithId.html":{},"miscellaneous/variables.html":{}}}],["update",{"_index":545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatecancel",{"_index":548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatedat",{"_index":115,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["updatefailed",{"_index":547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatesuccess",{"_index":546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":454,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["used",{"_index":13,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":166,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["usevalue",{"_index":202,"title":{},"body":{"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["using",{"_index":418,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["usually",{"_index":94,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/EntityTypeParams.html":{}}}],["utilities",{"_index":142,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["utility",{"_index":562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":280,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["value.ts",{"_index":345,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":324,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":526,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["viable",{"_index":607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":48,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/NgLoggerService.html":{},"interfaces/ScriptParams.html":{}}}],["warn",{"_index":27,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/NgLoggerService.html":{},"miscellaneous/typealiases.html":{}}}],["warn(message",{"_index":53,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{}}}],["warranties",{"_index":481,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":476,"title":{},"body":{"license.html":{}}}],["whether",{"_index":493,"title":{},"body":{"license.html":{}}}],["whitespace",{"_index":119,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["wip",{"_index":605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":449,"title":{},"body":{"license.html":{}}}],["work",{"_index":169,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"miscellaneous/variables.html":{}}}],["workspace",{"_index":152,"title":{},"body":{"interfaces/EntityTypeParams.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"index.html":{}}}],["wrap",{"_index":140,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["wrapper",{"_index":158,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["yes",{"_index":39,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{},"modules/ScriptLoaderModule.html":{}}}],["zone.js",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":183,"title":{},"body":{"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/CommonLogger.html":{"url":"classes/CommonLogger.html","title":"class - CommonLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/lib/utils/common-logger/common-logger.ts\n        \n\n\n            \n                Description\n            \n            \n                Simple but configurable logger. Should be used on the client-side\nand script situations\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hidden\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: CommonLoggerConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        CommonLoggerConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                \nconfiguration object\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommonLoggerConfig\n\n                    \n                \n                    \n                        \n                                Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:16\n                        \n                    \n\n            \n                \n                    - configuration object\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n\n                \n                    \n                        gethidden()\n                    \n                \n                            \n                                \n                                    Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:10\n                                \n                            \n                    \n                        \n                                The list of hidden methods, defined from the config object.\n\n\n                                \n                                    Returns :     Array\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { CommonLoggerConfig } from './common-logger-config';\n/**\n * Simple but configurable logger. Should be used on the client-side\n * and script situations\n */\nexport class CommonLogger {\n  /**\n   * The list of hidden methods, defined from the config object.\n   */\n  public get hidden(): Array {\n    return this.config?.hidden || [];\n  }\n  /**\n   * @param config - configuration object\n   */\n  constructor(public config?: CommonLoggerConfig) {}\n\n  error(message?: unknown, ...optionalParams: unknown[]): void {\n    if (this.hidden?.includes('error')) return;\n    console.error(message, ...optionalParams);\n  }\n\n  log(message?: unknown, ...optionalParams: unknown[]): void {\n    if (this.hidden?.includes('log')) return;\n    console.log(message, ...optionalParams);\n  }\n\n  debug(message?: unknown, ...optionalParams: unknown[]): void {\n    if (this.hidden?.includes('debug')) return;\n    console.debug(message, ...optionalParams);\n  }\n\n  warn(message?: unknown, ...optionalParams: unknown[]): void {\n    if (this.hidden?.includes('warn')) return;\n    console.warn(message, ...optionalParams);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonLoggerConfig.html":{"url":"interfaces/CommonLoggerConfig.html","title":"interface - CommonLoggerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CommonLoggerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/lib/utils/common-logger/common-logger-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration object for the common-logger.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hidden\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onLog\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hidden:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of hidden methods for the common-logger.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onLog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onLog:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Function that can be passed to \"hook\" into the emittions of logs\nover time.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        type LogLevels = 'log' | 'debug' | 'warn' | 'error';\n/**\n * Configuration object for the common-logger.\n */\nexport interface CommonLoggerConfig {\n  /**\n   * List of hidden methods for the common-logger.\n   */\n  hidden?: Array;\n\n  /**\n   * Function that can be passed to \"hook\" into the emittions of logs\n   * over time.\n   *\n   */\n  onLog?: (params: {\n    /**\n     * The level called\n     */\n    level: LogLevels;\n    /**\n     * The message given, usually a string\n     */\n    message: unknown;\n    /**\n     * The optional params given\n     */\n    optionalParams: Array;\n  }) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonNgrxModule.html":{"url":"modules/CommonNgrxModule.html","title":"module - CommonNgrxModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonNgrxModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common-ngrx/src/lib/common-ngrx.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class CommonNgrxModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DateDocument.html":{"url":"interfaces/DateDocument.html","title":"interface - DateDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DateDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/lib/models/date-document.ts\n        \n\n\n            \n                Description\n            \n            \n                A date document represents an object with 2 date properties,\ncreatedAt and updatedAt.\nThese properties are usually readonly and created by the database.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DateDocument {\n  createdAt: Date;\n  updatedAt?: Date;\n}\n\n// whitespace change again, again\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DocumentWithId.html":{"url":"interfaces/DocumentWithId.html","title":"interface - DocumentWithId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DocumentWithId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/lib/models/id-document.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type DocumentId = string & { readonly brand: unique symbol };\nexport const DocumentId = (documentId: string): T =>\n  documentId as T;\n\nexport interface DocumentWithId {\n  id: T;\n}\n\n/**\n * Is a document with an id\n */\nexport const isDocumentWithId = (\n  doc: DocumentWithId | unknown\n): doc is DocumentWithId =>\n  typeof doc === 'object' &&\n  doc !== null &&\n  (doc as DocumentWithId).id !== undefined;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityTypeParams.html":{"url":"interfaces/EntityTypeParams.html","title":"interface - EntityTypeParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EntityTypeParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ngrx/src/lib/models/entity-type-params.ts\n        \n\n\n            \n                Description\n            \n            \n                This type is used to wrap type-params for all entity\nutilities. This is to cutdown on the amount of\ngenerics that need to be passed around\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            doc\n                                        \n                                \n                                \n                                        \n                                            docId\n                                        \n                                \n                                \n                                        \n                                            prefix\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        doc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        doc:     Doc\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Doc\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the document\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        docId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        docId:     DocId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the document-id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prefix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prefix:     Prefix\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Prefix\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The prefix string, usually TITLE_CASE\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { DocumentWithId } from '@nx-workspace-template/common';\n\n/**\n * This type is used to wrap type-params for all entity\n * utilities. This is to cutdown on the amount of\n * generics that need to be passed around\n */\nexport interface EntityTypeParams = Record & { id: DocId }\n> {\n  /**\n   * The prefix string, usually TITLE_CASE\n   */\n  prefix: Prefix;\n  /**\n   * The type of the document\n   */\n  doc: Doc;\n  /**\n   * The type of the document-id\n   */\n  docId: DocId;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpActionTypeParams.html":{"url":"interfaces/HttpActionTypeParams.html","title":"interface - HttpActionTypeParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HttpActionTypeParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ngrx/src/lib/util/http-action-type-params.ts\n        \n\n\n            \n                Description\n            \n            \n                \"Wrapper type\", used to define\nthe types for the htt-action-factory.\nnote the types are non-optimal, but for\nthe user-facing scheme it should work.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cancel\n                                        \n                                \n                                \n                                        \n                                            failure\n                                        \n                                \n                                \n                                        \n                                            request\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cancel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancel:     CancelPayload\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CancelPayload\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        failure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        failure:     FailurePayload\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FailurePayload\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        request\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        request:     RequestPayload\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RequestPayload\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:     SuccessPaylod\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SuccessPaylod\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HttpActionTypeParams {\n  request: RequestPayload;\n  success: SuccessPaylod;\n  failure: FailurePayload;\n  cancel: CancelPayload;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgLoggerModule.html":{"url":"modules/NgLoggerModule.html","title":"module - NgLoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    NgLoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NgLoggerModule\n\n\n\ncluster_NgLoggerModule_providers\n\n\n\n\nNgLoggerService\n\nNgLoggerService\n\n\n\nNgLoggerModule\n\nNgLoggerModule\n\nNgLoggerModule -->\n\nNgLoggerService->NgLoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ng-logger/src/lib/ng-logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NgLoggerService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: CommonLoggerConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-logger/src/lib/ng-logger.module.ts:15\n                \n            \n\n\n            \n                \n                    Setup configurations with the ng-logger-service\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                CommonLoggerConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgLoggerService } from './ng-logger.service';\nimport { CommonLoggerConfig } from '@nx-workspace-template/common';\nimport { NG_LOGGER_CONFIG } from './ng-logger-config';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [NgLoggerService],\n})\nexport class NgLoggerModule {\n  /**\n   * Setup configurations with the ng-logger-service\n   */\n  static forRoot(\n    config: CommonLoggerConfig\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgLoggerModule,\n      providers: [\n        NgLoggerService,\n        {\n          provide: NG_LOGGER_CONFIG,\n          useValue: config,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgLoggerService.html":{"url":"injectables/NgLoggerService.html","title":"injectable - NgLoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ng-logger/src/lib/ng-logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CommonLogger\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgLoggerConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/ng-logger/src/lib/ng-logger.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgLoggerConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Inherited from         CommonLogger\n\n                \n            \n            \n                \n                        Defined in         CommonLogger:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Inherited from         CommonLogger\n\n                \n            \n            \n                \n                        Defined in         CommonLogger:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Inherited from         CommonLogger\n\n                \n            \n            \n                \n                        Defined in         CommonLogger:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Inherited from         CommonLogger\n\n                \n            \n            \n                \n                        Defined in         CommonLogger:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgLoggerConfig\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(NG_LOGGER_CONFIG)@Optional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CommonLogger\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonLogger:10\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@angular/core';\nimport { CommonLogger } from '@nx-workspace-template/common';\nimport { NgLoggerConfig, NG_LOGGER_CONFIG } from './ng-logger-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgLoggerService extends CommonLogger {\n  constructor(\n    @Inject(NG_LOGGER_CONFIG) @Optional() public config: NgLoggerConfig\n  ) {\n    super(config);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScriptLoaderInitScripts.html":{"url":"interfaces/ScriptLoaderInitScripts.html","title":"interface - ScriptLoaderInitScripts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScriptLoaderInitScripts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/script-loader/src/lib/script-loader-init-scripts.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            scripts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        scripts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scripts:         ScriptParams[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ScriptParams[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ScriptParams } from './script-params';\n\nexport interface ScriptLoaderInitScripts {\n  scripts: ScriptParams[];\n}\nexport const SCRIPT_LOADER_INIT_SCRIPTS =\n  new InjectionToken('SCRIPT_LOADER_INIT_SCRIPTS');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScriptLoaderModule.html":{"url":"modules/ScriptLoaderModule.html","title":"module - ScriptLoaderModule","body":"\n                   \n\n\n\n\n    Modules\n    ScriptLoaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ScriptLoaderModule\n\n\n\ncluster_ScriptLoaderModule_providers\n\n\n\n\nScriptLoaderService\n\nScriptLoaderService\n\n\n\nScriptLoaderModule\n\nScriptLoaderModule\n\nScriptLoaderModule -->\n\nScriptLoaderService->ScriptLoaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/script-loader/src/lib/script-loader.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ScriptLoaderService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(params?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/script-loader/src/lib/script-loader.module.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ScriptLoaderService } from './script-loader.service';\nimport { ScriptParams } from './script-params';\nimport { SCRIPT_LOADER_INIT_SCRIPTS } from './script-loader-init-scripts';\nimport { SCRIPT_LOADER_LOADED } from './script-loader-loaded';\nimport { ReplaySubject } from 'rxjs';\n\n@NgModule({\n  providers: [\n    ScriptLoaderService,\n    {\n      provide: SCRIPT_LOADER_LOADED,\n      useValue: new ReplaySubject(1),\n    },\n  ],\n})\nexport class ScriptLoaderModule {\n  // **note** this is injected so the script loader service is setup, but handles everything internally\n  constructor(private scriptLoaderService: ScriptLoaderService) {}\n  public static forRoot(params?: {\n    /**\n     * Scripts to load automatically.\n     */\n    scripts?: ScriptParams[];\n  }): ModuleWithProviders {\n    return {\n      ngModule: ScriptLoaderModule,\n      providers: [\n        ScriptLoaderService,\n        // setup init scripts, if given\n        params && params.scripts\n          ? {\n              provide: SCRIPT_LOADER_INIT_SCRIPTS,\n              useValue: {\n                scripts: params.scripts,\n              },\n            }\n          : [],\n        // loaded event emitter, if there is one\n        {\n          provide: SCRIPT_LOADER_LOADED,\n          useValue: new ReplaySubject(1),\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScriptLoaderService.html":{"url":"injectables/ScriptLoaderService.html","title":"injectable - ScriptLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ScriptLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/script-loader/src/lib/script-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                scriptsLoaded$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                load\n                            \n                            \n                                    Public\n                                    Async\n                                loadScripts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document, scriptLoaderLoaded: ReplaySubject, initScripts: ScriptLoaderInitScripts)\n                    \n                \n                        \n                            \n                                Defined in libs/script-loader/src/lib/script-loader.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scriptLoaderLoaded\n                                                  \n                                                        \n                                                                    ReplaySubject\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        initScripts\n                                                  \n                                                        \n                                                                        ScriptLoaderInitScripts\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                    \n                    load(script: ScriptParams)\n                \n            \n\n\n            \n                \n                    Defined in libs/script-loader/src/lib/script-loader.service.ts:57\n                \n            \n\n\n            \n                \n                    Loads the individual scripts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    script\n                                    \n                                                ScriptParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        loadScripts\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadScripts(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/script-loader/src/lib/script-loader.service.ts:42\n                \n            \n\n\n            \n                \n                    Loads the list of scripts.\nDoes not currently check to see if they are already loaded!\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        scriptsLoaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject\n  >([])\n                    \n                \n                    \n                        \n                                Defined in libs/script-loader/src/lib/script-loader.service.ts:16\n                        \n                    \n\n            \n                \n                    List of scripts already loaded\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { BehaviorSubject, ReplaySubject } from 'rxjs';\nimport {\n  ScriptLoaderInitScripts,\n  SCRIPT_LOADER_INIT_SCRIPTS,\n} from './script-loader-init-scripts';\nimport { SCRIPT_LOADER_LOADED } from './script-loader-loaded';\nimport { ScriptParams } from './script-params';\n\n@Injectable()\nexport class ScriptLoaderService {\n  /**\n   * List of scripts already loaded\n   */\n  public scriptsLoaded$ = new BehaviorSubject\n  >([]);\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n\n    @Inject(SCRIPT_LOADER_LOADED)\n    scriptLoaderLoaded: ReplaySubject,\n\n    @Inject(SCRIPT_LOADER_INIT_SCRIPTS)\n    @Optional()\n    initScripts: ScriptLoaderInitScripts\n  ) {\n    if (initScripts) {\n      this.loadScripts(initScripts).then(() => scriptLoaderLoaded.next(true));\n    } else {\n      scriptLoaderLoaded.next(true);\n    }\n  }\n  /**\n   * Loads the list of scripts.\n   * **Does not currently check to see if they are already loaded!**\n   */\n  public async loadScripts(params: {\n    /**\n     * The list of script sources\n     */\n    scripts: ScriptParams[];\n  }): Promise {\n    const { scripts } = params;\n    if (!scripts) {\n      return [];\n    }\n    return Promise.all(scripts.map((script) => this.load(script)));\n  }\n  /**\n   * Loads the individual scripts\n   */\n  private async load(script: ScriptParams): Promise {\n    const { src, async, preLoad, callback } = script;\n    const existingScriptLoaded = this.scriptsLoaded$.value.find(\n      (scriptsLoaded) => scriptsLoaded.src === src\n    );\n    if (existingScriptLoaded) {\n      // if the script is already loaded, skip it;\n      return existingScriptLoaded.element;\n    }\n    // otherwise, create and add it\n    const scriptElement = this.document.createElement('script');\n    this.scriptsLoaded$.next([\n      ...this.scriptsLoaded$.value,\n      {\n        element: scriptElement,\n        src,\n      },\n    ]);\n    if (typeof preLoad === 'function') {\n      preLoad();\n    }\n    scriptElement.setAttribute('src', src);\n    scriptElement.setAttribute('async', '' + async);\n    const head = this.document.getElementsByTagName('head')[0];\n    const promise = new Promise((resolve) => (scriptElement.onload = resolve));\n    head.appendChild(scriptElement);\n    return promise\n      .then(() => {\n        if (typeof callback === 'function') {\n          callback();\n        }\n        return;\n      })\n      .then(() => scriptElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScriptParams.html":{"url":"interfaces/ScriptParams.html","title":"interface - ScriptParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScriptParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/script-loader/src/lib/script-params.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            async\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            callback\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            preLoad\n                                        \n                                \n                                \n                                        \n                                            src\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        async\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        async:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Function to call after the script is loaded\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preLoad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preLoad:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Function to call BEFORE\nthe script is loaded\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ScriptParams {\n  src: string;\n  async?: boolean;\n  /**\n   * Function to call BEFORE\n   * the script is loaded\n   */\n  preLoad?: () => void;\n  /**\n   * Function to call after the script is loaded\n   */\n  callback?: () => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                libs/common-ngrx/src/lib/entity/entity-action-factory.ts\n            \n            variable\n            entityActionFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common-ngrx/src/lib/models/entity-type-params.ts\n            \n            interface\n            EntityTypeParams\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                libs/common-ngrx/src/lib/util/http-action-factory.ts\n            \n            variable\n            httpActionFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common-ngrx/src/lib/util/http-action-type-params.ts\n            \n            interface\n            HttpActionTypeParams\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                libs/common/src/lib/models/date-document.ts\n            \n            interface\n            DateDocument\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/common/src/lib/models/id-document.ts\n            \n            interface\n            DocumentWithId\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/lib/models/id-document.ts\n            \n            variable\n            DocumentId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/lib/models/id-document.ts\n            \n            variable\n            isDocumentWithId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common/src/lib/utils/common-logger/common-logger-config.ts\n            \n            interface\n            CommonLoggerConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/common/src/lib/utils/common-logger/common-logger.ts\n            \n            class\n            CommonLogger\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                libs/common/src/lib/utils/get-id.ts\n            \n            variable\n            getId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common/src/lib/utils/is-indexable-value.ts\n            \n            variable\n            isIndexableValue\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common/src/lib/utils/remove-duplicates.ts\n            \n            variable\n            removeDuplicates\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common/src/lib/utils/to-map.ts\n            \n            variable\n            toMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/gh-codespaces/src/lib/util/get-codespace-name.ts\n            \n            variable\n            getCodespaceName\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/gh-codespaces/src/lib/util/is-codespace.ts\n            \n            variable\n            isCodespace\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/gh-codespaces/src/lib/util/normalize-codespace-root-path.ts\n            \n            variable\n            normalizeCodespaceRootPath\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ng-logger/src/lib/ng-logger-config.ts\n            \n            variable\n            NG_LOGGER_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ng-logger/src/lib/ng-logger.service.ts\n            \n            injectable\n            NgLoggerService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/script-loader/src/lib/script-loader-init-scripts.ts\n            \n            interface\n            ScriptLoaderInitScripts\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/script-loader/src/lib/script-loader-init-scripts.ts\n            \n            variable\n            SCRIPT_LOADER_INIT_SCRIPTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/script-loader/src/lib/script-loader-loaded.ts\n            \n            variable\n            SCRIPT_LOADER_LOADED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/script-loader/src/lib/script-loader.service.ts\n            \n            injectable\n            ScriptLoaderService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                libs/script-loader/src/lib/script-params.ts\n            \n            interface\n            ScriptParams\n            \n                40 %\n                (2/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^13.0.0\n        \n            @angular/cdk : ^13.0.2\n        \n            @angular/common : ^13.0.0\n        \n            @angular/compiler : ^13.0.0\n        \n            @angular/core : ^13.0.0\n        \n            @angular/flex-layout : ^12.0.0-beta.35\n        \n            @angular/forms : ^13.0.0\n        \n            @angular/material : ^13.0.2\n        \n            @angular/platform-browser : ^13.0.0\n        \n            @angular/platform-browser-dynamic : ^13.0.0\n        \n            @angular/router : ^13.0.0\n        \n            @ngrx/component : ^13.0.1\n        \n            @ngrx/effects : ^13.0.1\n        \n            @ngrx/entity : ^13.0.1\n        \n            @ngrx/router-store : ^13.0.1\n        \n            @ngrx/store : ^13.0.1\n        \n            @ngrx/store-devtools : ^13.0.1\n        \n            rxjs : ~7.4.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNxWorkspaceTemplate\nThis is a template repository that can be used to jump start\ndevelopment on nx-workspace based projects.\nMost tooling can be used as-is, this repo only includes extra\nsupporting files for codespaces\ndevelopment, using github-actions, with example deployment pipelines\nfor firebase, GCP App Engine, github pages and digital-ocean app platform.\nLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 Brad\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        CommonNgrxModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgLoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScriptLoaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NgLoggerModule\n\n\n\ncluster_NgLoggerModule_providers\n\n\n\ncluster_ScriptLoaderModule\n\n\n\ncluster_ScriptLoaderModule_providers\n\n\n\n\nNgLoggerService\n\nNgLoggerService\n\n\n\nNgLoggerModule\n\nNgLoggerModule\n\nNgLoggerModule -->\n\nNgLoggerService->NgLoggerModule\n\n\n\n\n\nScriptLoaderService\n\nScriptLoaderService\n\n\n\nScriptLoaderModule\n\nScriptLoaderModule\n\nScriptLoaderModule -->\n\nScriptLoaderService->ScriptLoaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DocumentId   (libs/.../id-document.ts)\n                        \n                        \n                            EntityActions   (libs/.../entity-actions.ts)\n                        \n                        \n                            LogLevels   (libs/.../common-logger-config.ts)\n                        \n                        \n                            NgLoggerConfig   (libs/.../ng-logger-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/common/src/lib/models/id-document.ts\n    \n    \n        \n            \n                \n                    \n                    DocumentId\n                \n            \n            \n                \n                    Generic document-id. Used for generic testing and documents.\nYou shouldn't use this directly, instead use\nbranded types.\nThis is also a TS-level feature\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/common-ngrx/src/lib/entity/entity-actions.ts\n    \n    \n        \n            \n                \n                    \n                    EntityActions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    libs/common/src/lib/utils/common-logger/common-logger-config.ts\n    \n    \n        \n            \n                \n                    \n                    LogLevels\n                \n            \n            \n                \n                        \"log\" | \"debug\" | \"warn\" | \"error\"\n\n                \n            \n        \n    \n    libs/ng-logger/src/lib/ng-logger-config.ts\n    \n    \n        \n            \n                \n                    \n                    NgLoggerConfig\n                \n            \n            \n                \n                            CommonLoggerConfig\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DocumentId   (libs/.../id-document.ts)\n                        \n                        \n                            entityActionFactory   (libs/.../entity-action-factory.ts)\n                        \n                        \n                            getCodespaceName   (libs/.../get-codespace-name.ts)\n                        \n                        \n                            getId   (libs/.../get-id.ts)\n                        \n                        \n                            httpActionFactory   (libs/.../http-action-factory.ts)\n                        \n                        \n                            isCodespace   (libs/.../is-codespace.ts)\n                        \n                        \n                            isDocumentWithId   (libs/.../id-document.ts)\n                        \n                        \n                            isIndexableValue   (libs/.../is-indexable-value.ts)\n                        \n                        \n                            NG_LOGGER_CONFIG   (libs/.../ng-logger-config.ts)\n                        \n                        \n                            normalizeCodespaceRootPath   (libs/.../normalize-codespace-root-path.ts)\n                        \n                        \n                            removeDuplicates   (libs/.../remove-duplicates.ts)\n                        \n                        \n                            SCRIPT_LOADER_INIT_SCRIPTS   (libs/.../script-loader-init-scripts.ts)\n                        \n                        \n                            SCRIPT_LOADER_LOADED   (libs/.../script-loader-loaded.ts)\n                        \n                        \n                            toMap   (libs/.../to-map.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/common/src/lib/models/id-document.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DocumentId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (documentId: string): T =>\n  documentId as T\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDocumentWithId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  doc: DocumentWithId | unknown\n): doc is DocumentWithId =>\n  typeof doc === 'object' &&\n  doc !== null &&\n  (doc as DocumentWithId).id !== undefined\n                    \n                \n\n            \n                \n                    Is a document with an id\n\n                \n            \n\n        \n    \n\n    libs/common-ngrx/src/lib/entity/entity-action-factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        entityActionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  prefix: TypeParams['prefix']\n): EntityActions => ({\n  get: createAction(\n    `[${prefix}] Get`,\n    props()\n  ),\n  getSuccess: createAction(\n    `[${prefix}] Get Success`,\n    props()\n  ),\n  getFailed: createAction(\n    `[${prefix}] Get Failed`,\n    props()\n  ),\n  getCancel: createAction(`[${prefix}] Get Cancel`),\n\n  create: createAction(\n    `[${prefix}] Create`,\n    props;\n    }>()\n  ),\n  createSuccess: createAction(\n    `[${prefix}] Create Success`,\n    props()\n  ),\n  createFailed: createAction(\n    `[${prefix}] Create Failed`,\n    props()\n  ),\n  createCancel: createAction(`[${prefix}] Create Cancel`),\n\n  update: createAction(\n    `[${prefix}] Update`,\n    props()\n  ),\n  updateSuccess: createAction(\n    `[${prefix}] Update Success`,\n    props()\n  ),\n  updateFailed: createAction(\n    `[${prefix}] Update Failed`,\n    props()\n  ),\n  updateCancel: createAction(`[${prefix}] Update Cancel`),\n\n  delete: createAction(\n    `[${prefix}] Delete`,\n    props()\n  ),\n  deleteSuccess: createAction(\n    `[${prefix}] Delete Success`,\n    props()\n  ),\n  deleteFailed: createAction(\n    `[${prefix}] Delete Failed`,\n    props()\n  ),\n  deleteCancel: createAction(`[${prefix}] Delete Cancel`),\n  // TODO: add bulk actions\n})\n                    \n                \n\n            \n                \n                    Returns a list of common actions for an entity.\n\n                \n            \n\n        \n    \n\n    libs/gh-codespaces/src/lib/util/get-codespace-name.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCodespaceName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (env: Record): string =>\n  env.CODESPACE_NAME\n                    \n                \n\n            \n                \n                    Returns the codespace name from the env, should be passed\nthe process.env from nodejs.\n\n                \n            \n\n        \n    \n\n    libs/common/src/lib/utils/get-id.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  id: string | DocumentId | DocumentWithId\n): T | '' => {\n  if (!id) {\n    return '';\n  }\n  if (typeof id === 'string') {\n    return DocumentId(id);\n  }\n  if (isDocumentWithId(id)) {\n    return DocumentId(id.id);\n  }\n  return '';\n}\n                    \n                \n\n            \n                \n                    Utility function to get id information\nnote assumes the id of the document is\n\n                \n            \n\n        \n    \n\n    libs/common-ngrx/src/lib/util/http-action-factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpActionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ({\n  prefix,\n  action,\n}: {\n  prefix: TypeParams['prefix'];\n  action: Action;\n}): [\n  FunctionWithParametersType &\n    TypedAction,\n  FunctionWithParametersType &\n    TypedAction,\n  FunctionWithParametersType &\n    TypedAction,\n  FunctionWithParametersType &\n    TypedAction\n] => [\n  createAction(`[${prefix}] ${action} Request`, props()),\n  createAction(`[${prefix}] ${action} Success`, props()),\n  createAction(`[${prefix}] ${action} Failed`, props()),\n  createAction(`[${prefix}] ${action} Cancel`, props()),\n]\n                    \n                \n\n            \n                \n                    Function that that returns 4 actions.\n\n\"request\" action\n\"success\" action\n\"Failed\" action\n\"cancel\" action\n\nThese 4 can be used to create other ngrx actions flows, and aren't only\nisolated to just HTTP requests.\n\n                \n            \n\n        \n    \n\n    libs/gh-codespaces/src/lib/util/is-codespace.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isCodespace\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (env: Record) =>\n  env.CODESPACES === 'true'\n                    \n                \n\n            \n                \n                    Returns if we are in a codespace from the env, which\nshould be passed the poccess.env, as we look if\nthere is an environment variable of CODESPACES=true\n\n                \n            \n\n        \n    \n\n    libs/common/src/lib/utils/is-indexable-value.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isIndexableValue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  value: unknown\n): value is string | symbol | number =>\n  typeof value === 'string' ||\n  typeof value === 'symbol' ||\n  typeof value === 'number'\n                    \n                \n\n            \n                \n                    Type-guard that can be used on individual entities, to verify\nthey can be a \"key\" in a Record<> type.\n\n                \n            \n\n        \n    \n\n    libs/ng-logger/src/lib/ng-logger-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NG_LOGGER_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'NG_LOGGER_CONFIG'\n)\n                    \n                \n\n\n        \n    \n\n    libs/gh-codespaces/src/lib/util/normalize-codespace-root-path.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        normalizeCodespaceRootPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ({\n  codespaceName,\n  port,\n}: {\n  /**\n   * The name of the codespace, available from the environment variables\n   * in a codespace via `CODESPACE_NAME`\n   */\n  codespaceName: string;\n  /**\n   * The port number we are to append to the end of the codespaceURL.\n   */\n  port: number | string;\n}) => `https://${codespaceName}-${port}.githubpreview.dev/`\n                    \n                \n\n            \n                \n                    Returns the normalized codespace path, from the given params.\nGenerally used on the back-end for oauth redirects, will require\nwork with the console documentation for supported domains.\nnote still a WIP and needs testing to see if this is a viable\napproach to support oauth redirects in a codespace.\n\n                \n            \n\n        \n    \n\n    libs/common/src/lib/utils/remove-duplicates.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        removeDuplicates\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (arr: Array): Array => {\n  if (!arr) {\n    return [];\n  }\n  return Array.from(arr.reduce((acc, el) => acc.add(el), new Set()));\n}\n                    \n                \n\n            \n                \n                    Removes duplicates using a set\n\n                \n            \n\n        \n    \n\n    libs/script-loader/src/lib/script-loader-init-scripts.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SCRIPT_LOADER_INIT_SCRIPTS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('SCRIPT_LOADER_INIT_SCRIPTS')\n                    \n                \n\n\n        \n    \n\n    libs/script-loader/src/lib/script-loader-loaded.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SCRIPT_LOADER_LOADED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>(\n  'SCRIPT_LOADER_LOADED'\n)\n                    \n                \n\n            \n                \n                    Injection token of the observable fired when init scripts are loaded\n\n                \n            \n\n        \n    \n\n    libs/common/src/lib/utils/to-map.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toMap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ,\n  Key extends keyof Entity,\n  TypeOfKey extends string\n>(\n  entities: Entity[],\n  key?: Key\n): Record => {\n  type RecordKey = (Entity[Key] & string) | symbol | number;\n  if (!entities) return {} as Record;\n\n  return entities.reduce((acc, entity) => {\n    const keyValue = entity[key || 'id'];\n    if (isIndexableValue(keyValue)) acc[keyValue as RecordKey] = entity;\n    return acc;\n  }, {} as Record);\n}\n                    \n                \n\n            \n                \n                    Generic map function used to convert an array to\na map with the given key. All ids are automatically converted to ids\nin the return mapping\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
