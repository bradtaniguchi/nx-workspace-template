var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.449,1,1.795]],["body/components/AppComponent.html",[0,2.444,1,3.196,2,3.537,3,0.304,4,0.304,5,4.376,6,3.053,7,3.053,8,0.199,9,1.973,10,3.462,11,3.053,12,4.751,13,3.07,14,3.07,15,2.209,16,3.931,17,5.259,18,0.589,19,0.024,20,0.685,21,3.053,22,0.304,23,0.735,24,3.053,25,3.931,26,3.537,27,3.053,28,4.591,29,3.053,30,1.409,31,3.053,32,1.973,33,3.053,34,1.973,35,3.053,36,3.053,37,3.053,38,0.014,39,0.018,40,0.014]],["title/modules/AppModule.html",[41,1.795,42,2.32]],["body/modules/AppModule.html",[0,1.767,1,3.412,3,0.219,4,0.219,8,0.144,9,1.421,13,1.421,14,1.421,18,0.925,19,0.025,20,0.493,22,0.219,23,0.529,32,2.032,34,2.032,38,0.01,39,0.015,40,0.01,42,4.449,43,2.251,44,1.892,45,2.493,46,2.493,47,2.493,48,2.493,49,3.474,50,3.614,51,3.614,52,2.368,53,1.656,54,1.53,55,2.941,56,3.144,57,2.368,58,4.206,59,2.189,60,4.206,61,2.493,62,2.198,63,2.198,64,1.802,65,1.802,66,1.53,67,2.198,68,2.941,69,2.941,70,2.941,71,2.941,72,2.941,73,2.941,74,2.941,75,3.604,76,2.941,77,2.941,78,2.941,79,2.198,80,2.198,81,2.941,82,2.198,83,2.941,84,2.941,85,2.941,86,2.941,87,2.941,88,2.493,89,2.941,90,1.421,91,2.941,92,2.941,93,2.941,94,1.421,95,2.493,96,1.978,97,2.493,98,4.206,99,2.198,100,1.235,101,2.941,102,2.493,103,1.978]],["title/interfaces/BuildConfig.html",[104,0.423,105,1.942]],["body/interfaces/BuildConfig.html",[3,0.245,4,0.245,8,0.161,18,0.474,19,0.025,20,0.551,22,0.339,38,0.011,39,0.016,40,0.011,44,2.047,94,3.086,97,4.773,99,4.209,100,1.382,102,4.773,104,0.403,105,2.562,106,1.065,107,0.592,108,1.589,109,1.589,110,1.711,111,1.48,112,0.787,113,2.789,114,4.55,115,4.55,116,3.858,117,3.17,118,2.365,119,4.55,120,3.858,121,3.858,122,2.93,123,3.858,124,3.858,125,3.858,126,4.55,127,4.55,128,4.55,129,2.789,130,4.55,131,4.55,132,4.55,133,2.789,134,3.401,135,0.403,136,1.072,137,2.918,138,5.63,139,2.789,140,3.858,141,4.55,142,3.858,143,4.55,144,4.55,145,4.55,146,4.55,147,2.015,148,1.711,149,2.458,150,2.788]],["title/modules/BuildConfigModule.html",[41,1.795,49,2.114]],["body/modules/BuildConfigModule.html",[3,0.288,4,0.288,8,0.189,18,0.868,19,0.025,20,0.649,22,0.288,23,0.697,30,1.036,38,0.013,39,0.018,40,0.013,43,1.625,49,3.473,57,2.178,59,2.949,94,2.738,103,2.602,107,0.914,108,2.453,109,2.453,112,0.515,122,2.013,151,3.869,152,1.424,153,3.795,154,3.795,155,3.28,156,3.388,157,1.036,158,3.869,159,3.795,160,4.304,161,2.625,162,2.453,163,1.253,164,0.799,165,1.424,166,4.236,167,5.077,168,2.892,169,3.111,170,3.869,171,2.859,172,1.424,173,2.892]],["title/injectables/BuildConfigService.html",[169,2.114,174,0.924]],["body/injectables/BuildConfigService.html",[3,0.218,4,0.218,8,0.239,15,1.764,18,0.817,19,0.025,20,0.492,22,0.218,23,0.528,30,0.786,38,0.01,39,0.015,40,0.01,94,2.998,95,3.56,100,1.764,104,0.515,105,3.014,107,0.883,108,2.369,109,2.369,111,1.32,112,0.391,135,0.36,136,0.989,140,3.56,156,3.014,157,1.125,161,2.754,163,0.95,164,0.606,168,2.193,169,2.573,171,1.652,172,1.971,174,1.434,175,1.417,176,2.487,177,4.199,178,4.199,179,4.199,180,3.005,181,4.199,182,2.549,183,4.199,184,1.889,185,2.934,186,5.353,187,2.934,188,2.364,189,1.652,190,4.199,191,4.199,192,4.199,193,4.199,194,4.199,195,3.56,196,4.199,197,2.573,198,4.199,199,4.199,200,4.199,201,1.889,202,4.199,203,2.028,204,4.199,205,2.934,206,4.199,207,4.199,208,4.199,209,3.56,210,2.193,211,2.934,212,1.417,213,1.798,214,1.798,215,3.139,216,2.573,217,2.934]],["title/interfaces/BuildConfigWithPathConfig.html",[104,0.423,218,1.942]],["body/interfaces/BuildConfigWithPathConfig.html",[3,0.227,4,0.227,8,0.3,18,0.623,19,0.025,20,0.512,22,0.444,38,0.011,39,0.015,40,0.011,75,4.291,90,2.088,94,2.885,96,4.291,100,1.284,104,0.53,105,2.434,106,0.99,107,0.55,108,1.476,109,1.476,110,1.59,112,0.668,113,1.873,118,1.816,122,1.59,135,0.375,136,1.019,137,2.453,147,2.649,148,2.61,156,2.824,157,0.819,161,2.849,162,2.088,164,0.893,171,2.434,203,2.088,213,1.873,214,1.873,218,3.07,219,4.252,220,3.749,221,3.749,222,3.664,223,4.252,224,2.649,225,2.284,226,2.284,227,2.284,228,2.284,229,2.284,230,2.824,231,2.59,232,3.231,233,2.434,234,3.231,235,1.375]],["title/interfaces/BuildConfigWithoutPathConfig.html",[104,0.423,230,1.942]],["body/interfaces/BuildConfigWithoutPathConfig.html",[3,0.235,4,0.235,8,0.284,18,0.638,19,0.025,20,0.529,22,0.449,38,0.011,39,0.015,40,0.011,75,3.72,90,1.525,94,2.916,96,4.322,100,1.326,104,0.542,105,3.114,106,1.022,107,0.568,108,1.525,109,1.525,110,1.642,112,0.589,113,1.934,118,1.858,122,1.642,135,0.387,136,1.042,137,1.989,147,2.71,148,2.656,156,2.874,157,1.185,161,2.862,162,2.136,164,0.913,171,2.49,203,2.136,213,1.934,214,1.934,218,2.874,219,2.675,220,3.815,221,3.305,222,2.675,223,4.327,224,1.934,225,2.359,226,2.359,227,2.359,228,2.359,229,2.359,230,3.114,231,3.749,232,3.305,233,2.49,234,3.305,235,1.42]],["title/guards/CanDeactivateGuard.html",[236,2.114,237,2.579]],["body/guards/CanDeactivateGuard.html",[0,2.837,3,0.238,4,0.238,8,0.156,15,1.346,18,0.803,19,0.025,20,0.537,22,0.238,23,0.577,30,1.197,38,0.011,39,0.016,40,0.011,64,1.964,107,0.927,112,0.427,135,0.393,152,1.645,157,1.197,163,1.448,164,0.923,165,2.05,172,2.05,174,1.197,197,3.154,212,1.548,215,3.847,233,2.516,235,1.442,237,3.341,238,3.204,239,3.847,240,4.363,241,2.717,242,5.276,243,5.146,244,3.204,245,4.079,246,3.204,247,4.469,248,4.469,249,3.789,250,3.341,251,4.469,252,3.341,253,3.461,254,3.341,255,2.326,256,3.204,257,3.204,258,3.204,259,1.804,260,2.395,261,2.326,262,4.469,263,1.804,264,3.204,265,3.204]],["title/classes/CommonLogger.html",[23,0.621,266,2.32]],["body/classes/CommonLogger.html",[3,0.194,4,0.194,8,0.127,18,0.376,19,0.025,22,0.194,23,0.469,30,1.447,38,0.009,39,0.013,40,0.009,111,1.732,112,0.753,117,2.168,118,1.617,120,3.264,123,3.264,124,3.264,129,2.359,135,0.319,136,0.907,152,1.863,157,1.643,161,2.523,163,1.749,164,1.208,165,1.988,172,1.988,182,2.061,184,1.172,201,1.732,203,2.213,235,2.43,261,3.125,266,2.589,267,2.207,268,4.039,269,4.039,270,2.207,271,3.85,272,3.85,273,2.061,274,2.359,275,2.589,276,3.85,277,4.578,278,2.207,279,3.041,280,2.604,281,3.632,282,2.604,283,3.264,284,4.951,285,2.604,286,3.783,287,3.381,288,3.264,289,2.604,290,3.264,291,2.604,292,3.264,293,2.604,294,2.604,295,2.604,296,2.589,297,2.878,298,1.946,299,2.604,300,2.604,301,2.207,302,2.604,303,2.604,304,2.604,305,2.604,306,2.604,307,2.604,308,2.604,309,2.604]],["title/interfaces/CommonLoggerConfig.html",[104,0.423,279,1.942]],["body/interfaces/CommonLoggerConfig.html",[3,0.268,4,0.268,8,0.176,19,0.025,22,0.268,38,0.013,39,0.017,40,0.013,104,0.441,106,1.167,110,1.874,111,1.62,112,0.728,129,2.207,135,0.441,136,1.141,137,1.62,142,4.104,152,1.782,164,1.26,201,1.62,203,2.339,224,2.967,235,2.178,261,1.874,263,3.292,268,2.422,269,2.422,273,2.745,274,2.207,275,2.422,277,5.327,279,2.726,284,2.692,286,3.619,287,2.028,296,3.256,297,4.371,298,4.371,310,5.848,311,3.619,312,4.841,313,4.104,314,4.841,315,4.841,316,4.104,317,2.519,318,4.104,319,3.601,320,2.692]],["title/modules/CommonNgrxModule.html",[41,1.795,321,2.579]],["body/modules/CommonNgrxModule.html",[3,0.369,4,0.369,8,0.242,18,0.856,19,0.024,20,0.831,22,0.369,23,0.893,38,0.017,39,0.021,40,0.017,43,2.083,57,2.792,59,3.087,107,0.893,321,4.434,322,4.958,323,4.958,324,3.99,325,2.792]],["title/components/DashboardComponent.html",[0,1.449,32,1.667]],["body/components/DashboardComponent.html",[0,2.031,1,1.488,2,2.773,3,0.213,4,0.213,5,3.93,6,2.138,7,2.138,8,0.14,9,1.382,11,2.138,12,4.193,13,2.909,14,2.71,16,3.082,18,0.413,19,0.024,20,0.479,21,3.614,22,0.213,23,0.515,24,2.138,25,3.082,26,2.773,27,2.138,28,3.955,29,2.138,30,1.104,31,2.138,32,2.556,33,2.138,34,1.382,35,2.138,36,2.138,37,2.138,38,0.01,39,0.014,40,0.01,90,1.992,326,2.425,327,3.495,328,3.495,329,4.123,330,4.834,331,4.834,332,5.843,333,4.834,334,4.834,335,4.834,336,5.843,337,4.834,338,5.843,339,4.834,340,4.098,341,4.123,342,2.425,343,5.291,344,4.485,345,6.164,346,4.123,347,4.123,348,4.123,349,5.291,350,3.495,351,4.123,352,4.123,353,4.123,354,4.123,355,4.123,356,4.123,357,3.082,358,5.291,359,5.291,360,5.291,361,2.773,362,3.495,363,3.082,364,4.123,365,4.123,366,4.123,367,4.123]],["title/modules/DashboardModule.html",[41,1.795,50,2.114]],["body/modules/DashboardModule.html",[3,0.293,4,0.293,8,0.193,9,1.904,18,0.947,19,0.025,20,0.661,22,0.293,23,0.71,32,3.325,38,0.014,39,0.018,40,0.014,43,1.656,44,2.313,50,4.023,52,2.894,53,2.219,54,2.051,56,3.842,57,2.219,59,2.675,139,2.416,324,3.457,325,2.219,368,3.342,369,3.342,370,3.342,371,3.942,372,4.357,373,5.14,374,2.947,375,2.947,376,4.357,377,3.342,378,5.14,379,3.942,380,4.357,381,3.342,382,3.942,383,3.342]],["title/interfaces/DateDocument.html",[104,0.423,384,2.579]],["body/interfaces/DateDocument.html",[3,0.331,4,0.331,8,0.217,19,0.024,22,0.331,38,0.015,39,0.019,40,0.015,99,5.098,104,0.545,106,1.44,111,2.001,112,0.739,113,2.725,135,0.545,136,1.493,164,1.146,216,2.725,235,2.001,320,3.324,384,4.149,385,3.77,386,2.725,387,2.504,388,4.447,389,6.521,390,6.521,391,4.447,392,4.447,393,4.447,394,4.447,395,5.55]],["title/interfaces/DeactivatableComponent.html",[104,0.423,245,2.32]],["body/interfaces/DeactivatableComponent.html",[0,2.182,3,0.298,4,0.298,8,0.196,18,0.578,19,0.025,22,0.298,38,0.014,39,0.018,40,0.014,104,0.491,106,1.297,107,0.935,111,1.802,135,0.491,152,1.912,157,1.073,165,1.475,172,1.912,189,2.924,197,3.182,212,1.935,236,3.182,239,3.882,242,5.488,245,3.493,249,5.169,250,4.558,253,3.876,254,3.882,255,2.702,267,4.403,396,4.403,397,3.395,398,3.882,399,4.403,400,5.193,401,6.097,402,4.005,403,5.193]],["title/interfaces/DocumentWithId.html",[104,0.423,404,2.114]],["body/interfaces/DocumentWithId.html",[3,0.307,4,0.307,8,0.201,19,0.025,22,0.459,38,0.014,39,0.018,40,0.014,104,0.505,106,1.336,112,0.705,135,0.505,136,1.247,137,2.381,148,2.754,216,2.527,233,2.322,235,1.856,261,2.146,361,4.288,386,2.527,387,2.322,404,3.778,405,2.774,406,4.288,407,5.405,408,4.147,409,4.124,410,4.124,411,3.496,412,3.083,413,2.774,414,3.496,415,3.496]],["title/interfaces/EntityTypeParams.html",[104,0.423,416,2.579]],["body/interfaces/EntityTypeParams.html",[3,0.27,4,0.27,8,0.177,13,1.755,14,1.755,18,0.524,19,0.025,22,0.27,38,0.013,39,0.017,40,0.013,65,2.226,104,0.445,106,1.177,107,0.654,111,1.635,112,0.906,118,2.046,134,2.715,135,0.445,136,1.147,137,2.191,311,3.64,317,2.534,320,3.64,361,4.328,387,3.304,404,2.226,406,3.694,416,3.64,417,3.08,418,2.443,419,4.869,420,4.128,421,4.869,422,4.869,423,4.869,424,4.869,425,4.869,426,4.869,427,6.539,428,5.615,429,4.869]],["title/injectables/ErrorHandlerService.html",[174,0.924,430,2.579]],["body/injectables/ErrorHandlerService.html",[3,0.23,4,0.23,8,0.151,15,1.296,18,0.445,19,0.025,20,0.517,22,0.23,23,0.556,30,1.166,38,0.011,39,0.015,40,0.011,79,2.307,107,0.908,111,1.388,118,1.829,135,0.378,137,1.958,152,1.602,157,1.166,162,3.131,163,1.41,164,0.899,165,1.136,172,2.016,174,1.166,175,1.491,182,2.696,201,2.464,203,2.103,235,1.958,259,1.737,261,2.624,273,1.958,274,2.667,287,2.451,350,3.69,413,3.391,430,3.253,431,4.275,432,4.275,433,2.616,434,3.253,435,5.476,436,4.352,437,4.352,438,4.352,439,4.352,440,4.352,441,3.69,442,4.352,443,4.352,444,4.352,445,4.352,446,4.352,447,5.476,448,4.352,449,3.086,450,3.69,451,4.352,452,4.275,453,4.352,454,3.086,455,4.352,456,4.352,457,3.086,458,3.086,459,3.086,460,3.086,461,3.086,462,3.086,463,2.616,464,3.086,465,3.086,466,3.086,467,3.086,468,3.086]],["title/injectables/GlobalErrorHandler.html",[174,0.924,469,2.579]],["body/injectables/GlobalErrorHandler.html",[3,0.312,4,0.312,8,0.205,18,0.772,19,0.024,20,0.703,22,0.312,23,0.755,30,1.433,38,0.015,39,0.019,40,0.015,66,2.182,107,1.06,112,0.559,135,0.514,152,1.969,157,1.433,163,1.733,164,1.105,165,1.544,174,1.433,175,2.026,184,1.887,201,2.65,260,3.134,261,2.182,273,2.407,287,2.361,452,3.555,469,3.998,470,4.993,471,3.555,472,5.349,473,4.193,474,3.493,475,4.193,476,5.349,477,4.193,478,5.349,479,3.555,480,2.82,481,4.193]],["title/interfaces/HttpActionTypeParams.html",[104,0.423,482,2.579]],["body/interfaces/HttpActionTypeParams.html",[3,0.313,4,0.313,8,0.205,19,0.024,22,0.313,38,0.015,39,0.019,40,0.015,88,3.567,104,0.516,106,1.363,107,0.758,111,1.893,112,0.874,118,1.768,135,0.516,136,1.263,250,3.145,398,3.145,418,2.83,482,4.007,483,3.145,484,3.605,485,4.207,486,4.207,487,4.544,488,4.207,489,4.207,490,3.145,491,4.207,492,4.207,493,4.207,494,5.265,495,6.211,496,3.806,497,5.265,498,5.899,499,5.899,500,5.899,501,5.899]],["title/interceptors/HttpLoadingInterceptor.html",[502,2.925,503,2.579]],["body/interceptors/HttpLoadingInterceptor.html",[3,0.265,4,0.265,8,0.174,15,1.496,18,0.877,19,0.025,20,0.597,22,0.265,23,0.641,30,1.287,38,0.012,39,0.017,40,0.012,107,0.979,112,0.64,135,0.436,152,1.769,157,1.287,163,1.556,164,0.992,165,1.311,168,2.661,172,1.311,174,1.287,184,1.602,188,2.005,201,1.602,212,1.72,253,3.657,259,2.005,260,2.661,463,4.934,480,2.395,496,2.944,503,3.591,504,3.56,505,3.657,506,3.657,507,3.018,508,5.437,509,3.56,510,3.915,511,3.56,512,2.944,513,3.56,514,5.82,515,5.82,516,3.56,517,3.56,518,4.804,519,4.804,520,4.804,521,3.56,522,3.56,523,3.56,524,3.231,525,3.018,526,3.56,527,4.804,528,3.56]],["title/interfaces/HttpLoadingState.html",[104,0.423,512,2.114]],["body/interfaces/HttpLoadingState.html",[3,0.322,4,0.322,8,0.211,19,0.024,22,0.322,38,0.015,39,0.019,40,0.015,104,0.53,106,1.401,107,0.778,112,0.726,135,0.53,136,1.285,164,1.296,188,3.071,255,3.437,496,3.342,505,2.908,506,2.908,512,3.342,529,3.232,530,4.219,531,4.562,532,4.623,533,4.077,534,4.623,535,4.077,536,3.342]],["title/injectables/HttpLoadingStateService.html",[174,0.924,510,2.32]],["body/injectables/HttpLoadingStateService.html",[3,0.238,4,0.238,8,0.156,15,1.346,18,0.742,19,0.025,20,0.537,22,0.238,23,0.577,38,0.011,39,0.016,40,0.011,107,1.054,133,2.739,135,0.393,136,1.053,157,1.492,174,1.197,175,1.548,180,3.154,182,2.901,184,2.315,188,2.897,189,2.897,216,3.952,255,2.897,259,1.804,496,2.739,505,3.939,506,3.939,510,3.006,512,1.964,530,3.745,531,4.337,536,2.739,537,2.395,538,4.363,539,4.363,540,4.363,541,3.204,542,3.789,543,4.469,544,3.789,545,3.204,546,4.72,547,4.72,548,2.717,549,3.204,550,2.155,551,2.395,552,2.717,553,2.717]],["title/components/MainComponent.html",[0,1.449,34,1.667]],["body/components/MainComponent.html",[0,2.252,1,1.801,2,3.17,3,0.258,4,0.258,5,4.35,6,2.588,7,2.588,8,0.169,9,2.589,11,2.588,12,4.499,13,3.124,14,3.124,16,3.523,18,0.68,19,0.024,20,0.58,21,2.588,22,0.258,23,0.623,24,2.588,25,3.523,26,3.17,27,2.588,28,4.301,29,2.588,30,1.436,31,2.588,32,1.672,33,2.588,34,2.779,35,4.006,36,2.588,37,2.588,38,0.012,39,0.016,40,0.012,65,2.121,66,1.801,112,0.628,135,0.424,136,1.111,157,1.263,163,1.121,164,0.715,169,3.689,182,2.121,184,1.558,301,2.935,327,3.996,328,3.996,342,2.935,554,2.935,555,4.713,556,5.753,557,3.462,558,3.462,559,3.462,560,4.713,561,4.713]],["title/modules/MainModule.html",[41,1.795,51,2.114]],["body/modules/MainModule.html",[3,0.278,4,0.278,8,0.182,9,1.802,18,0.97,19,0.025,20,0.625,22,0.278,23,0.672,34,3.297,38,0.013,39,0.017,40,0.013,43,1.567,44,2.23,51,3.969,52,2.791,53,2.1,54,1.941,56,3.705,57,2.1,59,2.579,63,3.705,64,2.286,139,2.286,324,3.334,325,2.1,372,4.202,374,2.788,375,2.788,376,4.202,377,3.162,380,4.202,381,3.162,383,3.162,550,2.509,562,3.162,563,3.162,564,3.162,565,3.73,566,4.956,567,4.956,568,3.73,569,4.956,570,3.73,571,4.956,572,3.73]],["title/modules/NgLoggerModule.html",[41,1.795,573,2.32]],["body/modules/NgLoggerModule.html",[3,0.266,4,0.266,8,0.175,13,1.73,14,1.73,18,0.878,19,0.025,20,0.6,22,0.266,23,0.645,30,0.959,38,0.012,39,0.017,40,0.012,43,1.504,44,2.17,52,2.715,53,2.016,54,1.863,57,2.016,59,2.838,65,2.194,66,3.036,103,3.668,107,0.868,112,0.477,122,1.863,152,1.318,153,3.605,154,3.605,155,3.036,157,0.959,159,3.605,160,4.088,161,2.451,162,2.33,163,1.16,164,0.74,165,1.318,166,4.076,172,1.318,173,2.677,273,2.453,279,3.285,324,3.244,325,2.016,474,3.609,479,3.036,573,4.312,574,3.036,575,3.036,576,2.955,577,3.581,578,3.581,579,3.244]],["title/injectables/NgLoggerService.html",[174,0.924,474,1.942]],["body/injectables/NgLoggerService.html",[3,0.235,4,0.235,8,0.154,13,1.525,14,1.525,15,1.326,18,0.736,19,0.025,20,0.529,22,0.235,23,0.568,30,1.56,38,0.011,39,0.015,40,0.011,65,1.934,66,1.642,107,0.796,112,0.804,129,2.71,133,2.71,135,0.387,136,1.042,152,1.628,157,1.617,161,2.446,163,1.886,164,1.28,165,2.036,174,1.185,175,1.525,182,2.297,184,1.989,201,1.989,210,2.359,259,1.777,266,4.254,273,1.42,274,2.71,275,2.974,278,2.675,281,3.72,283,2.675,284,4.727,286,4.134,287,3.114,288,2.675,290,2.675,292,2.675,474,2.49,576,2.71,579,2.123,580,2.675,581,4.936,582,3.156,583,5.823,584,3.156,585,3.156,586,3.156,587,3.156,588,3.156,589,3.156,590,3.156,591,3.156,592,3.156]],["title/interfaces/RouteLoadingState.html",[104,0.423,593,2.32]],["body/interfaces/RouteLoadingState.html",[3,0.324,4,0.324,8,0.213,19,0.024,22,0.324,38,0.015,39,0.019,40,0.015,104,0.534,106,1.41,107,0.784,112,0.73,135,0.534,136,1.291,164,1.299,255,3.443,529,3.255,530,4.23,531,4.568,532,4.644,533,4.094,534,4.644,535,4.094,536,3.357,593,3.684,594,3.255,595,3.255,596,4.644]],["title/injectables/RouteLoadingStateService.html",[174,0.924,597,2.579]],["body/injectables/RouteLoadingStateService.html",[3,0.21,4,0.21,8,0.138,15,1.188,18,0.805,19,0.025,20,0.474,22,0.21,23,0.509,30,0.757,38,0.01,39,0.014,40,0.01,64,1.733,82,2.114,107,1.005,112,0.377,133,2.506,135,0.347,136,0.964,157,1.41,163,0.916,164,0.584,172,1.938,174,1.095,175,1.366,180,2.944,182,2.817,184,1.272,189,2.963,197,1.733,212,1.366,216,3.837,255,2.739,259,1.592,313,2.397,399,2.397,413,3.231,480,1.902,524,3.231,525,4.072,530,3.54,531,4.277,536,2.506,537,2.114,538,4.072,539,4.072,540,4.072,542,3.467,544,3.467,546,4.462,547,4.462,548,3.467,550,1.902,551,2.114,552,2.397,553,2.397,593,1.902,594,4.174,595,4.174,596,3.467,597,3.057,598,2.828,599,4.35,600,2.828,601,2.828,602,4.089,603,4.089,604,4.089,605,2.828,606,2.397,607,2.828,608,2.828,609,2.828,610,2.828,611,2.397,612,2.828,613,2.828,614,2.828,615,2.828]],["title/interfaces/ScriptLoaderInitScripts.html",[104,0.423,616,2.32]],["body/interfaces/ScriptLoaderInitScripts.html",[3,0.344,4,0.344,8,0.226,18,0.821,19,0.024,20,0.776,22,0.423,38,0.016,39,0.02,40,0.016,100,1.944,104,0.567,106,1.499,112,0.616,117,2.606,135,0.567,136,1.341,147,2.836,148,2.408,317,2.408,616,3.827,617,2.606,618,2.606,619,2.836,620,2.836,621,3.459,622,4.322,623,3.618,624,2.836,625,3.923]],["title/modules/ScriptLoaderModule.html",[41,1.795,626,2.32]],["body/modules/ScriptLoaderModule.html",[3,0.232,4,0.232,8,0.152,18,0.867,19,0.025,20,0.522,22,0.232,23,0.561,30,0.835,38,0.011,39,0.015,40,0.011,43,1.309,44,1.972,52,2.468,53,1.755,54,1.622,59,2.638,90,2.117,100,1.841,103,3.41,112,0.675,117,3.263,122,2.638,152,1.147,153,3.276,154,2.33,157,0.835,159,3.276,162,1.506,163,1.01,164,0.644,165,1.147,166,3.789,172,1.147,173,3.789,182,1.402,212,1.506,224,1.91,252,2.33,281,2.096,317,2.638,450,2.642,480,2.096,490,2.33,524,2.096,617,2.468,618,2.468,619,3.107,620,2.686,622,3.898,623,2.468,624,2.686,626,4.153,627,2.642,628,2.642,629,3.927,630,3.117,631,4.383,632,3.276,633,3.117,634,3.117,635,3.41,636,2.642,637,4.383,638,3.117,639,3.117,640,3.117,641,2.642,642,4.383,643,3.117,644,3.117]],["title/injectables/ScriptLoaderService.html",[174,0.924,629,2.114]],["body/injectables/ScriptLoaderService.html",[3,0.165,4,0.165,8,0.109,18,0.768,19,0.025,20,0.373,22,0.165,23,0.4,26,1.496,30,1.115,38,0.008,39,0.012,40,0.008,80,1.662,90,2.572,100,1.749,112,0.672,117,3.122,135,0.273,136,0.806,148,2.771,152,1.258,157,1.252,163,1.349,164,1.042,165,1.258,172,1.857,174,0.916,175,1.074,180,1.363,182,2.396,184,1.538,189,1.252,210,1.662,212,1.074,215,3.493,233,1.925,254,3.98,263,1.925,296,3.392,317,2.167,325,1.252,387,2.998,616,3.143,617,2.839,618,2.839,619,2.095,620,1.363,622,4.031,623,2.839,624,1.363,629,2.095,632,2.555,635,1.496,636,3.962,641,2.898,645,1.885,646,4.673,647,4.852,648,3.418,649,2.224,650,4.163,651,4.673,652,2.224,653,3.418,654,2.224,655,4.673,656,2.898,657,3.418,658,2.224,659,3.418,660,3.418,661,2.898,662,5.043,663,4.163,664,2.224,665,2.224,666,2.224,667,2.224,668,2.224,669,3.418,670,2.224,671,2.224,672,2.224,673,3.962,674,3.53,675,3.53,676,3.418,677,2.224,678,2.224,679,2.224,680,2.224,681,1.885,682,1.885,683,4.163,684,2.224,685,2.224,686,2.224,687,2.224,688,2.224,689,2.224,690,2.224,691,2.224,692,2.224,693,2.224,694,2.224]],["title/interfaces/ScriptParams.html",[104,0.423,623,1.942]],["body/interfaces/ScriptParams.html",[3,0.297,4,0.297,8,0.195,19,0.025,22,0.297,38,0.014,39,0.018,40,0.014,90,2.942,104,0.489,106,1.293,112,0.811,117,3.429,135,0.489,136,1.221,137,2.589,164,1.336,209,5.163,255,2.994,263,3.758,287,2.918,418,2.685,617,2.248,618,2.248,623,2.918,647,5.163,673,5.163,674,5.163,675,5.163,695,5.182]],["title/coverage.html",[696,3.986]],["body/coverage.html",[0,1.573,1,0.981,8,0.092,9,2.4,10,1.598,15,0.792,19,0.024,23,0.339,32,0.911,34,0.911,38,0.007,39,0.01,40,0.007,66,1.563,67,2.245,100,0.792,104,0.739,105,1.061,107,1.195,108,2.614,109,2.614,110,2.902,112,0.499,149,1.409,161,1.959,169,1.155,171,1.061,174,1.396,176,1.598,201,0.848,213,1.155,214,1.155,218,1.061,230,1.061,236,1.155,237,1.409,239,2.245,240,1.598,241,1.598,245,1.268,263,1.061,266,1.268,268,2.02,269,2.02,270,1.598,273,1.351,279,1.061,326,1.598,340,1.598,384,1.409,385,1.598,386,2.617,396,1.598,397,1.598,404,1.155,405,2.518,408,1.268,412,1.409,416,1.409,417,1.598,418,2.518,430,1.409,431,1.598,432,1.598,433,1.598,469,1.409,470,1.598,471,1.598,474,1.061,482,1.409,483,2.245,484,2.518,502,1.598,503,1.409,505,2.518,506,2.518,507,1.598,510,1.268,512,1.155,529,2.245,537,2.245,554,1.598,576,1.841,579,1.268,580,1.598,593,1.268,594,2.245,595,2.245,597,1.409,599,1.409,616,1.268,617,2.625,618,2.625,619,2.294,620,1.841,621,2.245,623,1.061,624,1.155,629,1.155,635,1.268,645,1.598,696,1.598,697,1.409,698,1.885,699,1.885,700,1.598,701,5.555,702,1.598,703,6.302,704,5.836,705,3.744,706,1.598,707,1.598,708,1.885,709,4.27,710,4.27,711,6.443,712,6.181,713,3.003,714,3.003,715,3.003,716,1.885,717,3.003,718,3.744,719,3.744,720,1.885,721,1.598,722,1.598,723,1.598,724,1.598,725,1.598,726,1.598,727,1.598,728,1.598,729,1.598,730,1.598,731,1.409,732,2.546,733,1.598,734,1.598,735,3.003,736,1.885,737,1.885,738,1.598,739,1.598,740,1.598,741,1.598,742,1.598,743,1.598,744,1.598,745,1.598,746,1.598,747,1.598,748,1.598,749,1.598,750,1.598,751,3.174,752,1.598,753,2.546,754,1.598,755,1.598,756,1.598,757,1.598,758,1.598,759,1.598,760,1.598,761,1.598,762,1.598,763,1.885,764,1.885,765,1.885,766,1.885,767,1.885,768,1.885]],["title/dependencies.html",[44,1.866,769,2.884]],["body/dependencies.html",[19,0.025,20,0.703,38,0.015,39,0.019,40,0.015,44,1.887,61,4.534,62,3.998,64,2.57,212,2.026,325,2.361,374,3.134,375,3.134,550,3.598,551,3.998,770,4.193,771,6.861,772,4.193,773,4.193,774,4.193,775,4.193,776,4.193,777,4.193,778,4.193,779,6.552,780,4.193,781,4.193,782,4.193,783,4.193,784,5.349,785,4.193,786,4.193,787,4.193,788,4.193,789,4.193,790,4.193]],["title/miscellaneous/functions.html",[791,1.624,792,3.516]],["body/miscellaneous/functions.html",[19,0.022,30,1.313,38,0.017,39,0.021,40,0.017,107,0.882,135,0.601,139,3.003,163,1.587,164,1.012,188,2.759,281,3.296,317,2.55,728,4.154,729,4.994,730,4.994,791,2.759,792,4.154,793,4.9,794,4.9,795,4.9,796,4.9,797,4.9,798,4.154,799,4.154,800,4.9,801,4.9,802,4.9,803,4.154,804,4.9]],["title/index.html",[135,0.353,805,2.445,806,2.445]],["body/index.html",[5,3.183,13,2.286,14,2.286,19,0.02,38,0.016,39,0.02,40,0.016,116,4.012,118,2.423,362,4.89,363,3.538,611,4.012,807,4.733,808,4.733,809,4.733,810,4.733,811,5.768,812,4.733,813,4.012,814,4.733,815,4.733,816,4.733,817,4.012,818,4.733,819,5.768,820,4.012,821,4.733,822,4.733,823,4.733,824,4.733,825,4.733,826,4.733,827,4.733,828,4.733,829,4.733,830,4.733,831,3.538,832,4.012]],["title/license.html",[805,2.445,806,2.445,831,2.156]],["body/license.html",[19,0.018,38,0.014,39,0.018,40,0.014,54,2.045,220,2.937,357,3.834,484,2.643,524,2.643,681,3.331,697,2.937,817,3.331,831,2.937,832,3.331,833,5.71,834,3.93,835,3.93,836,3.93,837,5.129,838,3.93,839,3.93,840,3.93,841,3.93,842,3.93,843,3.93,844,5.129,845,6.726,846,3.93,847,3.93,848,5.71,849,3.93,850,5.129,851,3.93,852,3.93,853,3.93,854,3.93,855,3.93,856,3.93,857,3.93,858,3.93,859,3.93,860,5.129,861,3.93,862,3.93,863,3.93,864,3.93,865,3.93,866,3.93,867,3.93,868,5.129,869,5.129,870,3.93,871,3.93,872,3.93,873,3.93,874,3.93,875,3.93,876,3.93,877,3.93,878,3.93,879,3.93,880,3.93,881,3.93,882,3.93,883,3.93,884,3.93,885,3.93,886,3.93,887,3.93,888,3.93,889,3.93,890,3.93,891,3.93,892,3.93,893,3.93,894,3.93,895,3.93]],["title/modules.html",[43,1.976]],["body/modules.html",[19,0.02,38,0.017,39,0.02,40,0.017,42,3.232,43,2.019,49,2.945,50,2.945,51,2.945,62,4.984,321,3.592,344,4.936,573,3.232,626,3.232,896,5.653,897,6.668,898,6.857,899,4.936]],["title/overview.html",[900,3.986]],["body/overview.html",[1,3.38,2,2.539,19,0.024,23,0.68,32,3.138,34,3.138,38,0.013,39,0.017,40,0.013,42,4.569,43,1.586,44,2.248,45,3.201,46,3.201,47,3.201,48,3.201,49,3.431,50,3.903,51,3.903,52,2.813,53,2.126,54,1.965,106,1.223,175,1.824,195,4.235,236,2.314,368,3.201,369,3.201,370,3.201,474,3.153,562,3.201,563,3.201,564,3.201,573,4.008,574,3.201,575,3.201,626,4.008,627,3.201,628,3.201,629,3.431,900,3.201,901,4.996,902,3.775,903,3.775]],["title/miscellaneous/typealiases.html",[791,1.624,904,4.148]],["body/miscellaneous/typealiases.html",[8,0.194,19,0.023,38,0.014,39,0.018,40,0.014,94,2.493,96,2.668,107,1.033,108,1.916,109,1.916,110,3.36,112,0.687,118,2.168,122,2.064,129,2.431,135,0.486,156,2.906,161,2.646,162,1.916,201,1.785,203,1.916,218,2.234,221,2.965,228,2.965,229,2.965,230,2.234,268,2.668,269,2.668,273,2.733,274,2.431,275,2.668,279,2.234,316,4.375,318,3.363,357,3.858,386,3.163,387,2.234,405,2.668,406,2.668,408,3.471,434,3.858,487,3.363,576,2.431,581,4.375,632,2.965,731,2.965,791,2.234,905,3.967,906,3.363,907,3.363,908,4.375,909,3.363,910,5.161,911,3.363,912,3.363,913,3.363,914,3.967,915,3.967,916,3.967,917,3.967,918,3.967,919,3.967,920,3.967]],["title/miscellaneous/variables.html",[791,1.624,921,3.516]],["body/miscellaneous/variables.html",[8,0.057,9,1.292,15,1.337,19,0.025,30,0.543,38,0.004,39,0.007,40,0.004,63,0.879,66,1.392,67,2.936,75,1.365,79,0.879,80,0.879,82,0.879,90,0.568,94,1.292,100,1.65,107,0.758,108,0.98,109,0.98,110,2.315,112,0.523,113,0.721,118,1.65,121,0.997,125,0.997,133,1.243,134,2.936,135,0.144,137,2.245,139,0.721,147,1.64,148,0.612,149,1.516,150,0.997,156,1.142,161,2.294,162,0.568,165,1.322,171,1.506,172,1.837,180,3.68,188,0.662,189,3.497,197,1.243,203,0.568,213,1.243,214,1.243,218,0.662,224,1.243,225,1.516,226,0.879,227,0.879,230,0.662,232,1.516,233,2.37,234,1.516,235,1.432,236,0.721,252,0.879,253,0.791,261,1.056,263,1.792,273,0.913,296,0.791,297,2,298,2,311,2,317,0.612,361,2.416,363,0.879,386,1.64,387,1.142,398,0.879,404,1.64,405,0.791,406,2.831,407,2.268,408,2.416,411,2.268,412,1.516,413,0.791,414,0.997,415,0.997,420,3.045,428,4.63,434,0.879,441,0.997,483,0.879,484,3.673,490,1.516,494,3.33,496,1.243,497,3.33,533,1.516,535,1.516,536,0.721,576,0.721,579,1.8,599,1.516,606,1.72,617,1.142,618,1.142,619,1.95,620,1.64,621,1.516,622,0.791,624,1.243,625,0.997,635,1.8,656,0.997,661,0.997,682,3.33,697,0.879,700,0.997,701,0.997,702,1.72,706,0.997,707,0.997,721,0.997,722,1.72,723,2.268,724,0.997,725,2.268,726,1.72,727,1.72,731,0.879,732,2.698,733,1.72,734,1.72,738,0.997,739,1.72,740,1.72,741,0.997,742,1.72,743,1.72,744,1.72,745,0.997,746,1.72,747,1.72,748,0.997,749,1.72,750,1.72,751,2.268,752,0.997,753,4.097,754,1.72,755,1.72,756,0.997,757,1.72,758,1.72,759,0.997,760,1.72,761,1.72,762,1.72,791,0.662,798,3.33,799,0.997,803,0.997,813,0.997,820,2.698,896,0.997,899,1.72,906,2.698,907,1.72,908,0.997,909,0.997,911,0.997,912,0.997,913,0.997,921,1.72,922,1.176,923,1.176,924,2.675,925,1.176,926,1.176,927,2.029,928,1.176,929,1.176,930,2.029,931,1.176,932,1.176,933,2.029,934,2.029,935,1.176,936,2.029,937,5.127,938,5.551,939,1.176,940,1.176,941,1.176,942,4.448,943,1.176,944,1.176,945,1.176,946,3.591,947,1.176,948,1.176,949,1.176,950,3.591,951,1.176,952,1.176,953,1.176,954,1.176,955,2.029,956,3.183,957,1.176,958,1.176,959,1.176,960,1.176,961,3.183,962,2.029,963,1.176,964,1.176,965,1.176,966,2.029,967,1.176,968,1.176,969,1.176,970,1.176,971,1.176,972,1.176,973,3.183,974,3.183,975,2.029,976,1.176,977,1.176,978,1.176,979,1.176,980,1.176,981,1.176,982,1.176,983,1.176,984,3.591,985,2.675,986,1.176,987,3.591,988,2.029,989,2.675,990,1.176,991,1.176,992,2.029,993,1.176,994,1.176,995,1.176,996,1.176,997,2.029,998,2.029,999,1.176,1000,1.176,1001,1.176,1002,1.176,1003,1.176,1004,1.176,1005,1.176,1006,1.176,1007,2.029,1008,1.176,1009,1.176,1010,1.176,1011,1.176,1012,1.176,1013,1.176,1014,1.176,1015,1.176,1016,1.176,1017,2.029,1018,2.029,1019,1.176,1020,1.176,1021,1.176,1022,1.176,1023,1.176,1024,1.176,1025,2.029,1026,1.176,1027,1.176]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":703,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["0.11.4",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":704,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":735,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":705,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":195,"title":{},"body":{"injectables/BuildConfigService.html":{},"overview.html":{}}}],["1/1",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":708,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["12.0.0",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":903,"title":{},"body":{"overview.html":{}}}],["13.0.1",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["13.0.2",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["13.1.2",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":388,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["2.0.0",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":766,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":737,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["2021",{"_index":835,"title":{},"body":{"license.html":{}}}],["28",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":902,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":764,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":333,"title":{},"body":{"components/DashboardComponent.html":{}}}],["33",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4/4",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":765,"title":{},"body":{"coverage.html":{}}}],["404",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["50",{"_index":340,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["60",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":709,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":901,"title":{},"body":{"overview.html":{}}}],["7.4.0",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":867,"title":{},"body":{"license.html":{}}}],["acc",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acc.add(el",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acc[keyvalue",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors",{"_index":276,"title":{},"body":{"classes/CommonLogger.html":{}}}],["according",{"_index":446,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["accordingly",{"_index":451,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["action",{"_index":484,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":820,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["actions.ts",{"_index":910,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["activated",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activatedroute",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actual",{"_index":228,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/typealiases.html":{}}}],["actual_component",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["add",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["again",{"_index":395,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["aliases",{"_index":905,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":662,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["always",{"_index":535,"title":{},"body":{"interfaces/HttpLoadingState.html":{},"interfaces/RouteLoadingState.html":{},"miscellaneous/variables.html":{}}}],["amount",{"_index":423,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["and/or",{"_index":858,"title":{},"body":{"license.html":{}}}],["angular",{"_index":139,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":325,"title":{},"body":{"modules/CommonNgrxModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"injectables/ScriptLoaderService.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":168,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interceptors/HttpLoadingInterceptor.html":{}}}],["angular/compiler",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"modules/CommonNgrxModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":374,"title":{},"body":{"modules/DashboardModule.html":{},"modules/MainModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":377,"title":{},"body":{"modules/DashboardModule.html":{},"modules/MainModule.html":{}}}],["angular/material/card",{"_index":379,"title":{},"body":{"modules/DashboardModule.html":{}}}],["angular/material/chips",{"_index":568,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/icon",{"_index":381,"title":{},"body":{"modules/DashboardModule.html":{},"modules/MainModule.html":{}}}],["angular/material/toolbar",{"_index":570,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/platform",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"guards/CanDeactivateGuard.html":{},"modules/MainModule.html":{},"injectables/RouteLoadingStateService.html":{},"dependencies.html":{}}}],["angularversion",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BuildConfig.html":{}}}],["anything",{"_index":444,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["app",{"_index":362,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["app.component",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{},"coverage.html":{},"overview.html":{}}}],["append",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":42,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approach",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/internal",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["aren't",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arising",{"_index":893,"title":{},"body":{"license.html":{}}}],["around",{"_index":426,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["arr",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":297,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"miscellaneous/variables.html":{}}}],["array.from(arr.reduce((acc",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asset",{"_index":127,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["associated",{"_index":846,"title":{},"body":{"license.html":{}}}],["assumed",{"_index":140,"title":{},"body":{"interfaces/BuildConfig.html":{},"injectables/BuildConfigService.html":{}}}],["assumes",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":647,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["attempt",{"_index":455,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["authors",{"_index":884,"title":{},"body":{"license.html":{}}}],["auto",{"_index":338,"title":{},"body":{"components/DashboardComponent.html":{}}}],["automatically",{"_index":252,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"modules/ScriptLoaderModule.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":899,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["away",{"_index":249,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{}}}],["back",{"_index":803,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["backoff.ts",{"_index":729,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["based",{"_index":812,"title":{},"body":{"index.html":{}}}],["before",{"_index":695,"title":{},"body":{"interfaces/ScriptParams.html":{}}}],["behavior",{"_index":229,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/typealiases.html":{}}}],["behaviorsubject",{"_index":663,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["beta.35",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["beyond",{"_index":440,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["block",{"_index":335,"title":{},"body":{"components/DashboardComponent.html":{}}}],["boolean",{"_index":255,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptParams.html":{}}}],["bootstrap",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["brad",{"_index":836,"title":{},"body":{"license.html":{}}}],["brand",{"_index":409,"title":{},"body":{"interfaces/DocumentWithId.html":{}}}],["branded",{"_index":918,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["browse",{"_index":898,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["buffersize",{"_index":194,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["build",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["build_config",{"_index":149,"title":{},"body":{"interfaces/BuildConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["build_config_config",{"_index":171,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["build_config_path",{"_index":179,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["buildconfig",{"_index":105,"title":{"interfaces/BuildConfig.html":{}},"body":{"interfaces/BuildConfig.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"coverage.html":{}}}],["buildconfigconfig",{"_index":156,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["buildconfigmodule",{"_index":49,"title":{"modules/BuildConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BuildConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["buildconfigmodule.forroot",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["buildconfigservice",{"_index":169,"title":{"injectables/BuildConfigService.html":{}},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"components/MainComponent.html":{},"coverage.html":{}}}],["buildconfigwithoutpathconfig",{"_index":230,"title":{"interfaces/BuildConfigWithoutPathConfig.html":{}},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["buildconfigwithoutpathconfig).overrides",{"_index":234,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/variables.html":{}}}],["buildconfigwithpathconfig",{"_index":218,"title":{"interfaces/BuildConfigWithPathConfig.html":{}},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["buildconfigwithpathconfig).path",{"_index":232,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/variables.html":{}}}],["bulk",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c",{"_index":834,"title":{},"body":{"license.html":{}}}],["cached",{"_index":207,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["caching",{"_index":130,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["call",{"_index":209,"title":{},"body":{"injectables/BuildConfigService.html":{},"interfaces/ScriptParams.html":{}}}],["callback",{"_index":675,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["called",{"_index":319,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{}}}],["cancel",{"_index":494,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"miscellaneous/variables.html":{}}}],["cancelpayload",{"_index":498,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["candeactivate",{"_index":242,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{}}}],["candeactivate(component",{"_index":244,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["candeactivateguard",{"_index":237,"title":{"guards/CanDeactivateGuard.html":{}},"body":{"guards/CanDeactivateGuard.html":{},"coverage.html":{}}}],["catch",{"_index":460,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["change",{"_index":394,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["changed",{"_index":445,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["changedetection",{"_index":327,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["changedetectionstrategy",{"_index":342,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":328,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["changes",{"_index":612,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["charge",{"_index":841,"title":{},"body":{"license.html":{}}}],["check",{"_index":660,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["child",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["child.firstchild",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["child.ts",{"_index":726,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["children",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["claim",{"_index":887,"title":{},"body":{"license.html":{}}}],["class",{"_index":23,"title":{"classes/CommonLogger.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"modules/CommonNgrxModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":267,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/DeactivatableComponent.html":{}}}],["cli",{"_index":346,"title":{},"body":{"components/DashboardComponent.html":{}}}],["client",{"_index":123,"title":{},"body":{"interfaces/BuildConfig.html":{},"classes/CommonLogger.html":{}}}],["cluster_appmodule",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule",{"_index":368,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declarations",{"_index":369,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_exports",{"_index":370,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_mainmodule",{"_index":562,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mainmodule_declarations",{"_index":563,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mainmodule_exports",{"_index":564,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_ngloggermodule",{"_index":574,"title":{},"body":{"modules/NgLoggerModule.html":{},"overview.html":{}}}],["cluster_ngloggermodule_providers",{"_index":575,"title":{},"body":{"modules/NgLoggerModule.html":{},"overview.html":{}}}],["cluster_scriptloadermodule",{"_index":627,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"overview.html":{}}}],["cluster_scriptloadermodule_providers",{"_index":628,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"overview.html":{}}}],["codebase",{"_index":367,"title":{},"body":{"components/DashboardComponent.html":{}}}],["codespace",{"_index":753,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["codespace.ts",{"_index":757,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["codespace_name",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["codespacename",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["codespaces",{"_index":818,"title":{},"body":{"index.html":{}}}],["codespaces/src/lib/util/get",{"_index":752,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["codespaces/src/lib/util/is",{"_index":756,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["codespaces/src/lib/util/normalize",{"_index":759,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["codespaces=true",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["codespaceurl",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["common",{"_index":298,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"miscellaneous/variables.html":{}}}],["common_ng_router_options",{"_index":723,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["commonlogger",{"_index":266,"title":{"classes/CommonLogger.html":{}},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{}}}],["commonlogger:10",{"_index":590,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["commonlogger:18",{"_index":585,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["commonlogger:23",{"_index":586,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["commonlogger:28",{"_index":584,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["commonlogger:33",{"_index":587,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["commonloggerconfig",{"_index":279,"title":{"interfaces/CommonLoggerConfig.html":{}},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/NgLoggerModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["commonmodule",{"_index":324,"title":{},"body":{"modules/CommonNgrxModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{}}}],["commonngrxmodule",{"_index":321,"title":{"modules/CommonNgrxModule.html":{}},"body":{"modules/CommonNgrxModule.html":{},"modules.html":{}}}],["complete",{"_index":528,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["compodoc",{"_index":364,"title":{},"body":{"components/DashboardComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/CanDeactivateGuard.html":{},"components/DashboardComponent.html":{},"interfaces/DeactivatableComponent.html":{},"components/MainComponent.html":{},"coverage.html":{}}}],["component.candeactivate",{"_index":265,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["component.ts",{"_index":397,"title":{},"body":{"interfaces/DeactivatableComponent.html":{},"coverage.html":{}}}],["component.ts:12",{"_index":402,"title":{},"body":{"interfaces/DeactivatableComponent.html":{}}}],["component_template",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{},"overview.html":{}}}],["componentstore",{"_index":538,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["conditions",{"_index":866,"title":{},"body":{"license.html":{}}}],["config",{"_index":161,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"classes/CommonLogger.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["config.js",{"_index":115,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["config.json",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"injectables/BuildConfigService.html":{}}}],["config.module.ts",{"_index":151,"title":{},"body":{"modules/BuildConfigModule.html":{}}}],["config.module.ts:13",{"_index":158,"title":{},"body":{"modules/BuildConfigModule.html":{}}}],["config.revision",{"_index":561,"title":{},"body":{"components/MainComponent.html":{}}}],["config.service",{"_index":170,"title":{},"body":{"modules/BuildConfigModule.html":{}}}],["config.service.ts",{"_index":176,"title":{},"body":{"injectables/BuildConfigService.html":{},"coverage.html":{}}}],["config.service.ts:23",{"_index":205,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["config.service.ts:33",{"_index":187,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["config.ts",{"_index":110,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/CommonLoggerConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["config/build",{"_index":109,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":556,"title":{},"body":{"components/MainComponent.html":{}}}],["configurable",{"_index":272,"title":{},"body":{"classes/CommonLogger.html":{}}}],["configuration",{"_index":203,"title":{},"body":{"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/ErrorHandlerService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":160,"title":{},"body":{"modules/BuildConfigModule.html":{},"modules/NgLoggerModule.html":{}}}],["connect",{"_index":351,"title":{},"body":{"components/DashboardComponent.html":{}}}],["connection",{"_index":894,"title":{},"body":{"license.html":{}}}],["console",{"_index":441,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["console.debug(message",{"_index":307,"title":{},"body":{"classes/CommonLogger.html":{}}}],["console.error(message",{"_index":303,"title":{},"body":{"classes/CommonLogger.html":{}}}],["console.log(message",{"_index":305,"title":{},"body":{"classes/CommonLogger.html":{}}}],["console.warn(message",{"_index":309,"title":{},"body":{"classes/CommonLogger.html":{}}}],["const",{"_index":148,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/DocumentWithId.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":184,"title":{},"body":{"injectables/BuildConfigService.html":{},"classes/CommonLogger.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"injectables/ScriptLoaderService.html":{}}}],["constructor(config",{"_index":278,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{}}}],["constructor(configservice",{"_index":557,"title":{},"body":{"components/MainComponent.html":{}}}],["constructor(document",{"_index":649,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["constructor(http",{"_index":185,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["constructor(httploadingstate",{"_index":509,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["constructor(logger",{"_index":473,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["constructor(private",{"_index":480,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{}}}],["constructor(public",{"_index":301,"title":{},"body":{"classes/CommonLogger.html":{},"components/MainComponent.html":{}}}],["constructor(router",{"_index":598,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["contents",{"_index":206,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["context",{"_index":132,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["contract",{"_index":891,"title":{},"body":{"license.html":{}}}],["convert",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["converted",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["copies",{"_index":860,"title":{},"body":{"license.html":{}}}],["copy",{"_index":844,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":833,"title":{},"body":{"license.html":{}}}],["core",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["core/main/main.component",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["core/main/main.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["coverage",{"_index":696,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":682,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["createaction",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction(`[${prefix",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcancel",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created",{"_index":391,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["createdat",{"_index":389,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["createfailed",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createsuccess",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":126,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["currently",{"_index":659,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["customize",{"_index":221,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/typealiases.html":{}}}],["cutdown",{"_index":422,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["cy.get('h1",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":888,"title":{},"body":{"license.html":{}}}],["dashboard",{"_index":329,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["dashboard.component",{"_index":382,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboard.component.html",{"_index":341,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":32,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/MainComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashboardmodule",{"_index":50,"title":{"modules/DashboardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["data",{"_index":223,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{}}}],["database",{"_index":392,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["date",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"interfaces/DateDocument.html":{}}}],["date().toisostring",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["datedocument",{"_index":384,"title":{"interfaces/DateDocument.html":{}},"body":{"interfaces/DateDocument.html":{},"coverage.html":{}}}],["deactivatable",{"_index":258,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["deactivatablecomponent",{"_index":245,"title":{"interfaces/DeactivatableComponent.html":{}},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{},"coverage.html":{}}}],["deactivatablecomponent).candeactivate",{"_index":262,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["deactivate.guard.ts",{"_index":241,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"coverage.html":{}}}],["deactivate.guard.ts:12",{"_index":257,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["deactivate.guard.ts:28",{"_index":246,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["deactivate/can",{"_index":240,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"coverage.html":{}}}],["deactivate/deactivatable",{"_index":396,"title":{},"body":{"interfaces/DeactivatableComponent.html":{},"coverage.html":{}}}],["deactivated",{"_index":247,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["deal",{"_index":847,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":895,"title":{},"body":{"license.html":{}}}],["debug",{"_index":129,"title":{},"body":{"interfaces/BuildConfig.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/NgLoggerService.html":{},"miscellaneous/typealiases.html":{}}}],["debug(message",{"_index":283,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{}}}],["declarations",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{}}}],["decorators",{"_index":588,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["default",{"_index":180,"title":{},"body":{"injectables/BuildConfigService.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":804,"title":{},"body":{"miscellaneous/functions.html":{}}}],["define",{"_index":486,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["defined",{"_index":157,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/DeactivatableComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["delete",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletecancel",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletefailed",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletesuccess",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":44,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":343,"title":{},"body":{"components/DashboardComponent.html":{}}}],["deployment",{"_index":822,"title":{},"body":{"index.html":{}}}],["depth/retry",{"_index":797,"title":{},"body":{"miscellaneous/functions.html":{}}}],["description",{"_index":111,"title":{},"body":{"interfaces/BuildConfig.html":{},"injectables/BuildConfigService.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/EntityTypeParams.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/HttpActionTypeParams.html":{}}}],["development",{"_index":811,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["different",{"_index":348,"title":{},"body":{"components/DashboardComponent.html":{}}}],["digital",{"_index":828,"title":{},"body":{"index.html":{}}}],["directive",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["directives",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["directly",{"_index":916,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["disable",{"_index":462,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["disabled",{"_index":530,"title":{},"body":{"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{}}}],["display",{"_index":334,"title":{},"body":{"components/DashboardComponent.html":{}}}],["distribute",{"_index":856,"title":{},"body":{"license.html":{}}}],["doc",{"_index":361,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"miscellaneous/variables.html":{}}}],["docid",{"_index":427,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["docs",{"_index":360,"title":{},"body":{"components/DashboardComponent.html":{}}}],["document",{"_index":387,"title":{},"body":{"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["document.ts",{"_index":386,"title":{},"body":{"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":697,"title":{},"body":{"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["documentid",{"_index":408,"title":{},"body":{"interfaces/DocumentWithId.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["documentid(id",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentid(id.id",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documents",{"_index":914,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["documentwithid",{"_index":404,"title":{"interfaces/DocumentWithId.html":{}},"body":{"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["documentwithid).id",{"_index":414,"title":{},"body":{"interfaces/DocumentWithId.html":{},"miscellaneous/variables.html":{}}}],["doesn't",{"_index":443,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["domains",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duplicates",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duplicates.ts",{"_index":746,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/support/app.po.ts",{"_index":700,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":352,"title":{},"body":{"components/DashboardComponent.html":{}}}],["el",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{},"injectables/ScriptLoaderService.html":{}}}],["emitter",{"_index":643,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["emittions",{"_index":313,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"injectables/RouteLoadingStateService.html":{}}}],["enabledblocking",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["engine",{"_index":826,"title":{},"body":{"index.html":{}}}],["entire",{"_index":366,"title":{},"body":{"components/DashboardComponent.html":{}}}],["entities",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entities.reduce((acc",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":420,"title":{},"body":{"interfaces/EntityTypeParams.html":{},"miscellaneous/variables.html":{}}}],["entity[key",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entityactionfactory",{"_index":733,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["entityactions",{"_index":908,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["entitytypeparams",{"_index":416,"title":{"interfaces/EntityTypeParams.html":{}},"body":{"interfaces/EntityTypeParams.html":{},"coverage.html":{}}}],["env",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.codespace_name",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.codespaces",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":452,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{}}}],["error",{"_index":201,"title":{},"body":{"injectables/BuildConfigService.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["error(message",{"_index":288,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{}}}],["errorhandler",{"_index":478,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["errorhandlerservice",{"_index":430,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["errors",{"_index":436,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["eslint",{"_index":461,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["eslint/no",{"_index":466,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["event",{"_index":524,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"license.html":{}}}],["everything",{"_index":639,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["example",{"_index":821,"title":{},"body":{"index.html":{}}}],["existingscriptloaded",{"_index":676,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["existingscriptloaded.element",{"_index":680,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["exponential",{"_index":802,"title":{},"body":{"miscellaneous/functions.html":{}}}],["export",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["exports",{"_index":372,"title":{},"body":{"modules/DashboardModule.html":{},"modules/MainModule.html":{}}}],["express",{"_index":875,"title":{},"body":{"license.html":{}}}],["extends",{"_index":133,"title":{},"body":{"interfaces/BuildConfig.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"miscellaneous/variables.html":{}}}],["extra",{"_index":611,"title":{},"body":{"injectables/RouteLoadingStateService.html":{},"index.html":{}}}],["extraoptions",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extraoptions's",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f5959d486294",{"_index":800,"title":{},"body":{"miscellaneous/functions.html":{}}}],["facing",{"_index":492,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["factory",{"_index":489,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["factory.ts",{"_index":732,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["failed",{"_index":798,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["fails",{"_index":456,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["failure",{"_index":495,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["failurepayload",{"_index":499,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["false",{"_index":536,"title":{},"body":{"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"miscellaneous/variables.html":{}}}],["feature",{"_index":920,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":817,"title":{},"body":{"index.html":{},"license.html":{}}}],["filter",{"_index":605,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["filter((loading",{"_index":613,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["final",{"_index":725,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["firebase",{"_index":824,"title":{},"body":{"index.html":{}}}],["fired",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fitness",{"_index":880,"title":{},"body":{"license.html":{}}}],["flag",{"_index":532,"title":{},"body":{"interfaces/HttpLoadingState.html":{},"interfaces/RouteLoadingState.html":{}}}],["flexlayoutmodule",{"_index":566,"title":{},"body":{"modules/MainModule.html":{}}}],["flows",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["folder",{"_index":183,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["following",{"_index":865,"title":{},"body":{"license.html":{}}}],["force",{"_index":534,"title":{},"body":{"interfaces/HttpLoadingState.html":{},"interfaces/RouteLoadingState.html":{}}}],["forroot",{"_index":154,"title":{},"body":{"modules/BuildConfigModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["forroot(config",{"_index":155,"title":{},"body":{"modules/BuildConfigModule.html":{},"modules/NgLoggerModule.html":{}}}],["forroot(params",{"_index":631,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["free",{"_index":840,"title":{},"body":{"license.html":{}}}],["full",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":263,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":792,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["functionwithparameterstype",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["furnished",{"_index":863,"title":{},"body":{"license.html":{}}}],["gather",{"_index":178,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["gcp",{"_index":825,"title":{},"body":{"index.html":{}}}],["generally",{"_index":121,"title":{},"body":{"interfaces/BuildConfig.html":{},"miscellaneous/variables.html":{}}}],["generated",{"_index":345,"title":{},"body":{"components/DashboardComponent.html":{}}}],["generic",{"_index":434,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["generics",{"_index":424,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["get(this.config.path",{"_index":192,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["getcancel",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcodespacename",{"_index":755,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getfailed",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getfinalchild",{"_index":727,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getgreeting",{"_index":702,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gethidden",{"_index":294,"title":{},"body":{"classes/CommonLogger.html":{}}}],["getid",{"_index":740,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getsuccess",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":805,"title":{"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":145,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["github",{"_index":819,"title":{},"body":{"index.html":{}}}],["given",{"_index":224,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/ScriptLoaderModule.html":{},"miscellaneous/variables.html":{}}}],["global/injection",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["globalerrorhandler",{"_index":469,"title":{"injectables/GlobalErrorHandler.html":{}},"body":{"injectables/GlobalErrorHandler.html":{},"coverage.html":{}}}],["granted",{"_index":839,"title":{},"body":{"license.html":{}}}],["graph",{"_index":344,"title":{},"body":{"components/DashboardComponent.html":{},"modules.html":{}}}],["gridmodule",{"_index":373,"title":{},"body":{"modules/DashboardModule.html":{}}}],["guard",{"_index":236,"title":{"guards/CanDeactivateGuard.html":{}},"body":{"interfaces/DeactivatableComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["guards",{"_index":238,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["guardscheckend",{"_index":602,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["handle",{"_index":435,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handle(err",{"_index":448,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror",{"_index":472,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["handleerror(err",{"_index":476,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["handler.service.ts",{"_index":433,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:20",{"_index":454,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:32",{"_index":449,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.ts",{"_index":471,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"coverage.html":{}}}],["handler.ts:5",{"_index":475,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["handler.ts:8",{"_index":477,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["handler/error",{"_index":432,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handles",{"_index":450,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"modules/ScriptLoaderModule.html":{}}}],["hash",{"_index":146,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["head",{"_index":689,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["head.appendchild(scriptelement",{"_index":694,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["help",{"_index":128,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["hereby",{"_index":838,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":277,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{}}}],["holders",{"_index":885,"title":{},"body":{"license.html":{}}}],["hook",{"_index":312,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{}}}],["html",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["htt",{"_index":488,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["http",{"_index":188,"title":{},"body":{"injectables/BuildConfigService.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httpactionfactory",{"_index":734,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpactiontypeparams",{"_index":482,"title":{"interfaces/HttpActionTypeParams.html":{}},"body":{"interfaces/HttpActionTypeParams.html":{},"coverage.html":{}}}],["httpclient",{"_index":186,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["httpclientmodule",{"_index":167,"title":{},"body":{"modules/BuildConfigModule.html":{}}}],["httpevent",{"_index":517,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["httphandler",{"_index":515,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["httpinterceptor",{"_index":518,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["httploadinginterceptor",{"_index":503,"title":{"interceptors/HttpLoadingInterceptor.html":{}},"body":{"interceptors/HttpLoadingInterceptor.html":{},"coverage.html":{}}}],["httploadingstate",{"_index":512,"title":{"interfaces/HttpLoadingState.html":{}},"body":{"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"coverage.html":{}}}],["httploadingstateservice",{"_index":510,"title":{"injectables/HttpLoadingStateService.html":{}},"body":{"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"coverage.html":{}}}],["httprequest",{"_index":514,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["httpresponse",{"_index":519,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["https://${codespacename",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://medium.com/angular",{"_index":796,"title":{},"body":{"miscellaneous/functions.html":{}}}],["id",{"_index":406,"title":{},"body":{"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["id.ts",{"_index":739,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["img",{"_index":330,"title":{},"body":{"components/DashboardComponent.html":{}}}],["implements",{"_index":260,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{}}}],["implied",{"_index":876,"title":{},"body":{"license.html":{}}}],["import",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"modules/CommonNgrxModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/EntityTypeParams.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["important",{"_index":354,"title":{},"body":{"components/DashboardComponent.html":{}}}],["imports",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/BuildConfigModule.html":{},"modules/CommonNgrxModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{}}}],["include",{"_index":365,"title":{},"body":{"components/DashboardComponent.html":{}}}],["included",{"_index":870,"title":{},"body":{"license.html":{}}}],["includes",{"_index":815,"title":{},"body":{"index.html":{}}}],["including",{"_index":850,"title":{},"body":{"license.html":{}}}],["index",{"_index":135,"title":{"index.html":{}},"body":{"interfaces/BuildConfig.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":742,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":656,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["information",{"_index":125,"title":{},"body":{"interfaces/BuildConfig.html":{},"miscellaneous/variables.html":{}}}],["inherited",{"_index":583,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["init",{"_index":620,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initial",{"_index":208,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["initially",{"_index":442,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["initialnavigation",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["initscripts",{"_index":651,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["inject",{"_index":210,"title":{},"body":{"injectables/BuildConfigService.html":{},"injectables/NgLoggerService.html":{},"injectables/ScriptLoaderService.html":{}}}],["inject(build_config_config",{"_index":217,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["inject(document",{"_index":665,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["inject(ng_logger_config",{"_index":591,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["inject(ng_logger_config)@optional",{"_index":589,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["inject(script_loader_init_scripts",{"_index":667,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["inject(script_loader_loaded",{"_index":666,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["injectable",{"_index":174,"title":{"injectables/BuildConfigService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"injectables/ScriptLoaderService.html":{}},"body":{"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["injectables",{"_index":175,"title":{},"body":{"injectables/BuildConfigService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"injectables/ScriptLoaderService.html":{},"overview.html":{}}}],["injected",{"_index":638,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["injection",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":147,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ng_config",{"_index":150,"title":{},"body":{"interfaces/BuildConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('script_loader_init_scripts",{"_index":625,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":525,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{},"injectables/RouteLoadingStateService.html":{}}}],["instead",{"_index":917,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["intercept",{"_index":508,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["intercept(request",{"_index":513,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["interceptor",{"_index":502,"title":{"interceptors/HttpLoadingInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":504,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["interface",{"_index":104,"title":{"interfaces/BuildConfig.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"interfaces/HttpLoadingState.html":{},"interfaces/RouteLoadingState.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"interfaces/ScriptParams.html":{}},"body":{"interfaces/BuildConfig.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"interfaces/HttpLoadingState.html":{},"interfaces/RouteLoadingState.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{}}}],["interfaces",{"_index":106,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"interfaces/HttpLoadingState.html":{},"interfaces/RouteLoadingState.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"interfaces/ScriptParams.html":{},"overview.html":{}}}],["internally",{"_index":640,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["invalid",{"_index":202,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["isbuildconfigwithoutpathconfig",{"_index":213,"title":{},"body":{"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isbuildconfigwithoutpathconfig(this.config",{"_index":198,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["isbuildconfigwithpathconfig",{"_index":214,"title":{},"body":{"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isbuildconfigwithpathconfig(this.config",{"_index":190,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["iscodespace",{"_index":758,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isdeactivatable",{"_index":243,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["isdeactivatable(component",{"_index":256,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["isdocumentwithid",{"_index":412,"title":{},"body":{"interfaces/DocumentWithId.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isdocumentwithid(id",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isindexablevalue",{"_index":744,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isindexablevalue(keyvalue",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isolated",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issues",{"_index":131,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["json.parse(json.stringify(err",{"_index":458,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["json.stringify(this.config",{"_index":204,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["jump",{"_index":809,"title":{},"body":{"index.html":{}}}],["keep",{"_index":355,"title":{},"body":{"components/DashboardComponent.html":{}}}],["key",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keyof",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keyvalue",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":874,"title":{},"body":{"license.html":{}}}],["latest",{"_index":144,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["layout",{"_index":375,"title":{},"body":{"modules/DashboardModule.html":{},"modules/MainModule.html":{},"dependencies.html":{}}}],["lazy",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["left",{"_index":337,"title":{},"body":{"components/DashboardComponent.html":{}}}],["legend",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["level",{"_index":318,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"miscellaneous/typealiases.html":{}}}],["liability",{"_index":889,"title":{},"body":{"license.html":{}}}],["liable",{"_index":886,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":349,"title":{},"body":{"components/DashboardComponent.html":{}}}],["libs/.../build",{"_index":906,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../common",{"_index":911,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../entity",{"_index":909,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../get",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../http",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../id",{"_index":907,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../is",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../ng",{"_index":912,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../normalize",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../remove",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../retry",{"_index":793,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../script",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../to",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/common",{"_index":107,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"modules/CommonNgrxModule.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/EntityTypeParams.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/lib/models/date",{"_index":385,"title":{},"body":{"interfaces/DateDocument.html":{},"coverage.html":{}}}],["libs/common/src/lib/models/id",{"_index":405,"title":{},"body":{"interfaces/DocumentWithId.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/lib/utils/common",{"_index":268,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/common/src/lib/utils/get",{"_index":738,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/lib/utils/is",{"_index":741,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/lib/utils/remove",{"_index":745,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/lib/utils/to",{"_index":748,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/gh",{"_index":751,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/script",{"_index":617,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":831,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limitation",{"_index":851,"title":{},"body":{"license.html":{}}}],["limited",{"_index":877,"title":{},"body":{"license.html":{}}}],["line",{"_index":464,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["link",{"_index":358,"title":{},"body":{"components/DashboardComponent.html":{}}}],["list",{"_index":296,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":632,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":641,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["load(script",{"_index":653,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loaded",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"components/DashboardComponent.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"miscellaneous/variables.html":{}}}],["loaded.ts",{"_index":762,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loader",{"_index":619,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loader.module.ts",{"_index":630,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["loader.module.ts:20",{"_index":633,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["loader.service",{"_index":634,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["loader.service.ts",{"_index":645,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:16",{"_index":664,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:21",{"_index":652,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:42",{"_index":658,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:57",{"_index":654,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader/src/lib/script",{"_index":618,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":531,"title":{},"body":{"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{}}}],["loading.interceptor.ts",{"_index":507,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{},"coverage.html":{}}}],["loading.interceptor.ts:16",{"_index":511,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["loading.interceptor.ts:19",{"_index":516,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["loading.state",{"_index":552,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["loading.state.service",{"_index":522,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["loading.state.service.ts",{"_index":537,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{},"coverage.html":{}}}],["loading.state.service.ts:12",{"_index":545,"title":{},"body":{"injectables/HttpLoadingStateService.html":{}}}],["loading.state.service.ts:14",{"_index":541,"title":{},"body":{"injectables/HttpLoadingStateService.html":{}}}],["loading.state.service.ts:19",{"_index":548,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["loading.state.service.ts:24",{"_index":549,"title":{},"body":{"injectables/HttpLoadingStateService.html":{}}}],["loading.state.service.ts:37",{"_index":600,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["loading.state.service.ts:42",{"_index":601,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["loading.state.ts",{"_index":529,"title":{},"body":{"interfaces/HttpLoadingState.html":{},"interfaces/RouteLoadingState.html":{},"coverage.html":{}}}],["loading/http",{"_index":506,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"coverage.html":{}}}],["loading/route",{"_index":595,"title":{},"body":{"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"coverage.html":{}}}],["loads",{"_index":655,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loadscripts",{"_index":648,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loadscripts(params",{"_index":657,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["log",{"_index":274,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/ErrorHandlerService.html":{},"injectables/NgLoggerService.html":{},"miscellaneous/typealiases.html":{}}}],["log(message",{"_index":290,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{}}}],["logger",{"_index":273,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["logger.module.ts",{"_index":577,"title":{},"body":{"modules/NgLoggerModule.html":{}}}],["logger.module.ts:15",{"_index":578,"title":{},"body":{"modules/NgLoggerModule.html":{}}}],["logger.service",{"_index":479,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"modules/NgLoggerModule.html":{}}}],["logger.service.ts",{"_index":580,"title":{},"body":{"injectables/NgLoggerService.html":{},"coverage.html":{}}}],["logger.service.ts:8",{"_index":582,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["logger.ts",{"_index":270,"title":{},"body":{"classes/CommonLogger.html":{},"coverage.html":{}}}],["logger.ts:10",{"_index":295,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger.ts:12",{"_index":280,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger.ts:16",{"_index":282,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger.ts:18",{"_index":289,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger.ts:23",{"_index":291,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger.ts:28",{"_index":285,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger.ts:33",{"_index":293,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger/common",{"_index":269,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["logging",{"_index":437,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["loglevels",{"_index":316,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"miscellaneous/typealiases.html":{}}}],["logs",{"_index":314,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{}}}],["look",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["main",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["main.component",{"_index":572,"title":{},"body":{"modules/MainModule.html":{}}}],["main.component.html",{"_index":555,"title":{},"body":{"components/MainComponent.html":{}}}],["maincomponent",{"_index":34,"title":{"components/MainComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"coverage.html":{},"overview.html":{}}}],["mainmodule",{"_index":51,"title":{"modules/MainModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MainModule.html":{},"modules.html":{},"overview.html":{}}}],["map",{"_index":606,"title":{},"body":{"injectables/RouteLoadingStateService.html":{},"miscellaneous/variables.html":{}}}],["map((event",{"_index":609,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["map.ts",{"_index":749,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapping",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["margin",{"_index":336,"title":{},"body":{"components/DashboardComponent.html":{}}}],["matbuttonmodule",{"_index":376,"title":{},"body":{"modules/DashboardModule.html":{},"modules/MainModule.html":{}}}],["matcardmodule",{"_index":378,"title":{},"body":{"modules/DashboardModule.html":{}}}],["matching",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":567,"title":{},"body":{"modules/MainModule.html":{}}}],["material",{"_index":383,"title":{},"body":{"modules/DashboardModule.html":{},"modules/MainModule.html":{}}}],["maticonmodule",{"_index":380,"title":{},"body":{"modules/DashboardModule.html":{},"modules/MainModule.html":{}}}],["mattoolbarmodule",{"_index":569,"title":{},"body":{"modules/MainModule.html":{}}}],["max",{"_index":331,"title":{},"body":{"components/DashboardComponent.html":{}}}],["menu",{"_index":560,"title":{},"body":{"components/MainComponent.html":{}}}],["merchantability",{"_index":879,"title":{},"body":{"license.html":{}}}],["merge",{"_index":854,"title":{},"body":{"license.html":{}}}],["message",{"_index":286,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/NgLoggerService.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["method",{"_index":251,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["methods",{"_index":152,"title":{},"body":{"modules/BuildConfigModule.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DeactivatableComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["miscellaneous",{"_index":791,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":832,"title":{},"body":{"index.html":{},"license.html":{}}}],["mixed",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":853,"title":{},"body":{"license.html":{}}}],["module",{"_index":41,"title":{"modules/AppModule.html":{},"modules/BuildConfigModule.html":{},"modules/CommonNgrxModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}},"body":{}}],["modules",{"_index":43,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BuildConfigModule.html":{},"modules/CommonNgrxModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/dashboard/dashboard.component",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/dashboard/dashboard.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["modulewithproviders",{"_index":166,"title":{},"body":{"modules/BuildConfigModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["multiple",{"_index":119,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["name",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"components/DashboardComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"components/MainComponent.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["name.ts",{"_index":754,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["navigate",{"_index":403,"title":{},"body":{"interfaces/DeactivatableComponent.html":{}}}],["navigated",{"_index":248,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["navigating",{"_index":400,"title":{},"body":{"interfaces/DeactivatableComponent.html":{}}}],["navigation",{"_index":596,"title":{},"body":{"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{}}}],["navigationend",{"_index":603,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["navigationstart",{"_index":604,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["need",{"_index":425,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["needs",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nested",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":463,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"interceptors/HttpLoadingInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":523,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["ng",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"injectables/GlobalErrorHandler.html":{},"components/MainComponent.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng/src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["ng/src/app/app.module.ts",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["ng/src/app/core/main/main.component.ts",{"_index":554,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["ng/src/app/core/main/main.component.ts:10",{"_index":558,"title":{},"body":{"components/MainComponent.html":{}}}],["ng/src/app/core/main/main.component.ts:11",{"_index":559,"title":{},"body":{"components/MainComponent.html":{}}}],["ng/src/app/core/main/main.module.ts",{"_index":565,"title":{},"body":{"modules/MainModule.html":{}}}],["ng/src/app/modules/dashboard/dashboard.component.ts",{"_index":326,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["ng/src/app/modules/dashboard/dashboard.module.ts",{"_index":371,"title":{},"body":{"modules/DashboardModule.html":{}}}],["ng/src/environments/environment.prod.ts",{"_index":706,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng/src/environments/environment.ts",{"_index":707,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng/src/lib/build",{"_index":108,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ng/src/lib/can",{"_index":239,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{},"coverage.html":{}}}],["ng/src/lib/error",{"_index":431,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["ng/src/lib/http",{"_index":505,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"coverage.html":{}}}],["ng/src/lib/logger/global",{"_index":470,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"coverage.html":{}}}],["ng/src/lib/logger/ng",{"_index":576,"title":{},"body":{"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ng/src/lib/nav/common",{"_index":721,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng/src/lib/nav/get",{"_index":724,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng/src/lib/route",{"_index":594,"title":{},"body":{"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"coverage.html":{}}}],["ng/src/lib/rxjs/retry",{"_index":728,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ng_logger_config",{"_index":579,"title":{},"body":{"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngloggerconfig",{"_index":581,"title":{},"body":{"injectables/NgLoggerService.html":{},"miscellaneous/typealiases.html":{}}}],["ngloggermodule",{"_index":573,"title":{"modules/NgLoggerModule.html":{}},"body":{"modules/NgLoggerModule.html":{},"modules.html":{},"overview.html":{}}}],["ngloggerservice",{"_index":474,"title":{"injectables/NgLoggerService.html":{}},"body":{"injectables/GlobalErrorHandler.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"overview.html":{}}}],["ngmodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/BuildConfigModule.html":{},"modules/CommonNgrxModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["ngrx",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngrx.module.ts",{"_index":323,"title":{},"body":{"modules/CommonNgrxModule.html":{}}}],["ngrx/component",{"_index":550,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"modules/MainModule.html":{},"injectables/RouteLoadingStateService.html":{},"dependencies.html":{}}}],["ngrx/effects",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["ngrx/entity",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["ngrx/router",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["ngrx/src/lib/common",{"_index":322,"title":{},"body":{"modules/CommonNgrxModule.html":{}}}],["ngrx/src/lib/entity/entity",{"_index":731,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ngrx/src/lib/models/entity",{"_index":417,"title":{},"body":{"interfaces/EntityTypeParams.html":{},"coverage.html":{}}}],["ngrx/src/lib/util/http",{"_index":483,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngrx/store",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["nodejs",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["non",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HttpActionTypeParams.html":{}}}],["noninfringement",{"_index":883,"title":{},"body":{"license.html":{}}}],["normalizecodespacerootpath",{"_index":761,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["normalized",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["note",{"_index":490,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"modules/ScriptLoaderModule.html":{},"miscellaneous/variables.html":{}}}],["notice",{"_index":868,"title":{},"body":{"license.html":{}}}],["null",{"_index":413,"title":{},"body":{"interfaces/DocumentWithId.html":{},"injectables/ErrorHandlerService.html":{},"injectables/RouteLoadingStateService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nx",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"interfaces/EntityTypeParams.html":{},"components/MainComponent.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"index.html":{}}}],["nxworkspacetemplate",{"_index":807,"title":{},"body":{"index.html":{}}}],["oauth",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":235,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["object.getownpropertynames(err",{"_index":459,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["observable",{"_index":253,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{},"interceptors/HttpLoadingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":843,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":829,"title":{},"body":{"index.html":{}}}],["of(this.config.overrides",{"_index":199,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["one",{"_index":644,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["onlog",{"_index":310,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{}}}],["optimal",{"_index":491,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["optional",{"_index":164,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"components/MainComponent.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"miscellaneous/functions.html":{}}}],["optionalparams",{"_index":284,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/NgLoggerService.html":{}}}],["options.ts",{"_index":722,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":681,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"license.html":{}}}],["out",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":114,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["over",{"_index":315,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{}}}],["override",{"_index":226,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/variables.html":{}}}],["overrides",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/typealiases.html":{}}}],["overview",{"_index":900,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":769,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":401,"title":{},"body":{"interfaces/DeactivatableComponent.html":{}}}],["pages",{"_index":827,"title":{},"body":{"index.html":{}}}],["param",{"_index":300,"title":{},"body":{"classes/CommonLogger.html":{}}}],["parameters",{"_index":163,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"components/MainComponent.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":317,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["params.scripts",{"_index":642,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["params.ts",{"_index":418,"title":{},"body":{"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{}}}],["paramsinheritancestrategy",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partial",{"_index":219,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{}}}],["particular",{"_index":881,"title":{},"body":{"license.html":{}}}],["passed",{"_index":311,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"interfaces/EntityTypeParams.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/variables.html":{}}}],["path.ts",{"_index":760,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["permission",{"_index":837,"title":{},"body":{"license.html":{}}}],["permit",{"_index":861,"title":{},"body":{"license.html":{}}}],["person",{"_index":842,"title":{},"body":{"license.html":{}}}],["persons",{"_index":862,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":608,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["pipe(sharereplay",{"_index":193,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["pipelines",{"_index":823,"title":{},"body":{"index.html":{}}}],["platform",{"_index":830,"title":{},"body":{"index.html":{}}}],["poccess.env",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["port",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":872,"title":{},"body":{"license.html":{}}}],["port}.githubpreview.dev",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":428,"title":{},"body":{"interfaces/EntityTypeParams.html":{},"miscellaneous/variables.html":{}}}],["preload",{"_index":674,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["prevent",{"_index":399,"title":{},"body":{"interfaces/DeactivatableComponent.html":{},"injectables/RouteLoadingStateService.html":{}}}],["private",{"_index":215,"title":{},"body":{"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"injectables/ScriptLoaderService.html":{}}}],["process.env",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":350,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["projects",{"_index":813,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":254,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{},"injectables/ScriptLoaderService.html":{}}}],["promise((resolve",{"_index":691,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["promise.all(scripts.map((script",{"_index":671,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["properties",{"_index":136,"title":{},"body":{"interfaces/BuildConfig.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["props",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":122,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"miscellaneous/typealiases.html":{}}}],["provided",{"_index":220,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"license.html":{}}}],["providedin",{"_index":259,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["providers",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/BuildConfigModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["provides",{"_index":177,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["public",{"_index":182,"title":{},"body":{"injectables/BuildConfigService.html":{},"classes/CommonLogger.html":{},"injectables/ErrorHandlerService.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["publish",{"_index":855,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":882,"title":{},"body":{"license.html":{}}}],["reactivecomponentmodule",{"_index":571,"title":{},"body":{"modules/MainModule.html":{}}}],["readonly",{"_index":216,"title":{},"body":{"injectables/BuildConfigService.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["record",{"_index":134,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/EntityTypeParams.html":{},"miscellaneous/variables.html":{}}}],["recordkey",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirects",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirectto",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["refcount",{"_index":196,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["removeduplicates",{"_index":747,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["removes",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaysubject",{"_index":636,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["replaysubject(1",{"_index":637,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["repo",{"_index":814,"title":{},"body":{"index.html":{}}}],["repository",{"_index":808,"title":{},"body":{"index.html":{}}}],["represents",{"_index":113,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/DateDocument.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":496,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"miscellaneous/variables.html":{}}}],["requestpayload",{"_index":500,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["requests",{"_index":799,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["require",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"overview.html":{}}}],["resolve",{"_index":693,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["restriction",{"_index":849,"title":{},"body":{"license.html":{}}}],["result",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":801,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retrywithbackoff",{"_index":730,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["retrywithbackoff(params",{"_index":794,"title":{},"body":{"miscellaneous/functions.html":{}}}],["return",{"_index":172,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/DeactivatableComponent.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpLoadingInterceptor.html":{},"modules/NgLoggerModule.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["returne",{"_index":231,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{}}}],["returned",{"_index":222,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{}}}],["returns",{"_index":165,"title":{},"body":{"modules/BuildConfigModule.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/DeactivatableComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["revision",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BuildConfig.html":{}}}],["right",{"_index":339,"title":{},"body":{"components/DashboardComponent.html":{}}}],["rights",{"_index":852,"title":{},"body":{"license.html":{}}}],["root",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["route",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"injectables/RouteLoadingStateService.html":{},"miscellaneous/variables.html":{}}}],["routeloadingstate",{"_index":593,"title":{"interfaces/RouteLoadingState.html":{}},"body":{"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"coverage.html":{}}}],["routeloadingstateservice",{"_index":597,"title":{"injectables/RouteLoadingStateService.html":{}},"body":{"injectables/RouteLoadingStateService.html":{},"coverage.html":{}}}],["router",{"_index":599,"title":{},"body":{"injectables/RouteLoadingStateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forroot",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["rxjs",{"_index":212,"title":{},"body":{"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":521,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["same",{"_index":141,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["scheme",{"_index":493,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["script",{"_index":117,"title":{},"body":{"interfaces/BuildConfig.html":{},"classes/CommonLogger.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["script_loader_init_scripts",{"_index":624,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["script_loader_loaded",{"_index":635,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scriptelement",{"_index":683,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptelement.onload",{"_index":692,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptelement.setattribute('async",{"_index":688,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptelement.setattribute('src",{"_index":687,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptloaderinitscripts",{"_index":616,"title":{"interfaces/ScriptLoaderInitScripts.html":{}},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["scriptloaderloaded",{"_index":650,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptloaderloaded.next(true",{"_index":669,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptloadermodule",{"_index":626,"title":{"modules/ScriptLoaderModule.html":{}},"body":{"modules/ScriptLoaderModule.html":{},"modules.html":{},"overview.html":{}}}],["scriptloaderservice",{"_index":629,"title":{"injectables/ScriptLoaderService.html":{}},"body":{"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["scriptparams",{"_index":623,"title":{"interfaces/ScriptParams.html":{}},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{}}}],["scripts",{"_index":622,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["scripts.ts",{"_index":621,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scriptsloaded",{"_index":646,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptsloaded.src",{"_index":678,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["see",{"_index":661,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["sell",{"_index":859,"title":{},"body":{"license.html":{}}}],["serialize",{"_index":447,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["serialize(err",{"_index":453,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["service",{"_index":162,"title":{},"body":{"modules/BuildConfigModule.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"injectables/ErrorHandlerService.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":533,"title":{},"body":{"interfaces/HttpLoadingState.html":{},"interfaces/RouteLoadingState.html":{},"miscellaneous/variables.html":{}}}],["setdisabled",{"_index":539,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["setloading",{"_index":540,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["setting",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":159,"title":{},"body":{"modules/BuildConfigModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["shall",{"_index":869,"title":{},"body":{"license.html":{}}}],["sharereplay",{"_index":211,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["shouldn't",{"_index":915,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["shows",{"_index":347,"title":{},"body":{"components/DashboardComponent.html":{}}}],["side",{"_index":124,"title":{},"body":{"interfaces/BuildConfig.html":{},"classes/CommonLogger.html":{}}}],["simple",{"_index":271,"title":{},"body":{"classes/CommonLogger.html":{}}}],["situations",{"_index":120,"title":{},"body":{"interfaces/BuildConfig.html":{},"classes/CommonLogger.html":{}}}],["skip",{"_index":679,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["software",{"_index":845,"title":{},"body":{"license.html":{}}}],["something",{"_index":439,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["sources",{"_index":670,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["special",{"_index":610,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["specify",{"_index":227,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/variables.html":{}}}],["src",{"_index":673,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["stap",{"_index":143,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["start",{"_index":810,"title":{},"body":{"index.html":{}}}],["started",{"_index":806,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":547,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["state.disabled",{"_index":543,"title":{},"body":{"injectables/HttpLoadingStateService.html":{}}}],["state.loading",{"_index":544,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["statements",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":153,"title":{},"body":{"modules/BuildConfigModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["still",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":551,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{},"dependencies.html":{}}}],["string",{"_index":137,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/ScriptParams.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["subject",{"_index":864,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":857,"title":{},"body":{"license.html":{}}}],["subscribe((loading",{"_index":614,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["substantial",{"_index":871,"title":{},"body":{"license.html":{}}}],["success",{"_index":497,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"miscellaneous/variables.html":{}}}],["successpayload",{"_index":501,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["super",{"_index":553,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["super(config",{"_index":592,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["support",{"_index":896,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["supported",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["supporting",{"_index":816,"title":{},"body":{"index.html":{}}}],["svg",{"_index":897,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":411,"title":{},"body":{"interfaces/DocumentWithId.html":{},"miscellaneous/variables.html":{}}}],["systems",{"_index":438,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["t",{"_index":407,"title":{},"body":{"interfaces/DocumentWithId.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":768,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":767,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":795,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tap",{"_index":520,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{},"index.html":{}}}],["template/common",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"interfaces/EntityTypeParams.html":{},"components/MainComponent.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["testing",{"_index":913,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["this.config?.hidden",{"_index":299,"title":{},"body":{"classes/CommonLogger.html":{}}}],["this.document.createelement('script",{"_index":684,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.document.getelementsbytagname('head')[0",{"_index":690,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.hidden?.includes('debug",{"_index":306,"title":{},"body":{"classes/CommonLogger.html":{}}}],["this.hidden?.includes('error",{"_index":302,"title":{},"body":{"classes/CommonLogger.html":{}}}],["this.hidden?.includes('log",{"_index":304,"title":{},"body":{"classes/CommonLogger.html":{}}}],["this.hidden?.includes('warn",{"_index":308,"title":{},"body":{"classes/CommonLogger.html":{}}}],["this.http",{"_index":191,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["this.httploadingstate.setloading(false",{"_index":527,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["this.httploadingstate.setloading(true",{"_index":526,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["this.isdeactivatable(component",{"_index":264,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["this.load(script",{"_index":672,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.loadscripts(initscripts).then",{"_index":668,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.logger.error(err",{"_index":481,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["this.router.events",{"_index":607,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["this.scriptsloaded$.next",{"_index":685,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.scriptsloaded$.value",{"_index":686,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.scriptsloaded$.value.find",{"_index":677,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.select((state",{"_index":542,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["this.setloading(!!loading",{"_index":615,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["this.updater((state",{"_index":546,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["throw",{"_index":200,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["time",{"_index":142,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/CommonLoggerConfig.html":{}}}],["title_case",{"_index":429,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["todo",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":225,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/variables.html":{}}}],["tomap",{"_index":750,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tooling",{"_index":116,"title":{},"body":{"interfaces/BuildConfig.html":{},"index.html":{}}}],["tort",{"_index":892,"title":{},"body":{"license.html":{}}}],["track",{"_index":356,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["true",{"_index":197,"title":{},"body":{"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{},"injectables/RouteLoadingStateService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":457,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["ts",{"_index":919,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tslib",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":112,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"components/MainComponent.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":904,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedaction",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeof",{"_index":233,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"interfaces/DocumentWithId.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["typeofkey",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeparams['prefix",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types",{"_index":487,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":465,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["undefined",{"_index":415,"title":{},"body":{"interfaces/DocumentWithId.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":410,"title":{},"body":{"interfaces/DocumentWithId.html":{}}}],["unknown",{"_index":261,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DocumentWithId.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["unused",{"_index":467,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["update",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatecancel",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatedat",{"_index":390,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["updatefailed",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatesuccess",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":357,"title":{},"body":{"components/DashboardComponent.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["used",{"_index":118,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"classes/CommonLogger.html":{},"interfaces/EntityTypeParams.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/HttpActionTypeParams.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":250,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/HttpActionTypeParams.html":{}}}],["usevalue",{"_index":173,"title":{},"body":{"modules/BuildConfigModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["using",{"_index":363,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["usually",{"_index":320,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/EntityTypeParams.html":{}}}],["utilities",{"_index":421,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["utility",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":189,"title":{},"body":{"injectables/BuildConfigService.html":{},"interfaces/DeactivatableComponent.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["value.ts",{"_index":743,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainComponent.html":{}}}],["variable",{"_index":701,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":921,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":468,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["verify",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":138,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["very",{"_index":353,"title":{},"body":{"components/DashboardComponent.html":{}}}],["via",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["viable",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["view",{"_index":359,"title":{},"body":{"components/DashboardComponent.html":{}}}],["void",{"_index":287,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/ErrorHandlerService.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/NgLoggerService.html":{},"interfaces/ScriptParams.html":{}}}],["warn",{"_index":275,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/NgLoggerService.html":{},"miscellaneous/typealiases.html":{}}}],["warn(message",{"_index":292,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{}}}],["warranties",{"_index":878,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":873,"title":{},"body":{"license.html":{}}}],["whether",{"_index":890,"title":{},"body":{"license.html":{}}}],["whitespace",{"_index":393,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["width",{"_index":332,"title":{},"body":{"components/DashboardComponent.html":{}}}],["wip",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":181,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["without",{"_index":848,"title":{},"body":{"license.html":{}}}],["work",{"_index":398,"title":{},"body":{"interfaces/DeactivatableComponent.html":{},"interfaces/HttpActionTypeParams.html":{},"miscellaneous/variables.html":{}}}],["workspace",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"interfaces/EntityTypeParams.html":{},"components/MainComponent.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"index.html":{}}}],["wrap",{"_index":419,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["wrapper",{"_index":485,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["yes",{"_index":281,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{},"modules/ScriptLoaderModule.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/internal-ng/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nx-workspace-template-root\n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'nx-workspace-template-root',\n  templateUrl: './app.component.html',\n  styles: [],\n})\nexport class AppComponent {}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'nx-workspace-template-root'},{'name': 'DashboardComponent', 'selector': 'nx-workspace-template-dashboard'},{'name': 'MainComponent', 'selector': 'nx-workspace-template-main'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nBuildConfigModule\n\nBuildConfigModule\n\nAppModule -->\n\nBuildConfigModule->AppModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nAppModule -->\n\nMainModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/internal-ng/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BuildConfigModule\n                        \n                        \n                            DashboardModule\n                        \n                        \n                            MainModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { BuildConfigModule } from '@nx-workspace-template/common-ng';\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './core/main/main.component';\nimport { MainModule } from './core/main/main.module';\nimport { DashboardComponent } from './modules/dashboard/dashboard.component';\nimport { DashboardModule } from './modules/dashboard/dashboard.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(\n      [\n        {\n          path: '',\n          component: MainComponent,\n          children: [\n            {\n              path: '',\n              pathMatch: 'full',\n              component: DashboardComponent,\n            },\n          ],\n        },\n        {\n          // TODO: add \"404 route\"\n          path: '**',\n          redirectTo: '',\n        },\n      ],\n      { initialNavigation: 'enabledBlocking' }\n    ),\n\n    // core modules\n    MainModule,\n    // nested non-lazy loaded modules\n    DashboardModule,\n\n    // global/injection modules\n    BuildConfigModule.forRoot(\n      environment.production\n        ? {\n            path: './build-config.json',\n          }\n        : {\n            overrides: {\n              angularVersion: '0.0.0',\n              date: new Date().toISOString(),\n              revision: '0.0.0',\n            },\n          }\n    ),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BuildConfig.html":{"url":"interfaces/BuildConfig.html","title":"interface - BuildConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BuildConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/build-config/build-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Type that represents the output of the build-config.js tooling script.\nThis script can be used in multiple of situations, but generally is used\nto provide the client-side information on the current asset build, to help\ndebug caching issues and provide context.\n\n            \n\n            \n                Extends\n            \n            \n                    Record\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            angularVersion\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            revision\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        angularVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        angularVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The version of Angular. It is assumed all dependencies are also\nthe same version.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The time-stap of the latest build.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        revision\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        revision:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The git hash of this build.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport const BUILD_CONFIG = new InjectionToken('NG_CONFIG');\n\n/**\n * Type that represents the output of the `build-config.js` tooling script.\n * This script can be used in multiple of situations, but generally is used\n * to provide the client-side information on the current asset build, to help\n * debug caching issues and provide context.\n */\nexport interface BuildConfig extends Record {\n  /**\n   * The git hash of this build.\n   */\n  revision: string;\n  /**\n   * The version of Angular. It is assumed all dependencies are also\n   * the same version.\n   */\n  angularVersion: string;\n  /**\n   * The time-stap of the latest build.\n   */\n  date: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BuildConfigModule.html":{"url":"modules/BuildConfigModule.html","title":"module - BuildConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    BuildConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common-ng/src/lib/build-config/build-config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: BuildConfigConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/common-ng/src/lib/build-config/build-config.module.ts:13\n                \n            \n\n\n            \n                \n                    Setup configurations with the build-config-service.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                BuildConfigConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BuildConfigService } from './build-config.service';\nimport { BuildConfigConfig, BUILD_CONFIG_CONFIG } from '.';\n\n@NgModule({\n  imports: [HttpClientModule],\n})\nexport class BuildConfigModule {\n  /**\n   * Setup configurations with the build-config-service.\n   */\n  static forRoot(\n    config: BuildConfigConfig\n  ): ModuleWithProviders {\n    return {\n      ngModule: BuildConfigModule,\n      providers: [\n        BuildConfigService,\n        {\n          provide: BUILD_CONFIG_CONFIG,\n          useValue: config,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BuildConfigService.html":{"url":"injectables/BuildConfigService.html","title":"injectable - BuildConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BuildConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/build-config/build-config.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Provides an interface to gather the build config\nfrom the BUILD_CONFIG_PATH injectable.\nBy default it is assumed to be just at config.json\nwithin the root public folder.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buildConfig$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, config: BuildConfigConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/common-ng/src/lib/build-config/build-config.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        BuildConfigConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        buildConfig$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (() => {\n    if (isBuildConfigWithPathConfig(this.config))\n      return this.http\n        .get(this.config.path)\n        .pipe(shareReplay({ bufferSize: 1, refCount: true }));\n    if (isBuildConfigWithoutPathConfig(this.config))\n      return of(this.config.overrides);\n    throw new Error(\n      `Invalid build config configuration: ${JSON.stringify(this.config)}`\n    );\n  })()\n                    \n                \n                    \n                        \n                                Defined in libs/common-ng/src/lib/build-config/build-config.service.ts:23\n                        \n                    \n\n            \n                \n                    The build config file contents. Will be cached after the initial call.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { of, shareReplay } from 'rxjs';\nimport { BuildConfig } from './build-config';\nimport {\n  BuildConfigConfig,\n  BUILD_CONFIG_CONFIG,\n  isBuildConfigWithoutPathConfig,\n  isBuildConfigWithPathConfig,\n} from './build-config-config';\n\n/**\n * Provides an interface to gather the build config\n * from the BUILD_CONFIG_PATH injectable.\n * By default it is assumed to be just at `config.json`\n * within the root public folder.\n */\n@Injectable()\nexport class BuildConfigService {\n  /**\n   * The build config file contents. Will be cached after the initial call.\n   */\n  public buildConfig$ = (() => {\n    if (isBuildConfigWithPathConfig(this.config))\n      return this.http\n        .get(this.config.path)\n        .pipe(shareReplay({ bufferSize: 1, refCount: true }));\n    if (isBuildConfigWithoutPathConfig(this.config))\n      return of(this.config.overrides);\n    throw new Error(\n      `Invalid build config configuration: ${JSON.stringify(this.config)}`\n    );\n  })();\n\n  constructor(\n    private readonly http: HttpClient,\n    @Inject(BUILD_CONFIG_CONFIG) private readonly config: BuildConfigConfig\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BuildConfigWithPathConfig.html":{"url":"interfaces/BuildConfigWithPathConfig.html","title":"interface - BuildConfigWithPathConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BuildConfigWithPathConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/build-config/build-config-config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            overrides\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        overrides\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overrides:         Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Overrides that can be provided to customize the returned data.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The path to the file. If given, then the file will be loaded from this path.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { BuildConfig } from './build-config';\n\n/**\n * Token that represents the configuration of the \"build-config\" service.\n * Used to override the build config, and specify the path to the build config file.\n */\nexport const BUILD_CONFIG_CONFIG = new InjectionToken(\n  'BUILD_CONFIG_CONFIG'\n);\n\n/**\n * The build-config configuration. Can be used to provide overrides of\n * the config file, and customize the actual build-config service behavior.\n */\nexport type BuildConfigConfig =\n  | BuildConfigWithPathConfig\n  | BuildConfigWithoutPathConfig;\n\nexport interface BuildConfigWithPathConfig {\n  /**\n   * The path to the file. If given, then the file will be loaded from this path.\n   */\n  path: string;\n  /**\n   * Overrides that can be provided to customize the returned data.\n   */\n  overrides?: Partial;\n}\n\nexport interface BuildConfigWithoutPathConfig {\n  /**\n   * Overrides that must be provided to defined the returne data.\n   */\n  overrides?: BuildConfig;\n}\n\nexport const isBuildConfigWithPathConfig = (\n  config: BuildConfigConfig\n): config is BuildConfigWithPathConfig =>\n  !!(config as BuildConfigWithPathConfig).path &&\n  typeof (config as BuildConfigWithPathConfig).path === 'string';\n\nexport const isBuildConfigWithoutPathConfig = (\n  config: BuildConfigConfig\n): config is BuildConfigWithoutPathConfig =>\n  !!(config as BuildConfigWithoutPathConfig).overrides &&\n  typeof (config as BuildConfigWithoutPathConfig).overrides === 'object';\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BuildConfigWithoutPathConfig.html":{"url":"interfaces/BuildConfigWithoutPathConfig.html","title":"interface - BuildConfigWithoutPathConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BuildConfigWithoutPathConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/build-config/build-config-config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            overrides\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        overrides\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overrides:         BuildConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BuildConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Overrides that must be provided to defined the returne data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { BuildConfig } from './build-config';\n\n/**\n * Token that represents the configuration of the \"build-config\" service.\n * Used to override the build config, and specify the path to the build config file.\n */\nexport const BUILD_CONFIG_CONFIG = new InjectionToken(\n  'BUILD_CONFIG_CONFIG'\n);\n\n/**\n * The build-config configuration. Can be used to provide overrides of\n * the config file, and customize the actual build-config service behavior.\n */\nexport type BuildConfigConfig =\n  | BuildConfigWithPathConfig\n  | BuildConfigWithoutPathConfig;\n\nexport interface BuildConfigWithPathConfig {\n  /**\n   * The path to the file. If given, then the file will be loaded from this path.\n   */\n  path: string;\n  /**\n   * Overrides that can be provided to customize the returned data.\n   */\n  overrides?: Partial;\n}\n\nexport interface BuildConfigWithoutPathConfig {\n  /**\n   * Overrides that must be provided to defined the returne data.\n   */\n  overrides?: BuildConfig;\n}\n\nexport const isBuildConfigWithPathConfig = (\n  config: BuildConfigConfig\n): config is BuildConfigWithPathConfig =>\n  !!(config as BuildConfigWithPathConfig).path &&\n  typeof (config as BuildConfigWithPathConfig).path === 'string';\n\nexport const isBuildConfigWithoutPathConfig = (\n  config: BuildConfigConfig\n): config is BuildConfigWithoutPathConfig =>\n  !!(config as BuildConfigWithoutPathConfig).overrides &&\n  typeof (config as BuildConfigWithoutPathConfig).overrides === 'object';\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CanDeactivateGuard.html":{"url":"guards/CanDeactivateGuard.html","title":"guard - CanDeactivateGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    CanDeactivateGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                libs/common-ng/src/lib/can-deactivate/can-deactivate.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                            \n                                    Private\n                                isdeactivatable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canDeactivate\n                        \n                    \n                \n            \n            \n                \ncanDeactivate(component: DeactivatableComponent | )\n                \n            \n\n\n            \n                \n                    Defined in libs/common-ng/src/lib/can-deactivate/can-deactivate.guard.ts:28\n                \n            \n\n\n            \n                \n                    Returns if the component can be deactivated, or navigated away from by the user.\nIf the component does not have the canDeactivate method, then it automatically\nwill return true\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                DeactivatableComponent | \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isdeactivatable\n                        \n                    \n                \n            \n            \n                \n                    \n                    isdeactivatable(component)\n                \n            \n\n\n            \n                \n                    Defined in libs/common-ng/src/lib/can-deactivate/can-deactivate.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DeactivatableComponent\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { DeactivatableComponent } from './deactivatable-component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CanDeactivateGuard\n  implements CanDeactivate\n{\n  private isdeactivatable(\n    component: unknown\n  ): component is DeactivatableComponent {\n    return (\n      !!component &&\n      typeof component === 'object' &&\n      (component as DeactivatableComponent).canDeactivate &&\n      typeof (component as DeactivatableComponent).canDeactivate === 'function'\n    );\n  }\n  /**\n   * Returns if the component can be deactivated, or navigated away from by the user.\n   *\n   * If the component does not have the `canDeactivate` method, then it automatically\n   * will return true\n   */\n  canDeactivate(\n    component: DeactivatableComponent | unknown\n  ): Observable | Promise | boolean {\n    return this.isdeactivatable(component) ? component.canDeactivate() : true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonLogger.html":{"url":"classes/CommonLogger.html","title":"class - CommonLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/lib/utils/common-logger/common-logger.ts\n        \n\n\n            \n                Description\n            \n            \n                Simple but configurable logger. Should be used on the client-side\nand script situations\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hidden\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: CommonLoggerConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        CommonLoggerConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                \nconfiguration object\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommonLoggerConfig\n\n                    \n                \n                    \n                        \n                                Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:16\n                        \n                    \n\n            \n                \n                    - configuration object\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n\n                \n                    \n                        gethidden()\n                    \n                \n                            \n                                \n                                    Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:10\n                                \n                            \n                    \n                        \n                                The list of hidden methods, defined from the config object.\n\n\n                                \n                                    Returns :     Array\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { CommonLoggerConfig } from './common-logger-config';\n/**\n * Simple but configurable logger. Should be used on the client-side\n * and script situations\n */\nexport class CommonLogger {\n  /**\n   * The list of hidden methods, defined from the config object.\n   */\n  public get hidden(): Array {\n    return this.config?.hidden || [];\n  }\n  /**\n   * @param config - configuration object\n   */\n  constructor(public config?: CommonLoggerConfig) {}\n\n  error(message?: unknown, ...optionalParams: unknown[]): void {\n    if (this.hidden?.includes('error')) return;\n    console.error(message, ...optionalParams);\n  }\n\n  log(message?: unknown, ...optionalParams: unknown[]): void {\n    if (this.hidden?.includes('log')) return;\n    console.log(message, ...optionalParams);\n  }\n\n  debug(message?: unknown, ...optionalParams: unknown[]): void {\n    if (this.hidden?.includes('debug')) return;\n    console.debug(message, ...optionalParams);\n  }\n\n  warn(message?: unknown, ...optionalParams: unknown[]): void {\n    if (this.hidden?.includes('warn')) return;\n    console.warn(message, ...optionalParams);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonLoggerConfig.html":{"url":"interfaces/CommonLoggerConfig.html","title":"interface - CommonLoggerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CommonLoggerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/lib/utils/common-logger/common-logger-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration object for the common-logger.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hidden\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onLog\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hidden:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of hidden methods for the common-logger.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onLog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onLog:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Function that can be passed to \"hook\" into the emittions of logs\nover time.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        type LogLevels = 'log' | 'debug' | 'warn' | 'error';\n/**\n * Configuration object for the common-logger.\n */\nexport interface CommonLoggerConfig {\n  /**\n   * List of hidden methods for the common-logger.\n   */\n  hidden?: Array;\n\n  /**\n   * Function that can be passed to \"hook\" into the emittions of logs\n   * over time.\n   *\n   */\n  onLog?: (params: {\n    /**\n     * The level called\n     */\n    level: LogLevels;\n    /**\n     * The message given, usually a string\n     */\n    message: unknown;\n    /**\n     * The optional params given\n     */\n    optionalParams: Array;\n  }) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonNgrxModule.html":{"url":"modules/CommonNgrxModule.html","title":"module - CommonNgrxModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonNgrxModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common-ngrx/src/lib/common-ngrx.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class CommonNgrxModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/internal-ng/src/app/modules/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nx-workspace-template-dashboard\n            \n\n\n            \n                styles\n                \n      img {\n        max-width: 300px;\n        display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 50%;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'nx-workspace-template-dashboard',\n  templateUrl: './dashboard.component.html',\n  styles: [\n    `\n      img {\n        max-width: 300px;\n        display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 50%;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DashboardComponent {}\n\n    \n\n    \n        \n\n  \n    Dependency Graph\n    \n    \n    \n      \n        The dependency graph generated by\n        nx-cli\n        shows the how the different libraries of this project\n        are loaded and connect to each other.\n        It is very important to keep track of\n        what libraries use what.\n      \n    \n    \n      \n        link\n        View\n      \n    \n  \n\n  \n    Generated Docs\n    \n    \n      \n        The doc app is generated using\n        compodoc, and should include\n        all the generated docs for the entire codebase.\n      \n    \n    \n      \n        link\n        View\n      \n    \n  \n\n\n\n\n    \n\n    \n            \n      img {\n        max-width: 300px;\n        display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 50%;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Dependency Graph                          The dependency graph generated by        nx-cli        shows the how the different libraries of this project        are loaded and connect to each other.        It is very important to keep track of        what libraries use what.                            link        View                  Generated Docs                      The doc app is generated using        compodoc, and should include        all the generated docs for the entire codebase.                            link        View            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'nx-workspace-template-root'},{'name': 'DashboardComponent', 'selector': 'nx-workspace-template-dashboard'},{'name': 'MainComponent', 'selector': 'nx-workspace-template-main'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_exports\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nDashboardComponent \n\nDashboardComponent \n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/internal-ng/src/app/modules/dashboard/dashboard.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DashboardComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DashboardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { GridModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { DashboardComponent } from './dashboard.component';\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [\n    CommonModule,\n    // Angular Material\n    GridModule,\n    MatCardModule,\n    MatIconModule,\n    MatButtonModule,\n  ],\n  exports: [DashboardComponent],\n})\nexport class DashboardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DateDocument.html":{"url":"interfaces/DateDocument.html","title":"interface - DateDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DateDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/lib/models/date-document.ts\n        \n\n\n            \n                Description\n            \n            \n                A date document represents an object with 2 date properties,\ncreatedAt and updatedAt.\nThese properties are usually readonly and created by the database.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DateDocument {\n  createdAt: Date;\n  updatedAt?: Date;\n}\n\n// whitespace change again, again\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeactivatableComponent.html":{"url":"interfaces/DeactivatableComponent.html","title":"interface - DeactivatableComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DeactivatableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/can-deactivate/deactivatable-component.ts\n        \n\n\n            \n                Description\n            \n            \n                For component classes that work with the CanDeactivate guard, which will\nprevent a user from navigating away from a page.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        canDeactivate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canDeactivate\n                        \n                    \n                \n            \n            \n                \ncanDeactivate()\n                \n            \n\n\n            \n                \n                    Defined in libs/common-ng/src/lib/can-deactivate/deactivatable-component.ts:12\n                \n            \n\n\n            \n                \n                    If the user can navigate away from the page, then\nreturn a true value.\n\n\n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\n/**\n * For component classes that work with the `CanDeactivate` guard, which will\n * prevent a user from navigating away from a page.\n */\nexport interface DeactivatableComponent {\n  /**\n   * If the user can navigate away from the page, then\n   * return a true value.\n   */\n  canDeactivate(): Observable | Promise | boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DocumentWithId.html":{"url":"interfaces/DocumentWithId.html","title":"interface - DocumentWithId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DocumentWithId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/lib/models/id-document.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type DocumentId = string & { readonly brand: unique symbol };\nexport const DocumentId = (documentId: string): T =>\n  documentId as T;\n\nexport interface DocumentWithId {\n  id: T;\n}\n\n/**\n * Is a document with an id\n */\nexport const isDocumentWithId = (\n  doc: DocumentWithId | unknown\n): doc is DocumentWithId =>\n  typeof doc === 'object' &&\n  doc !== null &&\n  (doc as DocumentWithId).id !== undefined;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityTypeParams.html":{"url":"interfaces/EntityTypeParams.html","title":"interface - EntityTypeParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EntityTypeParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ngrx/src/lib/models/entity-type-params.ts\n        \n\n\n            \n                Description\n            \n            \n                This type is used to wrap type-params for all entity\nutilities. This is to cutdown on the amount of\ngenerics that need to be passed around\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            doc\n                                        \n                                \n                                \n                                        \n                                            docId\n                                        \n                                \n                                \n                                        \n                                            prefix\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        doc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        doc:     Doc\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Doc\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the document\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        docId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        docId:     DocId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the document-id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prefix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prefix:     Prefix\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Prefix\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The prefix string, usually TITLE_CASE\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { DocumentWithId } from '@nx-workspace-template/common';\n\n/**\n * This type is used to wrap type-params for all entity\n * utilities. This is to cutdown on the amount of\n * generics that need to be passed around\n */\nexport interface EntityTypeParams = Record & { id: DocId }\n> {\n  /**\n   * The prefix string, usually TITLE_CASE\n   */\n  prefix: Prefix;\n  /**\n   * The type of the document\n   */\n  doc: Doc;\n  /**\n   * The type of the document-id\n   */\n  docId: DocId;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/error-handler/error-handler.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A generic service that can \"handle errors\", by logging\nthem into other systems. This service should be used as often\nas the logger service, however, this service will do\nsomething beyond log it in the console.\nInitially the service doesn't do anything. This should be changed\naccording to the project configuration.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                handle\n                            \n                            \n                                    Public\n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(err)\n                \n            \n\n\n            \n                \n                    Defined in libs/common-ng/src/lib/error-handler/error-handler.service.ts:32\n                \n            \n\n\n            \n                \n                    Handles the error accordingly\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        serialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    serialize(err)\n                \n            \n\n\n            \n                \n                    Defined in libs/common-ng/src/lib/error-handler/error-handler.service.ts:20\n                \n            \n\n\n            \n                \n                    Will attempt to serialize the error into an object that can be a string.\nIf this fails, we return null.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * A generic service that can \"handle errors\", by logging\n * them into other systems. This service should be used as often\n * as the logger service, however, this service will do\n * something beyond log it in the console.\n *\n * Initially the service doesn't do anything. This should be changed\n * according to the project configuration.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHandlerService {\n  /**\n   * Will attempt to serialize the error into an object that can be a string.\n   * If this fails, we return null.\n   */\n  public serialize(err: unknown): unknown {\n    try {\n      return JSON.parse(JSON.stringify(err, Object.getOwnPropertyNames(err)));\n    } catch (err) {\n      return null;\n    }\n  }\n\n  /**\n   * Handles the error accordingly\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public handle(err: unknown): void {\n    // TODO:\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalErrorHandler.html":{"url":"injectables/GlobalErrorHandler.html","title":"injectable - GlobalErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GlobalErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/logger/global-error-handler.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: NgLoggerService)\n                    \n                \n                        \n                            \n                                Defined in libs/common-ng/src/lib/logger/global-error-handler.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        NgLoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(err)\n                \n            \n\n\n            \n                \n                    Defined in libs/common-ng/src/lib/logger/global-error-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ErrorHandler, Injectable } from '@angular/core';\nimport { NgLoggerService } from './ng-logger.service';\n\n@Injectable()\nexport class GlobalErrorHandler implements ErrorHandler {\n  constructor(private logger: NgLoggerService) {}\n\n  handleError(err: unknown) {\n    this.logger.error(err);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpActionTypeParams.html":{"url":"interfaces/HttpActionTypeParams.html","title":"interface - HttpActionTypeParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HttpActionTypeParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ngrx/src/lib/util/http-action-type-params.ts\n        \n\n\n            \n                Description\n            \n            \n                \"Wrapper type\", used to define\nthe types for the htt-action-factory.\nnote the types are non-optimal, but for\nthe user-facing scheme it should work.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cancel\n                                        \n                                \n                                \n                                        \n                                            failure\n                                        \n                                \n                                \n                                        \n                                            request\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cancel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancel:     CancelPayload\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CancelPayload\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        failure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        failure:     FailurePayload\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FailurePayload\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        request\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        request:     RequestPayload\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RequestPayload\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:     SuccessPayload\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SuccessPayload\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HttpActionTypeParams {\n  request: RequestPayload;\n  success: SuccessPayload;\n  failure: FailurePayload;\n  cancel: CancelPayload;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpLoadingInterceptor.html":{"url":"interceptors/HttpLoadingInterceptor.html","title":"interceptor - HttpLoadingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpLoadingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/http-loading/http-loading.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpLoadingState: HttpLoadingStateService)\n                    \n                \n                        \n                            \n                                Defined in libs/common-ng/src/lib/http-loading/http-loading.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpLoadingState\n                                                  \n                                                        \n                                                                        HttpLoadingStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in libs/common-ng/src/lib/http-loading/http-loading.interceptor.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { HttpLoadingStateService } from './http-loading.state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpLoadingInterceptor implements HttpInterceptor {\n  constructor(private httpLoadingState: HttpLoadingStateService) {}\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return next.handle(request).pipe(\n      tap({\n        next: (event) =>\n          event instanceof HttpResponse &&\n          this.httpLoadingState.setLoading(true),\n        error: () => this.httpLoadingState.setLoading(false),\n        complete: () => this.httpLoadingState.setLoading(false),\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpLoadingState.html":{"url":"interfaces/HttpLoadingState.html","title":"interface - HttpLoadingState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HttpLoadingState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/http-loading/http-loading.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            loading\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Flag that can be set to force loading to always be false.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If an http request is loading or not.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface HttpLoadingState {\n  /**\n   * If an http request is loading or not.\n   */\n  loading?: boolean;\n  /**\n   * Flag that can be set to **force** loading to always be false.\n   */\n  disabled?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpLoadingStateService.html":{"url":"injectables/HttpLoadingStateService.html","title":"injectable - HttpLoadingStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpLoadingStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/http-loading/http-loading.state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ComponentStore\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                loading$\n                            \n                            \n                                    Public\n                                    Readonly\n                                setDisabled\n                            \n                            \n                                    Public\n                                    Readonly\n                                setLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/common-ng/src/lib/http-loading/http-loading.state.service.ts:14\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.select((state) =>\n    state.disabled ? false : !!state.loading\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/common-ng/src/lib/http-loading/http-loading.state.service.ts:12\n                        \n                    \n\n            \n                \n                    If the http request is loading or not.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        setDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state, disabled: boolean) => ({\n    ...state,\n    disabled,\n  }))\n                    \n                \n                    \n                        \n                                Defined in libs/common-ng/src/lib/http-loading/http-loading.state.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        setLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state, loading: boolean) => ({\n    ...state,\n    loading,\n  }))\n                    \n                \n                    \n                        \n                                Defined in libs/common-ng/src/lib/http-loading/http-loading.state.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ComponentStore } from '@ngrx/component-store';\nimport { HttpLoadingState } from './http-loading.state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpLoadingStateService extends ComponentStore {\n  /**\n   * If the http request is loading or not.\n   */\n  public readonly loading$ = this.select((state) =>\n    state.disabled ? false : !!state.loading\n  );\n  constructor() {\n    super({});\n  }\n\n  public readonly setDisabled = this.updater((state, disabled: boolean) => ({\n    ...state,\n    disabled,\n  }));\n\n  public readonly setLoading = this.updater((state, loading: boolean) => ({\n    ...state,\n    loading,\n  }));\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/internal-ng/src/app/core/main/main.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nx-workspace-template-main\n            \n\n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                configService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: BuildConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/internal-ng/src/app/core/main/main.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        BuildConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BuildConfigService\n\n                    \n                \n                    \n                        \n                                Defined in apps/internal-ng/src/app/core/main/main.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BuildConfigService } from '@nx-workspace-template/common-ng';\n\n@Component({\n  selector: 'nx-workspace-template-main',\n  templateUrl: './main.component.html',\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MainComponent {\n  constructor(public configService: BuildConfigService) {}\n}\n\n    \n\n    \n        \n  \n    \n\n      \n        \n          menu\n        \n        \n          nx-workspace-template\n        \n      \n\n      \n        \n          \n            {{config.revision}}\n          \n        \n      \n\n    \n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              menu                          nx-workspace-template                                                  {{config.revision}}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'nx-workspace-template-root'},{'name': 'DashboardComponent', 'selector': 'nx-workspace-template-dashboard'},{'name': 'MainComponent', 'selector': 'nx-workspace-template-main'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainModule.html":{"url":"modules/MainModule.html","title":"module - MainModule","body":"\n                   \n\n\n\n\n    Modules\n    MainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MainModule\n\n\n\ncluster_MainModule_declarations\n\n\n\ncluster_MainModule_exports\n\n\n\n\nMainComponent\n\nMainComponent\n\n\n\nMainModule\n\nMainModule\n\nMainModule -->\n\nMainComponent->MainModule\n\n\n\n\n\nMainComponent \n\nMainComponent \n\nMainComponent  -->\n\nMainModule->MainComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/internal-ng/src/app/core/main/main.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MainComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveComponentModule } from '@ngrx/component';\nimport { MainComponent } from './main.component';\n@NgModule({\n  declarations: [MainComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveComponentModule,\n    // Angular Material\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatChipsModule,\n  ],\n  exports: [MainComponent],\n})\nexport class MainModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgLoggerModule.html":{"url":"modules/NgLoggerModule.html","title":"module - NgLoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    NgLoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NgLoggerModule\n\n\n\ncluster_NgLoggerModule_providers\n\n\n\n\nNgLoggerService\n\nNgLoggerService\n\n\n\nNgLoggerModule\n\nNgLoggerModule\n\nNgLoggerModule -->\n\nNgLoggerService->NgLoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common-ng/src/lib/logger/ng-logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NgLoggerService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: CommonLoggerConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/common-ng/src/lib/logger/ng-logger.module.ts:15\n                \n            \n\n\n            \n                \n                    Setup configurations with the ng-logger-service\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                CommonLoggerConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgLoggerService } from './ng-logger.service';\nimport { CommonLoggerConfig } from '@nx-workspace-template/common';\nimport { NG_LOGGER_CONFIG } from './ng-logger-config';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [NgLoggerService],\n})\nexport class NgLoggerModule {\n  /**\n   * Setup configurations with the ng-logger-service\n   */\n  static forRoot(\n    config: CommonLoggerConfig\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgLoggerModule,\n      providers: [\n        NgLoggerService,\n        {\n          provide: NG_LOGGER_CONFIG,\n          useValue: config,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgLoggerService.html":{"url":"injectables/NgLoggerService.html","title":"injectable - NgLoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/logger/ng-logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CommonLogger\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgLoggerConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/common-ng/src/lib/logger/ng-logger.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgLoggerConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Inherited from         CommonLogger\n\n                \n            \n            \n                \n                        Defined in         CommonLogger:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Inherited from         CommonLogger\n\n                \n            \n            \n                \n                        Defined in         CommonLogger:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Inherited from         CommonLogger\n\n                \n            \n            \n                \n                        Defined in         CommonLogger:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Inherited from         CommonLogger\n\n                \n            \n            \n                \n                        Defined in         CommonLogger:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgLoggerConfig\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(NG_LOGGER_CONFIG)@Optional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CommonLogger\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonLogger:10\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@angular/core';\nimport { CommonLogger } from '@nx-workspace-template/common';\nimport { NgLoggerConfig, NG_LOGGER_CONFIG } from './ng-logger-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgLoggerService extends CommonLogger {\n  constructor(\n    @Inject(NG_LOGGER_CONFIG) @Optional() public config: NgLoggerConfig\n  ) {\n    super(config);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouteLoadingState.html":{"url":"interfaces/RouteLoadingState.html","title":"interface - RouteLoadingState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RouteLoadingState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/route-loading/route-loading.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            loading\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Flag that can be set to force loading to always be false.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If navigation is loading or not.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface RouteLoadingState {\n  /**\n   * If navigation is loading or not.\n   */\n  loading?: boolean;\n  /**\n   * Flag that can be set to **force** loading to always be false.\n   */\n  disabled?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RouteLoadingStateService.html":{"url":"injectables/RouteLoadingStateService.html","title":"injectable - RouteLoadingStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RouteLoadingStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/route-loading/route-loading.state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ComponentStore\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                loading$\n                            \n                            \n                                    Public\n                                    Readonly\n                                setDisabled\n                            \n                            \n                                    Public\n                                    Readonly\n                                setLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in libs/common-ng/src/lib/route-loading/route-loading.state.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.select((state) => state.loading)\n                    \n                \n                    \n                        \n                                Defined in libs/common-ng/src/lib/route-loading/route-loading.state.service.ts:19\n                        \n                    \n\n            \n                \n                    If the navigation is loading or not.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        setDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state, disabled: boolean) => ({\n    ...state,\n    disabled,\n  }))\n                    \n                \n                    \n                        \n                                Defined in libs/common-ng/src/lib/route-loading/route-loading.state.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        setLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state, loading: boolean) => ({\n    ...state,\n    loading,\n  }))\n                    \n                \n                    \n                        \n                                Defined in libs/common-ng/src/lib/route-loading/route-loading.state.service.ts:42\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  GuardsCheckEnd,\n  NavigationEnd,\n  NavigationStart,\n  Router,\n} from '@angular/router';\nimport { ComponentStore } from '@ngrx/component-store';\nimport { filter, map } from 'rxjs';\nimport { RouteLoadingState } from './route-loading.state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RouteLoadingStateService extends ComponentStore {\n  /**\n   * If the navigation is loading or not.\n   */\n  public readonly loading$ = this.select((state) => state.loading);\n\n  constructor(private router: Router) {\n    super({});\n    this.router.events\n      .pipe(\n        map((event) => {\n          if (event instanceof NavigationStart) return true;\n          if (event instanceof NavigationEnd) return false;\n          if (event instanceof GuardsCheckEnd) return false;\n          // null is a special value to prevent emittions of extra changes\n          return null;\n        }),\n        filter((loading) => loading !== null)\n      )\n      .subscribe((loading) => this.setLoading(!!loading));\n  }\n\n  public readonly setDisabled = this.updater((state, disabled: boolean) => ({\n    ...state,\n    disabled,\n  }));\n\n  public readonly setLoading = this.updater((state, loading: boolean) => ({\n    ...state,\n    loading,\n  }));\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScriptLoaderInitScripts.html":{"url":"interfaces/ScriptLoaderInitScripts.html","title":"interface - ScriptLoaderInitScripts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScriptLoaderInitScripts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/script-loader/src/lib/script-loader-init-scripts.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            scripts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        scripts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scripts:         ScriptParams[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ScriptParams[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ScriptParams } from './script-params';\n\nexport interface ScriptLoaderInitScripts {\n  scripts: ScriptParams[];\n}\nexport const SCRIPT_LOADER_INIT_SCRIPTS =\n  new InjectionToken('SCRIPT_LOADER_INIT_SCRIPTS');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScriptLoaderModule.html":{"url":"modules/ScriptLoaderModule.html","title":"module - ScriptLoaderModule","body":"\n                   \n\n\n\n\n    Modules\n    ScriptLoaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ScriptLoaderModule\n\n\n\ncluster_ScriptLoaderModule_providers\n\n\n\n\nScriptLoaderService\n\nScriptLoaderService\n\n\n\nScriptLoaderModule\n\nScriptLoaderModule\n\nScriptLoaderModule -->\n\nScriptLoaderService->ScriptLoaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/script-loader/src/lib/script-loader.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ScriptLoaderService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(params?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/script-loader/src/lib/script-loader.module.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ScriptLoaderService } from './script-loader.service';\nimport { ScriptParams } from './script-params';\nimport { SCRIPT_LOADER_INIT_SCRIPTS } from './script-loader-init-scripts';\nimport { SCRIPT_LOADER_LOADED } from './script-loader-loaded';\nimport { ReplaySubject } from 'rxjs';\n\n@NgModule({\n  providers: [\n    ScriptLoaderService,\n    {\n      provide: SCRIPT_LOADER_LOADED,\n      useValue: new ReplaySubject(1),\n    },\n  ],\n})\nexport class ScriptLoaderModule {\n  // **note** this is injected so the script loader service is setup, but handles everything internally\n  constructor(private scriptLoaderService: ScriptLoaderService) {}\n  public static forRoot(params?: {\n    /**\n     * Scripts to load automatically.\n     */\n    scripts?: ScriptParams[];\n  }): ModuleWithProviders {\n    return {\n      ngModule: ScriptLoaderModule,\n      providers: [\n        ScriptLoaderService,\n        // setup init scripts, if given\n        params && params.scripts\n          ? {\n              provide: SCRIPT_LOADER_INIT_SCRIPTS,\n              useValue: {\n                scripts: params.scripts,\n              },\n            }\n          : [],\n        // loaded event emitter, if there is one\n        {\n          provide: SCRIPT_LOADER_LOADED,\n          useValue: new ReplaySubject(1),\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScriptLoaderService.html":{"url":"injectables/ScriptLoaderService.html","title":"injectable - ScriptLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ScriptLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/script-loader/src/lib/script-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                scriptsLoaded$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                load\n                            \n                            \n                                    Public\n                                    Async\n                                loadScripts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document, scriptLoaderLoaded: ReplaySubject, initScripts: ScriptLoaderInitScripts)\n                    \n                \n                        \n                            \n                                Defined in libs/script-loader/src/lib/script-loader.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scriptLoaderLoaded\n                                                  \n                                                        \n                                                                    ReplaySubject\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        initScripts\n                                                  \n                                                        \n                                                                        ScriptLoaderInitScripts\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                    \n                    load(script: ScriptParams)\n                \n            \n\n\n            \n                \n                    Defined in libs/script-loader/src/lib/script-loader.service.ts:57\n                \n            \n\n\n            \n                \n                    Loads the individual scripts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    script\n                                    \n                                                ScriptParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        loadScripts\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadScripts(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/script-loader/src/lib/script-loader.service.ts:42\n                \n            \n\n\n            \n                \n                    Loads the list of scripts.\nDoes not currently check to see if they are already loaded!\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        scriptsLoaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject\n  >([])\n                    \n                \n                    \n                        \n                                Defined in libs/script-loader/src/lib/script-loader.service.ts:16\n                        \n                    \n\n            \n                \n                    List of scripts already loaded\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { BehaviorSubject, ReplaySubject } from 'rxjs';\nimport {\n  ScriptLoaderInitScripts,\n  SCRIPT_LOADER_INIT_SCRIPTS,\n} from './script-loader-init-scripts';\nimport { SCRIPT_LOADER_LOADED } from './script-loader-loaded';\nimport { ScriptParams } from './script-params';\n\n@Injectable()\nexport class ScriptLoaderService {\n  /**\n   * List of scripts already loaded\n   */\n  public scriptsLoaded$ = new BehaviorSubject\n  >([]);\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n\n    @Inject(SCRIPT_LOADER_LOADED)\n    scriptLoaderLoaded: ReplaySubject,\n\n    @Inject(SCRIPT_LOADER_INIT_SCRIPTS)\n    @Optional()\n    initScripts: ScriptLoaderInitScripts\n  ) {\n    if (initScripts) {\n      this.loadScripts(initScripts).then(() => scriptLoaderLoaded.next(true));\n    } else {\n      scriptLoaderLoaded.next(true);\n    }\n  }\n  /**\n   * Loads the list of scripts.\n   * **Does not currently check to see if they are already loaded!**\n   */\n  public async loadScripts(params: {\n    /**\n     * The list of script sources\n     */\n    scripts: ScriptParams[];\n  }): Promise {\n    const { scripts } = params;\n    if (!scripts) {\n      return [];\n    }\n    return Promise.all(scripts.map((script) => this.load(script)));\n  }\n  /**\n   * Loads the individual scripts\n   */\n  private async load(script: ScriptParams): Promise {\n    const { src, async, preLoad, callback } = script;\n    const existingScriptLoaded = this.scriptsLoaded$.value.find(\n      (scriptsLoaded) => scriptsLoaded.src === src\n    );\n    if (existingScriptLoaded) {\n      // if the script is already loaded, skip it;\n      return existingScriptLoaded.element;\n    }\n    // otherwise, create and add it\n    const scriptElement = this.document.createElement('script');\n    this.scriptsLoaded$.next([\n      ...this.scriptsLoaded$.value,\n      {\n        element: scriptElement,\n        src,\n      },\n    ]);\n    if (typeof preLoad === 'function') {\n      preLoad();\n    }\n    scriptElement.setAttribute('src', src);\n    scriptElement.setAttribute('async', '' + async);\n    const head = this.document.getElementsByTagName('head')[0];\n    const promise = new Promise((resolve) => (scriptElement.onload = resolve));\n    head.appendChild(scriptElement);\n    return promise\n      .then(() => {\n        if (typeof callback === 'function') {\n          callback();\n        }\n        return;\n      })\n      .then(() => scriptElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScriptParams.html":{"url":"interfaces/ScriptParams.html","title":"interface - ScriptParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScriptParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/script-loader/src/lib/script-params.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            async\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            callback\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            preLoad\n                                        \n                                \n                                \n                                        \n                                            src\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        async\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        async:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Function to call after the script is loaded\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preLoad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preLoad:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Function to call BEFORE\nthe script is loaded\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ScriptParams {\n  src: string;\n  async?: boolean;\n  /**\n   * Function to call BEFORE\n   * the script is loaded\n   */\n  preLoad?: () => void;\n  /**\n   * Function to call after the script is loaded\n   */\n  callback?: () => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/internal-ng-e2e/src/support/app.po.ts\n            \n            variable\n            getGreeting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/internal-ng/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/internal-ng/src/app/core/main/main.component.ts\n            \n            component\n            MainComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/internal-ng/src/app/modules/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/internal-ng/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/internal-ng/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/build-config/build-config-config.ts\n            \n            interface\n            BuildConfigWithoutPathConfig\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/build-config/build-config-config.ts\n            \n            interface\n            BuildConfigWithPathConfig\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/build-config/build-config-config.ts\n            \n            variable\n            BUILD_CONFIG_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/build-config/build-config-config.ts\n            \n            variable\n            isBuildConfigWithoutPathConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/build-config/build-config-config.ts\n            \n            variable\n            isBuildConfigWithPathConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/build-config/build-config.service.ts\n            \n            injectable\n            BuildConfigService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/build-config/build-config.ts\n            \n            interface\n            BuildConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/build-config/build-config.ts\n            \n            variable\n            BUILD_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/can-deactivate/can-deactivate.guard.ts\n            \n            guard\n            CanDeactivateGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/can-deactivate/deactivatable-component.ts\n            \n            interface\n            DeactivatableComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/error-handler/error-handler.service.ts\n            \n            injectable\n            ErrorHandlerService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/http-loading/http-loading.interceptor.ts\n            \n            interceptor\n            HttpLoadingInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/http-loading/http-loading.state.service.ts\n            \n            injectable\n            HttpLoadingStateService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/http-loading/http-loading.state.ts\n            \n            interface\n            HttpLoadingState\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/logger/global-error-handler.ts\n            \n            injectable\n            GlobalErrorHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/logger/ng-logger-config.ts\n            \n            variable\n            NG_LOGGER_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/logger/ng-logger.service.ts\n            \n            injectable\n            NgLoggerService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/nav/common-ng-router-options.ts\n            \n            variable\n            COMMON_NG_ROUTER_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/nav/get-final-child.ts\n            \n            variable\n            getFinalChild\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/route-loading/route-loading.state.service.ts\n            \n            injectable\n            RouteLoadingStateService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/route-loading/route-loading.state.ts\n            \n            interface\n            RouteLoadingState\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/rxjs/retry-with-backoff.ts\n            \n            function\n            retryWithBackOff\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common-ngrx/src/lib/entity/entity-action-factory.ts\n            \n            variable\n            entityActionFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common-ngrx/src/lib/models/entity-type-params.ts\n            \n            interface\n            EntityTypeParams\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                libs/common-ngrx/src/lib/util/http-action-factory.ts\n            \n            variable\n            httpActionFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common-ngrx/src/lib/util/http-action-type-params.ts\n            \n            interface\n            HttpActionTypeParams\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                libs/common/src/lib/models/date-document.ts\n            \n            interface\n            DateDocument\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/common/src/lib/models/id-document.ts\n            \n            interface\n            DocumentWithId\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/lib/models/id-document.ts\n            \n            variable\n            DocumentId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/lib/models/id-document.ts\n            \n            variable\n            isDocumentWithId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common/src/lib/utils/common-logger/common-logger-config.ts\n            \n            interface\n            CommonLoggerConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/common/src/lib/utils/common-logger/common-logger.ts\n            \n            class\n            CommonLogger\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                libs/common/src/lib/utils/get-id.ts\n            \n            variable\n            getId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common/src/lib/utils/is-indexable-value.ts\n            \n            variable\n            isIndexableValue\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common/src/lib/utils/remove-duplicates.ts\n            \n            variable\n            removeDuplicates\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common/src/lib/utils/to-map.ts\n            \n            variable\n            toMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/gh-codespaces/src/lib/util/get-codespace-name.ts\n            \n            variable\n            getCodespaceName\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/gh-codespaces/src/lib/util/is-codespace.ts\n            \n            variable\n            isCodespace\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/gh-codespaces/src/lib/util/normalize-codespace-root-path.ts\n            \n            variable\n            normalizeCodespaceRootPath\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/script-loader/src/lib/script-loader-init-scripts.ts\n            \n            interface\n            ScriptLoaderInitScripts\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/script-loader/src/lib/script-loader-init-scripts.ts\n            \n            variable\n            SCRIPT_LOADER_INIT_SCRIPTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/script-loader/src/lib/script-loader-loaded.ts\n            \n            variable\n            SCRIPT_LOADER_LOADED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/script-loader/src/lib/script-loader.service.ts\n            \n            injectable\n            ScriptLoaderService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                libs/script-loader/src/lib/script-params.ts\n            \n            interface\n            ScriptParams\n            \n                40 %\n                (2/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 13.1.2\n        \n            @angular/cdk : 13.1.2\n        \n            @angular/common : 13.1.2\n        \n            @angular/compiler : 13.1.2\n        \n            @angular/core : 13.1.2\n        \n            @angular/flex-layout : ^12.0.0-beta.35\n        \n            @angular/forms : 13.1.2\n        \n            @angular/material : 13.1.2\n        \n            @angular/platform-browser : 13.1.2\n        \n            @angular/platform-browser-dynamic : 13.1.2\n        \n            @angular/router : 13.1.2\n        \n            @ngrx/component : ^13.0.1\n        \n            @ngrx/component-store : ^13.0.2\n        \n            @ngrx/effects : ^13.0.1\n        \n            @ngrx/entity : ^13.0.1\n        \n            @ngrx/router-store : ^13.0.1\n        \n            @ngrx/store : ^13.0.1\n        \n            @ngrx/store-devtools : ^13.0.1\n        \n            rxjs : ~7.4.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            retryWithBackOff   (libs/.../retry-with-backoff.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/common-ng/src/lib/rxjs/retry-with-backoff.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        retryWithBackOff\n                        \n                    \n                \n            \n            \n                \nretryWithBackOff(params?)\n                \n            \n\n\n\n\n            \n                \n                    Taken from:\nhttps://medium.com/angular-in-depth/retry-failed-http-requests-in-angular-f5959d486294\nRetry with exponential back-off.\nDefaults\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNxWorkspaceTemplate\nThis is a template repository that can be used to jump start\ndevelopment on nx-workspace based projects.\nMost tooling can be used as-is, this repo only includes extra\nsupporting files for codespaces\ndevelopment, using github-actions, with example deployment pipelines\nfor firebase, GCP App Engine, github pages and digital-ocean app platform.\nLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 Brad\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BuildConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonNgrxModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgLoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScriptLoaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_exports\n\n\n\ncluster_MainModule\n\n\n\ncluster_MainModule_declarations\n\n\n\ncluster_MainModule_exports\n\n\n\ncluster_NgLoggerModule\n\n\n\ncluster_NgLoggerModule_providers\n\n\n\ncluster_ScriptLoaderModule\n\n\n\ncluster_ScriptLoaderModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nBuildConfigModule\n\nBuildConfigModule\n\nAppModule -->\n\nBuildConfigModule->AppModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nDashboardComponent \n\nDashboardComponent \n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\n\n\nMainModule\n\nMainModule\n\nAppModule -->\n\nMainModule->AppModule\n\n\n\n\n\nMainComponent \n\nMainComponent \n\nMainComponent  -->\n\nMainModule->MainComponent \n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nMainModule -->\n\nMainComponent->MainModule\n\n\n\n\n\nNgLoggerService\n\nNgLoggerService\n\n\n\nNgLoggerModule\n\nNgLoggerModule\n\nNgLoggerModule -->\n\nNgLoggerService->NgLoggerModule\n\n\n\n\n\nScriptLoaderService\n\nScriptLoaderService\n\n\n\nScriptLoaderModule\n\nScriptLoaderModule\n\nScriptLoaderModule -->\n\nScriptLoaderService->ScriptLoaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BuildConfigConfig   (libs/.../build-config-config.ts)\n                        \n                        \n                            DocumentId   (libs/.../id-document.ts)\n                        \n                        \n                            EntityActions   (libs/.../entity-actions.ts)\n                        \n                        \n                            LogLevels   (libs/.../common-logger-config.ts)\n                        \n                        \n                            NgLoggerConfig   (libs/.../ng-logger-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/common-ng/src/lib/build-config/build-config-config.ts\n    \n    \n        \n            \n                \n                    \n                    BuildConfigConfig\n                \n            \n            \n                \n                    The build-config configuration. Can be used to provide overrides of\nthe config file, and customize the actual build-config service behavior.\n\n                \n            \n            \n                \n                        BuildConfigWithPathConfig | BuildConfigWithoutPathConfig\n\n                \n            \n        \n    \n    libs/common/src/lib/models/id-document.ts\n    \n    \n        \n            \n                \n                    \n                    DocumentId\n                \n            \n            \n                \n                    Generic document-id. Used for generic testing and documents.\nYou shouldn't use this directly, instead use\nbranded types.\nThis is also a TS-level feature\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/common-ngrx/src/lib/entity/entity-actions.ts\n    \n    \n        \n            \n                \n                    \n                    EntityActions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    libs/common/src/lib/utils/common-logger/common-logger-config.ts\n    \n    \n        \n            \n                \n                    \n                    LogLevels\n                \n            \n            \n                \n                        \"log\" | \"debug\" | \"warn\" | \"error\"\n\n                \n            \n        \n    \n    libs/common-ng/src/lib/logger/ng-logger-config.ts\n    \n    \n        \n            \n                \n                    \n                    NgLoggerConfig\n                \n            \n            \n                \n                            CommonLoggerConfig\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BUILD_CONFIG   (libs/.../build-config.ts)\n                        \n                        \n                            BUILD_CONFIG_CONFIG   (libs/.../build-config-config.ts)\n                        \n                        \n                            COMMON_NG_ROUTER_OPTIONS   (libs/.../common-ng-router-options.ts)\n                        \n                        \n                            DocumentId   (libs/.../id-document.ts)\n                        \n                        \n                            entityActionFactory   (libs/.../entity-action-factory.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            getCodespaceName   (libs/.../get-codespace-name.ts)\n                        \n                        \n                            getFinalChild   (libs/.../get-final-child.ts)\n                        \n                        \n                            getGreeting   (apps/.../app.po.ts)\n                        \n                        \n                            getId   (libs/.../get-id.ts)\n                        \n                        \n                            httpActionFactory   (libs/.../http-action-factory.ts)\n                        \n                        \n                            isBuildConfigWithoutPathConfig   (libs/.../build-config-config.ts)\n                        \n                        \n                            isBuildConfigWithPathConfig   (libs/.../build-config-config.ts)\n                        \n                        \n                            isCodespace   (libs/.../is-codespace.ts)\n                        \n                        \n                            isDocumentWithId   (libs/.../id-document.ts)\n                        \n                        \n                            isIndexableValue   (libs/.../is-indexable-value.ts)\n                        \n                        \n                            NG_LOGGER_CONFIG   (libs/.../ng-logger-config.ts)\n                        \n                        \n                            normalizeCodespaceRootPath   (libs/.../normalize-codespace-root-path.ts)\n                        \n                        \n                            removeDuplicates   (libs/.../remove-duplicates.ts)\n                        \n                        \n                            SCRIPT_LOADER_INIT_SCRIPTS   (libs/.../script-loader-init-scripts.ts)\n                        \n                        \n                            SCRIPT_LOADER_LOADED   (libs/.../script-loader-loaded.ts)\n                        \n                        \n                            toMap   (libs/.../to-map.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/common-ng/src/lib/build-config/build-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BUILD_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('NG_CONFIG')\n                    \n                \n\n\n        \n    \n\n    libs/common-ng/src/lib/build-config/build-config-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BUILD_CONFIG_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'BUILD_CONFIG_CONFIG'\n)\n                    \n                \n\n            \n                \n                    Token that represents the configuration of the \"build-config\" service.\nUsed to override the build config, and specify the path to the build config file.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBuildConfigWithoutPathConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  config: BuildConfigConfig\n): config is BuildConfigWithoutPathConfig =>\n  !!(config as BuildConfigWithoutPathConfig).overrides &&\n  typeof (config as BuildConfigWithoutPathConfig).overrides === 'object'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBuildConfigWithPathConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  config: BuildConfigConfig\n): config is BuildConfigWithPathConfig =>\n  !!(config as BuildConfigWithPathConfig).path &&\n  typeof (config as BuildConfigWithPathConfig).path === 'string'\n                    \n                \n\n\n        \n    \n\n    libs/common-ng/src/lib/nav/common-ng-router-options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        COMMON_NG_ROUTER_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExtraOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  paramsInheritanceStrategy: 'always',\n}\n                    \n                \n\n            \n                \n                    Common settings that should be activated for all Angular projects.\n\n                \n            \n\n        \n    \n\n    libs/common/src/lib/models/id-document.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DocumentId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (documentId: string): T =>\n  documentId as T\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDocumentWithId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  doc: DocumentWithId | unknown\n): doc is DocumentWithId =>\n  typeof doc === 'object' &&\n  doc !== null &&\n  (doc as DocumentWithId).id !== undefined\n                    \n                \n\n            \n                \n                    Is a document with an id\n\n                \n            \n\n        \n    \n\n    libs/common-ngrx/src/lib/entity/entity-action-factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        entityActionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  prefix: TypeParams['prefix']\n): EntityActions => ({\n  get: createAction(\n    `[${prefix}] Get`,\n    props()\n  ),\n  getSuccess: createAction(\n    `[${prefix}] Get Success`,\n    props()\n  ),\n  getFailed: createAction(\n    `[${prefix}] Get Failed`,\n    props()\n  ),\n  getCancel: createAction(`[${prefix}] Get Cancel`),\n\n  create: createAction(\n    `[${prefix}] Create`,\n    props;\n    }>()\n  ),\n  createSuccess: createAction(\n    `[${prefix}] Create Success`,\n    props()\n  ),\n  createFailed: createAction(\n    `[${prefix}] Create Failed`,\n    props()\n  ),\n  createCancel: createAction(`[${prefix}] Create Cancel`),\n\n  update: createAction(\n    `[${prefix}] Update`,\n    props()\n  ),\n  updateSuccess: createAction(\n    `[${prefix}] Update Success`,\n    props()\n  ),\n  updateFailed: createAction(\n    `[${prefix}] Update Failed`,\n    props()\n  ),\n  updateCancel: createAction(`[${prefix}] Update Cancel`),\n\n  delete: createAction(\n    `[${prefix}] Delete`,\n    props()\n  ),\n  deleteSuccess: createAction(\n    `[${prefix}] Delete Success`,\n    props()\n  ),\n  deleteFailed: createAction(\n    `[${prefix}] Delete Failed`,\n    props()\n  ),\n  deleteCancel: createAction(`[${prefix}] Delete Cancel`),\n  // TODO: add bulk actions\n})\n                    \n                \n\n            \n                \n                    Returns a list of common actions for an entity.\n\n                \n            \n\n        \n    \n\n    apps/internal-ng/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n}\n                    \n                \n\n\n        \n    \n\n    apps/internal-ng/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n}\n                    \n                \n\n\n        \n    \n\n    libs/gh-codespaces/src/lib/util/get-codespace-name.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCodespaceName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (env: Record): string =>\n  env.CODESPACE_NAME\n                    \n                \n\n            \n                \n                    Returns the codespace name from the env, should be passed\nthe process.env from nodejs.\n\n                \n            \n\n        \n    \n\n    libs/common-ng/src/lib/nav/get-final-child.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getFinalChild\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (root: ActivatedRoute) => {\n  let child = root;\n  while (child.firstChild) child = child.firstChild;\n  return child;\n}\n                    \n                \n\n            \n                \n                    Function that can be used to get the \"final child\" in the route.\nCan be mixed with the ExtraOptions's paramsInheritanceStrategy \"always\"\nsetting passed to the RouterModule.\nCommon settings are available via COMMON_NG_ROUTER_OPTIONS\n\n                \n            \n\n        \n    \n\n    apps/internal-ng-e2e/src/support/app.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getGreeting\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('h1')\n                    \n                \n\n\n        \n    \n\n    libs/common/src/lib/utils/get-id.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  id: string | DocumentId | DocumentWithId\n): T | '' => {\n  if (!id) {\n    return '';\n  }\n  if (typeof id === 'string') {\n    return DocumentId(id);\n  }\n  if (isDocumentWithId(id)) {\n    return DocumentId(id.id);\n  }\n  return '';\n}\n                    \n                \n\n            \n                \n                    Utility function to get id information\nnote assumes the id of the document is\n\n                \n            \n\n        \n    \n\n    libs/common-ngrx/src/lib/util/http-action-factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpActionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ({\n  prefix,\n  action,\n}: {\n  prefix: TypeParams['prefix'];\n  action: Action;\n}): [\n  FunctionWithParametersType &\n    TypedAction,\n  FunctionWithParametersType &\n    TypedAction,\n  FunctionWithParametersType &\n    TypedAction,\n  FunctionWithParametersType &\n    TypedAction\n] => [\n  createAction(`[${prefix}] ${action} Request`, props()),\n  createAction(`[${prefix}] ${action} Success`, props()),\n  createAction(`[${prefix}] ${action} Failed`, props()),\n  createAction(`[${prefix}] ${action} Cancel`, props()),\n]\n                    \n                \n\n            \n                \n                    Function that that returns 4 actions.\n\n\"request\" action\n\"success\" action\n\"Failed\" action\n\"cancel\" action\n\nThese 4 can be used to create other ngrx actions flows, and aren't only\nisolated to just HTTP requests.\n\n                \n            \n\n        \n    \n\n    libs/gh-codespaces/src/lib/util/is-codespace.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isCodespace\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (env: Record) =>\n  env.CODESPACES === 'true'\n                    \n                \n\n            \n                \n                    Returns if we are in a codespace from the env, which\nshould be passed the poccess.env, as we look if\nthere is an environment variable of CODESPACES=true\n\n                \n            \n\n        \n    \n\n    libs/common/src/lib/utils/is-indexable-value.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isIndexableValue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  value: unknown\n): value is string | symbol | number =>\n  typeof value === 'string' ||\n  typeof value === 'symbol' ||\n  typeof value === 'number'\n                    \n                \n\n            \n                \n                    Type-guard that can be used on individual entities, to verify\nthey can be a \"key\" in a Record<> type.\n\n                \n            \n\n        \n    \n\n    libs/common-ng/src/lib/logger/ng-logger-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NG_LOGGER_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'NG_LOGGER_CONFIG'\n)\n                    \n                \n\n\n        \n    \n\n    libs/gh-codespaces/src/lib/util/normalize-codespace-root-path.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        normalizeCodespaceRootPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ({\n  codespaceName,\n  port,\n}: {\n  /**\n   * The name of the codespace, available from the environment variables\n   * in a codespace via `CODESPACE_NAME`\n   */\n  codespaceName: string;\n  /**\n   * The port number we are to append to the end of the codespaceURL.\n   */\n  port: number | string;\n}) => `https://${codespaceName}-${port}.githubpreview.dev/`\n                    \n                \n\n            \n                \n                    Returns the normalized codespace path, from the given params.\nGenerally used on the back-end for oauth redirects, will require\nwork with the console documentation for supported domains.\nnote still a WIP and needs testing to see if this is a viable\napproach to support oauth redirects in a codespace.\n\n                \n            \n\n        \n    \n\n    libs/common/src/lib/utils/remove-duplicates.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        removeDuplicates\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (arr: Array): Array => {\n  if (!arr) {\n    return [];\n  }\n  return Array.from(arr.reduce((acc, el) => acc.add(el), new Set()));\n}\n                    \n                \n\n            \n                \n                    Removes duplicates using a set\n\n                \n            \n\n        \n    \n\n    libs/script-loader/src/lib/script-loader-init-scripts.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SCRIPT_LOADER_INIT_SCRIPTS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('SCRIPT_LOADER_INIT_SCRIPTS')\n                    \n                \n\n\n        \n    \n\n    libs/script-loader/src/lib/script-loader-loaded.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SCRIPT_LOADER_LOADED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>(\n  'SCRIPT_LOADER_LOADED'\n)\n                    \n                \n\n            \n                \n                    Injection token of the observable fired when init scripts are loaded\n\n                \n            \n\n        \n    \n\n    libs/common/src/lib/utils/to-map.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toMap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ,\n  Key extends keyof Entity,\n  TypeOfKey extends string\n>(\n  entities: Entity[],\n  key?: Key\n): Record => {\n  type RecordKey = (Entity[Key] & string) | symbol | number;\n  if (!entities) return {} as Record;\n\n  return entities.reduce((acc, entity) => {\n    const keyValue = entity[key || 'id'];\n    if (isIndexableValue(keyValue)) acc[keyValue as RecordKey] = entity;\n    return acc;\n  }, {} as Record);\n}\n                    \n                \n\n            \n                \n                    Generic map function used to convert an array to\na map with the given key. All ids are automatically converted to ids\nin the return mapping\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
