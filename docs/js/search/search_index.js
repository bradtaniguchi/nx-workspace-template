var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/BuildConfig.html",[0,0.241,1,1.769]],["body/interfaces/BuildConfig.html",[0,0.226,1,2.301,2,0.88,3,0.297,4,0.297,5,0.193,6,0.455,7,1.397,8,1.397,9,1.518,10,1.397,11,0.537,12,2.526,13,4.273,14,2.977,15,4.273,16,3.586,17,2.857,18,2.223,19,4.273,20,3.586,21,3.586,22,2.618,23,3.586,24,3.586,25,3.586,26,4.273,27,4.273,28,4.273,29,2.526,30,4.273,31,4.273,32,4.273,33,2.526,34,3.134,35,0.297,36,0.895,37,5.304,38,4.451,39,5.304,40,2.782,41,0.029,42,5.304,43,3.134,44,3.586,45,2.301,46,4.273,47,3.586,48,4.273,49,4.273,50,4.273,51,4.273,52,0.593,53,1.819,54,0.698,55,0.412,56,1.518,57,2.256,58,1.29,59,2.582,60,0.014,61,0.019,62,0.014]],["title/modules/BuildConfigModule.html",[63,2.149,64,2.409]],["body/modules/BuildConfigModule.html",[3,0.35,4,0.35,5,0.227,6,0.707,7,2.17,8,2.17,11,0.35,14,2.637,22,1.792,41,0.03,52,1.095,54,0.824,55,0.35,60,0.016,61,0.021,62,0.016,64,3.918,65,1.792,66,3.63,67,1.303,68,3.505,69,3.505,70,3.046,71,3.058,72,0.962,73,3.63,74,3.505,75,4.011,76,2.287,77,2.359,78,1.208,79,1.12,80,0.7,81,1.303,82,3.918,83,3.496,84,4.779,85,2.662,86,3.127,87,3.63,88,2.574,89,2.662,90,0.891,91,1.303,92,2.662,93,2.662]],["title/injectables/BuildConfigService.html",[86,2.149,94,0.871]],["body/injectables/BuildConfigService.html",[0,0.287,1,2.701,3,0.262,4,0.262,5,0.287,6,0.678,7,2.082,8,2.082,10,1.232,11,0.262,14,2.883,35,0.262,36,0.819,41,0.03,44,3.281,52,1.068,54,0.616,55,0.262,58,1.639,60,0.012,61,0.017,62,0.012,71,2.701,72,1.037,76,2.396,78,0.903,79,0.837,80,0.523,85,1.99,86,2.558,88,1.461,90,0.666,91,1.801,94,1.33,95,1.339,96,2.277,97,3.91,98,3.91,99,3.91,100,2.709,101,3.91,102,3.91,103,1.776,104,2.624,105,3.91,106,1.776,107,2.713,108,5.015,109,2.713,110,2.106,111,1.461,112,3.91,113,3.91,114,3.91,115,3.91,116,3.91,117,3.281,118,3.91,119,2.311,120,3.91,121,3.91,122,3.91,123,1.776,124,3.91,125,1.93,126,3.91,127,2.713,128,3.91,129,3.91,130,3.91,131,3.281,132,1.99,133,2.713,134,1.232,135,1.604,136,1.604,137,2.867,138,2.311,139,2.713]],["title/interfaces/BuildConfigWithPathConfig.html",[0,0.241,140,1.769]],["body/interfaces/BuildConfigWithPathConfig.html",[0,0.298,1,2.184,2,0.817,3,0.275,4,0.275,5,0.363,6,0.422,7,1.297,8,1.297,9,1.409,11,0.454,12,1.688,14,2.78,18,1.7,22,1.409,35,0.275,36,0.849,40,2.331,41,0.03,52,0.782,53,2.397,54,0.648,55,0.543,56,2.327,58,1.197,60,0.013,61,0.018,62,0.013,71,2.539,72,0.757,76,2.486,77,2.001,80,0.782,88,2.184,125,2.001,135,1.688,136,1.688,140,2.764,141,4.417,142,4.417,143,3.957,144,3.458,145,3.458,146,3.403,147,3.957,148,2.397,149,2.184,150,2.094,151,2.094,152,2.094,153,2.094,154,2.094,155,2.539,156,2.396,157,2.973,158,2.184,159,2.973,160,1.297]],["title/interfaces/BuildConfigWithoutPathConfig.html",[0,0.241,155,1.769]],["body/interfaces/BuildConfigWithoutPathConfig.html",[0,0.305,1,2.805,2,0.844,3,0.284,4,0.284,5,0.344,6,0.436,7,1.34,8,1.34,9,1.456,11,0.4,12,1.744,14,2.809,18,1.739,22,1.456,35,0.284,36,0.869,40,1.885,41,0.03,52,0.8,53,2.453,54,0.67,55,0.549,56,2.369,58,1.237,60,0.013,61,0.018,62,0.013,71,2.585,72,1.1,76,2.497,77,2.048,80,0.8,88,2.235,125,2.048,135,1.744,136,1.744,140,2.585,141,4.45,142,3.819,143,2.476,144,3.52,145,3.043,146,2.476,147,4.028,148,1.744,149,1.589,150,2.164,151,2.164,152,2.164,153,2.164,154,2.164,155,2.805,156,3.482,157,3.043,158,2.235,159,3.043,160,1.34]],["title/guards/CanDeactivateGuard.html",[161,1.941,162,2.409]],["body/guards/CanDeactivateGuard.html",[3,0.289,4,0.289,5,0.188,6,0.716,11,0.289,35,0.289,41,0.03,52,1.012,54,0.68,55,0.289,60,0.013,61,0.018,62,0.013,67,1.506,72,1.112,78,1.396,79,1.295,80,0.809,81,1.883,90,0.735,91,1.883,94,1.112,103,1.361,119,2.861,134,1.361,137,3.55,158,2.259,160,1.361,162,3.076,163,2.996,164,3.55,165,4.062,166,2.515,167,4.929,168,4.84,169,2.996,170,3.743,171,2.996,172,5.358,173,4.195,174,4.195,175,3.52,176,3.076,177,4.195,178,3.076,179,3.167,180,3.076,181,2.07,182,2.996,183,2.996,184,2.197,185,2.996,186,1.771,187,2.197,188,2.259,189,4.195,190,1.614,191,2.996,192,2.996]],["title/classes/CommonLogger.html",[90,0.806,193,2.149]],["body/classes/CommonLogger.html",[3,0.234,4,0.234,5,0.152,10,1.637,11,0.513,17,1.941,18,1.51,20,3.024,23,3.024,24,3.024,29,2.13,35,0.234,36,0.755,41,0.03,52,0.468,55,0.234,60,0.011,61,0.016,62,0.011,67,1.708,72,1.533,76,2.195,78,1.691,79,1.568,80,1.063,81,1.824,90,0.596,91,1.824,104,2.121,106,1.102,123,1.637,125,2.121,160,2.308,188,3.049,193,2.358,194,2.037,195,3.704,196,3.704,197,2.037,198,3.603,199,3.603,200,1.952,201,2.358,202,2.358,203,3.603,204,4.264,205,2.037,206,2.736,207,2.427,208,3.324,209,2.427,210,3.024,211,4.588,212,2.427,213,3.488,214,3.347,215,3.024,216,2.427,217,3.024,218,2.427,219,3.024,220,2.427,221,2.427,222,2.427,223,2.358,224,2.643,225,1.78,226,2.427,227,2.427,228,2.427,229,2.427,230,2.427,231,2.427,232,2.427,233,2.427,234,2.427,235,2.427,236,2.427]],["title/interfaces/CommonLoggerConfig.html",[0,0.241,206,1.769]],["body/interfaces/CommonLoggerConfig.html",[0,0.248,2,0.965,3,0.325,4,0.325,5,0.211,9,1.665,10,1.533,11,0.497,29,1.995,35,0.325,36,0.953,40,1.533,41,0.03,47,3.82,55,0.325,60,0.015,61,0.02,62,0.015,67,1.634,80,1.111,123,1.533,125,2.247,148,2.691,160,2.067,188,1.817,190,2.97,195,2.208,196,2.208,200,2.615,201,2.208,202,2.208,204,4.978,206,2.452,211,2.475,213,3.338,214,1.995,223,2.978,224,4.044,225,4.044,237,5.514,238,3.338,239,4.552,240,3.82,241,4.552,242,4.552,243,3.82,244,2.247,245,3.82,246,3.374,247,2.475]],["title/modules/CommonNgrxModule.html",[63,2.149,248,2.409]],["body/modules/CommonNgrxModule.html",[3,0.451,4,0.451,5,0.293,6,0.692,41,0.029,52,1.081,54,1.062,55,0.451,60,0.021,61,0.025,62,0.021,65,2.309,83,3.668,89,3.431,90,1.148,248,4.111,249,4.678,250,4.678,251,4.705,252,3.061]],["title/interfaces/DateDocument.html",[0,0.241,253,2.409]],["body/interfaces/DateDocument.html",[0,0.308,2,1.197,3,0.403,4,0.403,5,0.262,10,1.901,11,0.505,12,2.474,35,0.403,36,1.254,38,5.414,41,0.028,55,0.403,60,0.018,61,0.023,62,0.018,80,1.01,138,2.474,160,1.901,247,3.069,253,3.84,254,3.512,255,2.474,256,2.254,257,4.184,258,6.165,259,6.165,260,4.184,261,4.184,262,4.184,263,4.184,264,5.236]],["title/interfaces/DeactivatableComponent.html",[0,0.241,170,2.149]],["body/interfaces/DeactivatableComponent.html",[0,0.276,2,1.076,3,0.363,4,0.363,5,0.236,6,0.723,10,1.708,35,0.363,41,0.029,52,0.725,55,0.363,60,0.017,61,0.022,62,0.017,67,1.756,72,0.997,81,1.35,91,1.756,111,2.634,119,2.891,134,1.708,161,2.891,164,3.587,167,5.133,170,3.2,172,4.104,175,4.83,176,4.221,179,3.556,180,3.587,181,2.414,194,4.104,265,4.104,266,3.156,267,3.587,268,4.104,269,4.89,270,5.755,271,3.76,272,4.89]],["title/interfaces/DocumentWithId.html",[0,0.241,273,1.941]],["body/interfaces/DocumentWithId.html",[0,0.285,2,1.109,3,0.373,4,0.373,5,0.243,11,0.481,35,0.373,36,1.044,40,2.265,41,0.03,55,0.561,56,2.461,60,0.017,61,0.022,62,0.017,138,2.29,158,2.087,160,1.76,188,2.087,255,2.29,256,2.087,273,3.441,274,2.535,275,3.941,276,5.054,277,3.809,278,3.874,279,3.874,280,3.252,281,2.841,282,4.417,283,2.841,284,3.252,285,3.252]],["title/interfaces/EntityTypeParams.html",[0,0.241,286,2.409]],["body/interfaces/EntityTypeParams.html",[0,0.25,2,0.974,3,0.328,4,0.328,5,0.213,6,0.503,10,1.546,11,0.62,18,1.919,34,2.497,35,0.328,36,0.959,40,2.08,41,0.03,52,0.657,55,0.328,60,0.015,61,0.02,62,0.015,238,3.358,244,2.26,247,3.358,256,2.98,273,2.012,275,3.385,282,4.457,286,3.358,287,2.857,288,2.227,289,4.579,290,3.843,291,4.579,292,4.579,293,4.579,294,4.579,295,4.579,296,4.579,297,6.178,298,5.253,299,4.579,300,2.227,301,2.227,302,2.497]],["title/injectables/GlobalErrorHandler.html",[94,0.871,303,2.409]],["body/injectables/GlobalErrorHandler.html",[3,0.381,4,0.381,5,0.248,6,0.823,11,0.381,35,0.381,41,0.029,52,0.975,54,0.897,55,0.381,60,0.017,61,0.022,62,0.017,67,1.814,72,1.339,78,1.681,79,1.559,80,0.975,81,1.42,90,0.971,94,1.339,95,1.952,106,1.796,123,2.528,187,2.9,188,2.13,200,2.294,214,2.338,303,3.705,304,4.672,305,3.319,306,5.052,307,3.954,308,3.159,309,3.954,310,5.052,311,3.954,312,3.954,313,5.052,314,2.587,315,3.954]],["title/interfaces/HttpActionTypeParams.html",[0,0.241,316,2.409]],["body/interfaces/HttpActionTypeParams.html",[0,0.291,2,1.131,3,0.381,4,0.381,5,0.248,6,0.585,10,1.796,11,0.598,18,1.658,35,0.381,36,1.058,41,0.028,55,0.381,60,0.017,61,0.022,62,0.017,176,2.9,267,2.9,288,2.587,316,3.705,317,2.9,318,3.305,319,3.954,320,3.954,321,4.24,322,3.954,323,3.954,324,2.9,325,3.954,326,3.954,327,3.954,328,3.954,329,4.923,330,5.865,331,3.467,332,4.923,333,5.566,334,5.566,335,5.566,336,5.566]],["title/interceptors/HttpLoadingInterceptor.html",[337,2.756,338,2.409]],["body/interceptors/HttpLoadingInterceptor.html",[3,0.322,4,0.322,5,0.209,6,0.757,11,0.435,35,0.322,41,0.03,52,1.106,54,0.757,55,0.322,60,0.015,61,0.02,62,0.015,67,1.622,72,1.197,78,1.503,79,1.394,80,0.871,81,1.198,85,2.446,90,0.819,91,1.198,94,1.197,103,1.515,106,1.515,110,1.796,123,1.515,134,1.515,179,3.35,186,1.972,187,2.446,314,2.182,331,2.67,338,3.312,339,3.335,340,3.35,341,3.35,342,2.799,343,5.12,344,3.335,345,3.591,346,3.335,347,2.67,348,3.335,349,5.488,350,5.488,351,5.488,352,3.335,353,3.335,354,4.516,355,4.516,356,4.516,357,3.335,358,3.335,359,3.335,360,2.955,361,2.799,362,3.335,363,4.516,364,3.335]],["title/interfaces/HttpLoadingState.html",[0,0.241,347,1.941]],["body/interfaces/HttpLoadingState.html",[0,0.299,2,1.163,3,0.392,4,0.392,5,0.255,6,0.601,11,0.496,35,0.392,36,1.077,41,0.029,55,0.392,60,0.018,61,0.023,62,0.018,80,1.143,110,2.769,181,3.081,331,3.04,340,2.661,341,2.661,347,3.04,365,2.982,366,3.877,367,4.197,368,4.315,369,3.771,370,4.315,371,3.771,372,3.364]],["title/injectables/HttpLoadingStateService.html",[94,0.871,345,2.149]],["body/injectables/HttpLoadingStateService.html",[3,0.289,4,0.289,5,0.188,6,0.816,33,2.48,35,0.289,36,0.879,41,0.03,52,0.934,54,0.68,55,0.289,60,0.013,61,0.018,62,0.013,72,1.39,90,0.735,94,1.112,95,1.479,100,2.861,103,1.361,104,3.006,106,2.198,110,2.607,111,2.607,138,3.6,181,2.588,186,1.771,331,2.48,340,3.612,341,3.612,345,2.745,347,1.771,366,3.431,367,3.984,372,2.745,373,2.197,374,4.062,375,4.062,376,4.062,377,2.996,378,3.52,379,4.195,380,3.52,381,2.996,382,4.401,383,4.401,384,2.515,385,2.996,386,2.197,387,2.197,388,2.515,389,2.515]],["title/modules/NgLoggerModule.html",[63,2.149,390,2.149]],["body/modules/NgLoggerModule.html",[3,0.323,4,0.323,5,0.21,6,0.67,11,0.323,22,1.656,41,0.03,45,2.442,52,1.108,54,0.761,55,0.323,60,0.015,61,0.02,62,0.015,65,1.656,67,1.205,68,3.325,69,3.325,70,2.815,72,0.889,74,3.325,75,3.805,76,2.133,77,2.238,78,1.117,79,1.035,80,0.647,81,1.205,82,3.766,83,3.36,89,2.46,90,0.823,91,1.205,92,3.766,93,2.46,200,2.333,206,2.963,251,3.805,252,2.195,300,2.195,301,2.195,302,2.46,308,3.261,390,3.961,391,2.815,392,2.815,393,3.325,394,2.46,395,2.195,396,2.68,397,3.354,398,3.354,399,3.599,400,3.354,401,2.966]],["title/injectables/NgLoggerService.html",[94,0.871,308,1.769]],["body/injectables/NgLoggerService.html",[3,0.284,4,0.284,5,0.185,6,0.614,11,0.549,29,2.453,33,2.453,35,0.284,36,0.869,41,0.03,52,0.926,54,0.67,55,0.284,60,0.013,61,0.018,62,0.013,67,1.49,72,1.509,76,2.128,78,1.827,79,1.694,80,1.128,81,1.87,90,0.724,94,1.1,95,1.456,103,1.34,104,2.369,106,1.885,123,1.885,132,2.164,186,1.744,193,3.906,200,1.34,201,2.715,202,2.715,205,2.476,208,3.408,210,2.476,211,4.378,213,3.819,214,3.079,215,2.476,217,2.476,219,2.476,300,1.93,301,1.93,302,2.164,308,2.235,396,2.453,399,1.93,401,1.93,402,2.476,403,4.606,404,2.95,405,5.488,406,2.95,407,2.95,408,2.95,409,2.95,410,2.95,411,2.95,412,2.95,413,2.95,414,2.95]],["title/interfaces/RouteLoadingState.html",[0,0.241,415,2.149]],["body/interfaces/RouteLoadingState.html",[0,0.301,2,1.172,3,0.395,4,0.395,5,0.257,6,0.606,11,0.498,35,0.395,36,1.082,41,0.029,55,0.395,60,0.018,61,0.023,62,0.018,80,1.146,181,3.087,365,3.003,366,3.887,367,4.203,368,4.335,369,3.788,370,4.335,371,3.788,372,3.38,415,3.38,416,3.003,417,3.003,418,4.335]],["title/injectables/RouteLoadingStateService.html",[94,0.871,419,2.409]],["body/injectables/RouteLoadingStateService.html",[3,0.254,4,0.254,5,0.165,6,0.777,11,0.254,33,2.265,35,0.254,36,0.803,41,0.03,52,1.014,54,0.599,55,0.254,60,0.012,61,0.017,62,0.012,72,1.313,78,0.878,79,0.814,80,0.509,90,0.648,91,1.777,94,1.016,95,1.302,100,2.667,103,1.198,104,2.916,106,1.198,111,2.666,119,1.56,134,1.198,138,3.493,181,2.443,184,1.935,186,1.56,240,2.215,268,2.215,283,3.308,314,1.726,360,2.952,361,3.786,366,3.239,367,3.927,372,2.507,373,1.935,374,3.786,375,3.786,376,3.786,378,3.216,380,3.216,382,4.154,383,4.154,384,3.216,386,1.935,387,1.935,388,2.215,389,2.215,415,1.726,416,3.856,417,3.856,418,3.216,419,2.81,420,2.639,421,4.022,422,2.639,423,2.639,424,3.831,425,3.831,426,3.831,427,2.639,428,2.215,429,2.215,430,2.639,431,2.639,432,2.639,433,2.639,434,2.215,435,2.639,436,2.639,437,2.639,438,2.639]],["title/interfaces/ScriptLoaderInitScripts.html",[0,0.241,439,2.149]],["body/interfaces/ScriptLoaderInitScripts.html",[0,0.32,2,1.247,3,0.42,4,0.42,5,0.273,11,0.42,17,2.348,35,0.42,36,1.125,41,0.029,52,1.036,53,2.577,54,0.989,55,0.518,56,2.151,58,1.827,60,0.019,61,0.024,62,0.019,244,2.151,439,3.514,440,2.348,441,2.348,442,2.577,443,2.577,444,3.197,445,3.975,446,3.272,447,2.577,448,3.658]],["title/modules/ScriptLoaderModule.html",[63,2.149,449,2.149]],["body/modules/ScriptLoaderModule.html",[3,0.281,4,0.281,5,0.182,11,0.46,17,2.942,22,2.353,41,0.03,45,2.215,52,1.094,54,0.661,55,0.281,58,1.724,60,0.013,61,0.018,62,0.013,65,1.438,67,1.046,68,3.016,69,2.136,72,0.772,74,3.016,77,1.438,78,0.969,79,0.899,80,0.562,81,1.046,82,3.496,83,3.119,90,0.715,91,1.046,92,3.496,93,3.496,104,1.438,134,1.323,148,1.722,149,2.215,178,2.136,208,1.906,244,2.353,314,1.906,324,2.136,360,1.906,393,3.016,394,2.136,395,1.906,440,2.215,441,2.215,442,2.818,443,2.431,445,3.574,446,2.215,447,2.431,449,3.812,450,2.444,451,2.444,452,3.577,453,2.913,454,4.112,455,3.016,456,2.913,457,2.913,458,3.119,459,2.444,460,4.112,461,2.913,462,2.913,463,2.913,464,2.913,465,2.444,466,4.112,467,2.913,468,2.913]],["title/injectables/ScriptLoaderService.html",[94,0.871,452,1.941]],["body/injectables/ScriptLoaderService.html",[3,0.199,4,0.199,5,0.13,11,0.457,17,2.81,35,0.199,36,0.669,41,0.03,52,0.966,54,0.47,55,0.199,56,2.471,58,1.635,60,0.009,61,0.014,62,0.009,67,1.147,72,1.162,78,1.298,79,1.203,80,0.914,81,1.147,90,0.508,91,1.701,94,0.847,95,1.021,100,1.223,104,2.471,106,1.45,111,1.114,132,1.517,134,0.94,137,3.215,149,2.696,158,1.72,180,3.672,190,1.72,223,3.1,244,1.925,252,1.354,256,2.696,439,2.868,440,2.552,441,2.552,442,1.888,443,1.223,445,3.695,446,2.552,447,1.223,452,1.888,455,2.342,458,1.354,459,3.679,465,2.68,469,1.736,470,4.384,471,4.523,472,3.193,473,2.069,474,3.899,475,4.384,476,2.069,477,3.193,478,2.069,479,4.384,480,2.68,481,3.193,482,2.069,483,3.193,484,3.193,485,2.68,486,4.737,487,3.899,488,2.069,489,2.069,490,2.069,491,2.069,492,2.069,493,3.193,494,2.069,495,2.069,496,2.069,497,3.679,498,3.272,499,3.272,500,3.193,501,2.069,502,2.069,503,2.069,504,2.069,505,1.736,506,1.736,507,1.736,508,3.899,509,2.069,510,2.069,511,2.069,512,2.069,513,2.069,514,2.069,515,2.069,516,2.069,517,2.069,518,2.069,519,2.069,520,2.069]],["title/interfaces/ScriptParams.html",[0,0.241,446,1.769]],["body/interfaces/ScriptParams.html",[0,0.276,2,1.072,3,0.361,4,0.361,5,0.235,11,0.554,17,3.096,35,0.361,36,1.022,40,2.465,41,0.029,55,0.361,60,0.016,61,0.021,62,0.016,80,1.179,131,4.824,149,3.096,181,2.678,190,3.398,214,2.885,288,2.452,440,2.019,441,2.019,446,2.628,471,4.824,497,4.824,498,4.824,499,4.824,521,4.88]],["title/coverage.html",[522,3.751]],["body/coverage.html",[0,0.426,1,1.024,5,0.119,6,0.934,7,2.379,8,2.379,9,2.66,11,0.356,41,0.029,57,1.394,58,0.797,60,0.008,61,0.013,62,0.008,76,1.765,86,1.244,88,1.024,90,0.467,94,1.282,96,1.596,103,0.864,123,0.864,135,1.124,136,1.124,140,1.024,155,1.024,161,1.124,162,1.394,164,2.193,165,1.596,166,1.596,170,1.244,190,1.024,193,1.244,195,1.956,196,1.956,197,1.596,200,1.358,206,1.024,253,1.394,254,1.596,255,2.476,265,1.596,266,1.596,273,1.124,274,2.417,277,1.244,281,1.394,286,1.394,287,1.596,288,2.417,303,1.394,304,1.596,305,1.596,308,1.024,316,1.394,317,2.193,318,2.417,337,1.596,338,1.394,340,2.417,341,2.417,342,1.596,345,1.244,347,1.124,365,2.193,373,2.193,396,1.767,399,1.244,401,1.244,402,1.596,415,1.244,416,2.193,417,2.193,419,1.394,421,1.394,439,1.244,440,2.453,441,2.453,442,2.184,443,1.767,444,2.193,446,1.024,447,1.124,452,1.124,458,1.244,469,1.596,522,1.596,523,1.394,524,1.901,525,1.901,526,1.901,527,1.901,528,4.188,529,4.188,530,5.175,531,6.128,532,5.933,533,5.623,534,4.835,535,2.99,536,2.99,537,2.99,538,1.901,539,2.99,540,3.695,541,3.695,542,1.901,543,1.596,544,1.596,545,1.596,546,1.596,547,1.596,548,1.596,549,1.596,550,1.596,551,1.596,552,1.596,553,1.394,554,2.509,555,1.596,556,1.596,557,2.99,558,1.901,559,1.901,560,1.901,561,1.596,562,1.596,563,1.596,564,1.596,565,1.596,566,1.596,567,1.596,568,1.596,569,1.596,570,1.596,571,1.596,572,1.596,573,1.596,574,3.101,575,1.596,576,2.509,577,1.596,578,1.596,579,1.596,580,1.596,581,1.596,582,1.596,583,1.596,584,1.596,585,1.596,586,1.901,587,1.901,588,1.901,589,1.901,590,1.901,591,1.901]],["title/dependencies.html",[45,2.126,592,2.749]],["body/dependencies.html",[41,0.03,45,2.122,54,0.894,60,0.017,61,0.022,62,0.017,134,1.79,184,2.89,252,2.578,386,3.697,387,3.697,593,3.941,594,6.375,595,3.941,596,5.557,597,3.941,598,3.941,599,3.941,600,3.941,601,3.941,602,3.941,603,3.941,604,5.04,605,4.23,606,3.941,607,6.193,608,3.941,609,3.941,610,3.941,611,5.04,612,3.941,613,3.941,614,3.941,615,3.941,616,3.941,617,3.941]],["title/miscellaneous/functions.html",[618,1.481,619,3.312]],["body/miscellaneous/functions.html",[6,0.684,35,0.446,41,0.026,43,3.39,60,0.02,61,0.024,62,0.02,78,1.538,79,1.426,80,0.892,110,2.489,208,3.024,244,2.281,550,3.879,551,4.67,552,4.67,618,2.489,619,3.879,620,4.622,621,4.622,622,4.622,623,4.622,624,4.622,625,3.879,626,3.879,627,4.622,628,4.622,629,4.622,630,3.879,631,4.622]],["title/index.html",[35,0.265,632,2.307,633,2.307]],["body/index.html",[16,3.743,18,2.283,41,0.024,60,0.02,61,0.024,62,0.02,300,2.918,301,2.918,434,3.743,634,4.46,635,4.46,636,4.46,637,4.46,638,4.46,639,5.446,640,4.46,641,3.743,642,4.46,643,4.46,644,4.46,645,3.743,646,4.46,647,3.743,648,5.446,649,3.743,650,4.46,651,4.46,652,4.46,653,4.46,654,4.46,655,5.446,656,4.46,657,4.46,658,4.46,659,4.46,660,4.46,661,3.271,662,3.743]],["title/license.html",[632,2.307,633,2.307,661,2.016]],["body/license.html",[41,0.021,60,0.016,61,0.021,62,0.016,144,2.705,318,2.413,360,2.413,395,2.413,505,3.095,523,2.705,645,3.095,661,2.705,662,3.095,663,5.384,664,3.688,665,3.688,666,3.688,667,4.829,668,3.688,669,3.688,670,3.688,671,3.688,672,3.688,673,3.688,674,4.829,675,6.359,676,3.688,677,3.688,678,5.384,679,3.688,680,4.829,681,3.688,682,3.688,683,4.053,684,3.688,685,3.688,686,3.688,687,3.688,688,3.688,689,3.688,690,3.688,691,4.829,692,3.688,693,3.688,694,3.688,695,3.688,696,3.688,697,3.688,698,3.688,699,4.829,700,4.829,701,3.688,702,3.688,703,3.688,704,3.688,705,3.688,706,3.688,707,3.688,708,3.688,709,3.688,710,3.688,711,3.688,712,3.688,713,3.688,714,3.688,715,3.688,716,3.688,717,3.688,718,3.688,719,3.688,720,3.688,721,3.688,722,3.688,723,3.688,724,3.688,725,3.688,726,3.688]],["title/modules.html",[65,2.206]],["body/modules.html",[41,0.025,60,0.021,61,0.025,62,0.021,64,3.531,65,2.377,248,3.531,390,3.151,449,3.151,605,4.786,727,5.703,728,4.786,729,6.282,730,4.786,731,5.703]],["title/overview.html",[732,3.751]],["body/overview.html",[2,1.281,41,0.027,45,2.94,60,0.02,61,0.024,62,0.02,65,2.21,90,1.099,95,2.21,117,4.582,161,2.647,308,3.172,390,4.012,391,3.758,392,3.758,393,4.004,394,3.284,395,2.93,449,4.012,450,3.758,451,3.758,452,3.482,732,3.758,733,3.758,734,4.478,735,4.478]],["title/miscellaneous/typealiases.html",[618,1.481,736,3.946]],["body/miscellaneous/typealiases.html",[5,0.233,6,0.8,7,1.691,8,1.691,9,3.011,11,0.468,14,2.399,18,2.037,22,1.838,29,2.201,35,0.359,41,0.027,60,0.016,61,0.021,62,0.016,71,2.617,76,2.306,77,1.838,123,1.691,125,1.838,140,2.006,141,2.731,145,2.731,153,2.731,154,2.731,155,2.006,195,2.437,196,2.437,200,2.604,201,2.437,202,2.437,206,2.006,243,4.078,245,3.125,255,2.873,256,2.006,274,2.437,275,2.437,277,3.18,321,3.125,396,2.201,403,4.078,455,2.731,553,2.731,618,2.006,683,4.078,737,3.724,738,3.125,739,3.125,740,4.078,741,3.125,742,4.859,743,3.125,744,3.125,745,4.078,746,3.125,747,3.724,748,3.724,749,3.724,750,3.724,751,3.724,752,3.724,753,3.724]],["title/miscellaneous/variables.html",[618,1.481,754,3.312]],["body/miscellaneous/variables.html",[5,0.071,6,0.595,7,0.886,8,0.886,9,2.096,11,0.294,12,0.67,14,1.267,18,1.574,21,0.951,25,0.951,33,1.153,34,2.754,35,0.109,40,2.16,41,0.03,43,0.831,53,1.518,56,0.559,57,1.43,58,1.574,59,0.951,60,0.005,61,0.009,62,0.005,71,1.05,76,2.016,77,0.559,79,0.602,81,1.234,88,1.383,91,1.708,100,3.284,103,1.385,110,0.61,111,3.12,119,0.67,125,0.559,135,1.153,136,1.153,140,0.61,142,1.43,148,1.153,149,0.61,150,1.43,151,0.831,152,0.831,155,0.61,157,1.43,158,2.166,159,1.43,160,0.886,161,0.67,178,0.831,179,0.741,188,1.05,190,1.643,200,0.886,223,0.741,224,1.883,225,1.883,238,1.883,244,0.559,255,1.518,256,1.05,267,0.831,273,1.518,274,0.741,275,2.631,276,2.155,277,2.249,280,2.155,281,1.43,282,2.521,283,0.831,284,0.951,285,0.951,290,2.885,298,4.364,317,0.831,318,3.402,324,1.43,329,3.152,331,1.153,332,3.152,369,1.43,371,1.43,396,0.67,399,1.276,401,1.68,421,1.43,428,1.637,429,0.951,440,1.05,441,1.05,442,1.803,443,1.518,444,1.43,445,0.741,447,1.153,448,0.951,458,1.68,480,0.951,485,0.951,506,3.152,507,0.951,523,0.831,530,0.951,543,0.951,544,1.637,545,2.155,546,0.951,547,2.155,548,1.637,549,1.637,553,0.831,554,2.56,555,1.637,556,1.637,561,0.951,562,1.637,563,1.637,564,0.951,565,1.637,566,1.637,567,1.637,568,0.951,569,1.637,570,1.637,571,0.951,572,1.637,573,1.637,574,2.155,575,0.951,576,3.868,577,1.637,578,1.637,579,0.951,580,1.637,581,1.637,582,0.951,583,1.637,584,1.637,585,1.637,618,0.61,625,3.152,626,0.951,630,0.951,641,0.951,647,0.951,649,2.56,728,1.637,730,0.951,733,1.637,738,2.56,739,1.637,740,0.951,741,0.951,743,0.951,744,0.951,745,0.951,746,0.951,754,1.637,755,2.567,756,1.133,757,1.95,758,1.133,759,1.133,760,1.95,761,1.133,762,1.133,763,1.95,764,1.95,765,1.133,766,1.95,767,4.886,768,5.284,769,1.133,770,1.133,771,1.133,772,4.247,773,1.133,774,1.133,775,1.133,776,3.437,777,1.133,778,1.133,779,1.133,780,3.437,781,1.133,782,1.133,783,1.133,784,1.133,785,1.133,786,3.05,787,1.133,788,1.133,789,1.133,790,1.133,791,3.05,792,1.95,793,1.133,794,1.133,795,1.133,796,1.133,797,1.95,798,1.133,799,1.133,800,1.133,801,1.133,802,1.133,803,3.05,804,3.05,805,1.133,806,1.133,807,1.133,808,1.133,809,1.133,810,1.133,811,1.133,812,1.95,813,1.133,814,3.437,815,2.567,816,1.133,817,3.437,818,1.95,819,2.567,820,1.133,821,1.133,822,1.95,823,1.133,824,1.133,825,1.133,826,1.133,827,1.95,828,1.95,829,1.133,830,1.133,831,1.133,832,1.133,833,1.133,834,1.133,835,1.133,836,1.133,837,1.133,838,1.95,839,1.133,840,1.133,841,1.133,842,1.133,843,1.133,844,1.133,845,1.133,846,1.133,847,1.133,848,1.95,849,1.95,850,1.133,851,1.133,852,1.133,853,1.133,854,1.133,855,1.133,856,1.95,857,1.133,858,1.133]]],"invertedIndex":[["",{"_index":41,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["0.11.4",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":117,"title":{},"body":{"injectables/BuildConfigService.html":{},"overview.html":{}}}],["1/1",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":527,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["12.0.0",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":735,"title":{},"body":{"overview.html":{}}}],["13.0.0",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["13.0.1",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["13.0.2",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":257,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["2.0.0",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":529,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":560,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["2021",{"_index":665,"title":{},"body":{"license.html":{}}}],["28",{"_index":559,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":733,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4/4",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":526,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":734,"title":{},"body":{"overview.html":{}}}],["60",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":528,"title":{},"body":{"coverage.html":{}}}],["7.4.0",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":698,"title":{},"body":{"license.html":{}}}],["acc",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acc.add(el",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acc[keyvalue",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors",{"_index":203,"title":{},"body":{"classes/CommonLogger.html":{}}}],["action",{"_index":318,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":649,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["actions.ts",{"_index":742,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["activated",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activatedroute",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actual",{"_index":153,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/typealiases.html":{}}}],["add",{"_index":507,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["again",{"_index":264,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["aliases",{"_index":737,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":486,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["always",{"_index":371,"title":{},"body":{"interfaces/HttpLoadingState.html":{},"interfaces/RouteLoadingState.html":{},"miscellaneous/variables.html":{}}}],["amount",{"_index":293,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["and/or",{"_index":689,"title":{},"body":{"license.html":{}}}],["angular",{"_index":43,"title":{},"body":{"interfaces/BuildConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":252,"title":{},"body":{"modules/CommonNgrxModule.html":{},"modules/NgLoggerModule.html":{},"injectables/ScriptLoaderService.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":85,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interceptors/HttpLoadingInterceptor.html":{}}}],["angular/compiler",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":54,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"modules/CommonNgrxModule.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":184,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"injectables/RouteLoadingStateService.html":{},"dependencies.html":{}}}],["angularversion",{"_index":37,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["app",{"_index":655,"title":{},"body":{"index.html":{}}}],["append",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approach",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aren't",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arising",{"_index":724,"title":{},"body":{"license.html":{}}}],["around",{"_index":296,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["arr",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":224,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"miscellaneous/variables.html":{}}}],["array.from(arr.reduce((acc",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asset",{"_index":27,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["associated",{"_index":676,"title":{},"body":{"license.html":{}}}],["assumed",{"_index":44,"title":{},"body":{"interfaces/BuildConfig.html":{},"injectables/BuildConfigService.html":{}}}],["assumes",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":471,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["authors",{"_index":715,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":178,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"modules/ScriptLoaderModule.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":728,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["away",{"_index":175,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{}}}],["back",{"_index":630,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["backoff.ts",{"_index":551,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["based",{"_index":640,"title":{},"body":{"index.html":{}}}],["before",{"_index":521,"title":{},"body":{"interfaces/ScriptParams.html":{}}}],["behavior",{"_index":154,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/typealiases.html":{}}}],["behaviorsubject",{"_index":487,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["beta.35",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":181,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptParams.html":{}}}],["brad",{"_index":666,"title":{},"body":{"license.html":{}}}],["brand",{"_index":278,"title":{},"body":{"interfaces/DocumentWithId.html":{}}}],["branded",{"_index":751,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["browse",{"_index":729,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":605,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["buffersize",{"_index":116,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["build",{"_index":14,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["build_config",{"_index":57,"title":{},"body":{"interfaces/BuildConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["build_config_config",{"_index":88,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["build_config_path",{"_index":99,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["buildconfig",{"_index":1,"title":{"interfaces/BuildConfig.html":{}},"body":{"interfaces/BuildConfig.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"coverage.html":{}}}],["buildconfigconfig",{"_index":71,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["buildconfigmodule",{"_index":64,"title":{"modules/BuildConfigModule.html":{}},"body":{"modules/BuildConfigModule.html":{},"modules.html":{}}}],["buildconfigservice",{"_index":86,"title":{"injectables/BuildConfigService.html":{}},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"coverage.html":{}}}],["buildconfigwithoutpathconfig",{"_index":155,"title":{"interfaces/BuildConfigWithoutPathConfig.html":{}},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["buildconfigwithoutpathconfig).overrides",{"_index":159,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/variables.html":{}}}],["buildconfigwithpathconfig",{"_index":140,"title":{"interfaces/BuildConfigWithPathConfig.html":{}},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["buildconfigwithpathconfig).path",{"_index":157,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/variables.html":{}}}],["bulk",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c",{"_index":664,"title":{},"body":{"license.html":{}}}],["cached",{"_index":129,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["caching",{"_index":30,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["call",{"_index":131,"title":{},"body":{"injectables/BuildConfigService.html":{},"interfaces/ScriptParams.html":{}}}],["callback",{"_index":499,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["called",{"_index":246,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{}}}],["cancel",{"_index":329,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"miscellaneous/variables.html":{}}}],["cancelpayload",{"_index":333,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["candeactivate",{"_index":167,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{}}}],["candeactivate(component",{"_index":169,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["candeactivateguard",{"_index":162,"title":{"guards/CanDeactivateGuard.html":{}},"body":{"guards/CanDeactivateGuard.html":{},"coverage.html":{}}}],["change",{"_index":263,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["changes",{"_index":435,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["charge",{"_index":671,"title":{},"body":{"license.html":{}}}],["check",{"_index":484,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["child",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["child.firstchild",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["child.ts",{"_index":548,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["claim",{"_index":718,"title":{},"body":{"license.html":{}}}],["class",{"_index":90,"title":{"classes/CommonLogger.html":{}},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"modules/CommonNgrxModule.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":194,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/DeactivatableComponent.html":{}}}],["client",{"_index":23,"title":{},"body":{"interfaces/BuildConfig.html":{},"classes/CommonLogger.html":{}}}],["cluster_ngloggermodule",{"_index":391,"title":{},"body":{"modules/NgLoggerModule.html":{},"overview.html":{}}}],["cluster_ngloggermodule_providers",{"_index":392,"title":{},"body":{"modules/NgLoggerModule.html":{},"overview.html":{}}}],["cluster_scriptloadermodule",{"_index":450,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"overview.html":{}}}],["cluster_scriptloadermodule_providers",{"_index":451,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"overview.html":{}}}],["codespace",{"_index":576,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["codespace.ts",{"_index":580,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["codespace_name",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["codespacename",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["codespaces",{"_index":646,"title":{},"body":{"index.html":{}}}],["codespaces/src/lib/util/get",{"_index":575,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["codespaces/src/lib/util/is",{"_index":579,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["codespaces/src/lib/util/normalize",{"_index":582,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["codespaces=true",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["codespaceurl",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["common",{"_index":225,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"miscellaneous/variables.html":{}}}],["common_ng_router_options",{"_index":545,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["commonlogger",{"_index":193,"title":{"classes/CommonLogger.html":{}},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{}}}],["commonlogger:10",{"_index":412,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["commonlogger:18",{"_index":407,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["commonlogger:23",{"_index":408,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["commonlogger:28",{"_index":406,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["commonlogger:33",{"_index":409,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["commonloggerconfig",{"_index":206,"title":{"interfaces/CommonLoggerConfig.html":{}},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/NgLoggerModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["commonmodule",{"_index":251,"title":{},"body":{"modules/CommonNgrxModule.html":{},"modules/NgLoggerModule.html":{}}}],["commonngrxmodule",{"_index":248,"title":{"modules/CommonNgrxModule.html":{}},"body":{"modules/CommonNgrxModule.html":{},"modules.html":{}}}],["complete",{"_index":364,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["component",{"_index":172,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{}}}],["component.candeactivate",{"_index":192,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["component.ts",{"_index":266,"title":{},"body":{"interfaces/DeactivatableComponent.html":{},"coverage.html":{}}}],["component.ts:12",{"_index":271,"title":{},"body":{"interfaces/DeactivatableComponent.html":{}}}],["componentstore",{"_index":374,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["conditions",{"_index":697,"title":{},"body":{"license.html":{}}}],["config",{"_index":76,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"classes/CommonLogger.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["config.js",{"_index":15,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["config.json",{"_index":101,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["config.module.ts",{"_index":66,"title":{},"body":{"modules/BuildConfigModule.html":{}}}],["config.module.ts:13",{"_index":73,"title":{},"body":{"modules/BuildConfigModule.html":{}}}],["config.service",{"_index":87,"title":{},"body":{"modules/BuildConfigModule.html":{}}}],["config.service.ts",{"_index":96,"title":{},"body":{"injectables/BuildConfigService.html":{},"coverage.html":{}}}],["config.service.ts:23",{"_index":127,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["config.service.ts:33",{"_index":109,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["config.ts",{"_index":9,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/CommonLoggerConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["config/build",{"_index":8,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["configurable",{"_index":199,"title":{},"body":{"classes/CommonLogger.html":{}}}],["configuration",{"_index":125,"title":{},"body":{"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":75,"title":{},"body":{"modules/BuildConfigModule.html":{},"modules/NgLoggerModule.html":{}}}],["connection",{"_index":725,"title":{},"body":{"license.html":{}}}],["console",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.debug(message",{"_index":234,"title":{},"body":{"classes/CommonLogger.html":{}}}],["console.error(message",{"_index":230,"title":{},"body":{"classes/CommonLogger.html":{}}}],["console.log(message",{"_index":232,"title":{},"body":{"classes/CommonLogger.html":{}}}],["console.warn(message",{"_index":236,"title":{},"body":{"classes/CommonLogger.html":{}}}],["const",{"_index":56,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/DocumentWithId.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":106,"title":{},"body":{"injectables/BuildConfigService.html":{},"classes/CommonLogger.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"injectables/ScriptLoaderService.html":{}}}],["constructor(config",{"_index":205,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{}}}],["constructor(document",{"_index":473,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["constructor(http",{"_index":107,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["constructor(httploadingstate",{"_index":344,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["constructor(logger",{"_index":307,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["constructor(private",{"_index":314,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{}}}],["constructor(public",{"_index":228,"title":{},"body":{"classes/CommonLogger.html":{}}}],["constructor(router",{"_index":420,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["contents",{"_index":128,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["context",{"_index":32,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["contract",{"_index":722,"title":{},"body":{"license.html":{}}}],["convert",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["converted",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["copies",{"_index":691,"title":{},"body":{"license.html":{}}}],["copy",{"_index":674,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":663,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":522,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":506,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["createaction",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction(`[${prefix",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcancel",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created",{"_index":260,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["createdat",{"_index":258,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["createfailed",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createsuccess",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":26,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["currently",{"_index":483,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["customize",{"_index":145,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/typealiases.html":{}}}],["cutdown",{"_index":292,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["damages",{"_index":719,"title":{},"body":{"license.html":{}}}],["data",{"_index":147,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{}}}],["database",{"_index":261,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["date",{"_index":38,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/DateDocument.html":{}}}],["datedocument",{"_index":253,"title":{"interfaces/DateDocument.html":{}},"body":{"interfaces/DateDocument.html":{},"coverage.html":{}}}],["deactivatable",{"_index":185,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["deactivatablecomponent",{"_index":170,"title":{"interfaces/DeactivatableComponent.html":{}},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{},"coverage.html":{}}}],["deactivatablecomponent).candeactivate",{"_index":189,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["deactivate.guard.ts",{"_index":166,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"coverage.html":{}}}],["deactivate.guard.ts:12",{"_index":183,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["deactivate.guard.ts:28",{"_index":171,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["deactivate/can",{"_index":165,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"coverage.html":{}}}],["deactivate/deactivatable",{"_index":265,"title":{},"body":{"interfaces/DeactivatableComponent.html":{},"coverage.html":{}}}],["deactivated",{"_index":173,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["deal",{"_index":677,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":726,"title":{},"body":{"license.html":{}}}],["debug",{"_index":29,"title":{},"body":{"interfaces/BuildConfig.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/NgLoggerService.html":{},"miscellaneous/typealiases.html":{}}}],["debug(message",{"_index":210,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{}}}],["decorators",{"_index":410,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["default",{"_index":100,"title":{},"body":{"injectables/BuildConfigService.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":631,"title":{},"body":{"miscellaneous/functions.html":{}}}],["define",{"_index":320,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["defined",{"_index":72,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/DeactivatableComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["delete",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletecancel",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletefailed",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletesuccess",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":45,"title":{"dependencies.html":{}},"body":{"interfaces/BuildConfig.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deployment",{"_index":651,"title":{},"body":{"index.html":{}}}],["depth/retry",{"_index":624,"title":{},"body":{"miscellaneous/functions.html":{}}}],["description",{"_index":10,"title":{},"body":{"interfaces/BuildConfig.html":{},"injectables/BuildConfigService.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{}}}],["development",{"_index":639,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["digital",{"_index":658,"title":{},"body":{"index.html":{}}}],["directly",{"_index":749,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["disabled",{"_index":366,"title":{},"body":{"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{}}}],["distribute",{"_index":687,"title":{},"body":{"license.html":{}}}],["doc",{"_index":282,"title":{},"body":{"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"miscellaneous/variables.html":{}}}],["docid",{"_index":297,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["document",{"_index":256,"title":{},"body":{"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["document.ts",{"_index":255,"title":{},"body":{"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":523,"title":{},"body":{"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["documentid",{"_index":277,"title":{},"body":{"interfaces/DocumentWithId.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["documentid(id",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentid(id.id",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documents",{"_index":747,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["documentwithid",{"_index":273,"title":{"interfaces/DocumentWithId.html":{}},"body":{"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["documentwithid).id",{"_index":284,"title":{},"body":{"interfaces/DocumentWithId.html":{},"miscellaneous/variables.html":{}}}],["domains",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duplicates",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duplicates.ts",{"_index":569,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["el",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":512,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["emitter",{"_index":467,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["emittions",{"_index":240,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"injectables/RouteLoadingStateService.html":{}}}],["end",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["engine",{"_index":656,"title":{},"body":{"index.html":{}}}],["entities",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entities.reduce((acc",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":290,"title":{},"body":{"interfaces/EntityTypeParams.html":{},"miscellaneous/variables.html":{}}}],["entity[key",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entityactionfactory",{"_index":555,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["entityactions",{"_index":740,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["entitytypeparams",{"_index":286,"title":{"interfaces/EntityTypeParams.html":{}},"body":{"interfaces/EntityTypeParams.html":{},"coverage.html":{}}}],["env",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.codespace_name",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.codespaces",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":312,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["error",{"_index":123,"title":{},"body":{"injectables/BuildConfigService.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["error(message",{"_index":215,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{}}}],["errorhandler",{"_index":313,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["event",{"_index":360,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"license.html":{}}}],["everything",{"_index":463,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["example",{"_index":650,"title":{},"body":{"index.html":{}}}],["existingscriptloaded",{"_index":500,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["existingscriptloaded.element",{"_index":504,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["exponential",{"_index":629,"title":{},"body":{"miscellaneous/functions.html":{}}}],["export",{"_index":55,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["express",{"_index":706,"title":{},"body":{"license.html":{}}}],["extends",{"_index":33,"title":{},"body":{"interfaces/BuildConfig.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"miscellaneous/variables.html":{}}}],["extra",{"_index":434,"title":{},"body":{"injectables/RouteLoadingStateService.html":{},"index.html":{}}}],["extraoptions",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extraoptions's",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f5959d486294",{"_index":627,"title":{},"body":{"miscellaneous/functions.html":{}}}],["facing",{"_index":327,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["factory",{"_index":323,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["factory.ts",{"_index":554,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["failed",{"_index":625,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["failure",{"_index":330,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["failurepayload",{"_index":334,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["false",{"_index":372,"title":{},"body":{"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{}}}],["feature",{"_index":753,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":645,"title":{},"body":{"index.html":{},"license.html":{}}}],["filter",{"_index":427,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["filter((loading",{"_index":436,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["final",{"_index":547,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["firebase",{"_index":653,"title":{},"body":{"index.html":{}}}],["fired",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fitness",{"_index":711,"title":{},"body":{"license.html":{}}}],["flag",{"_index":368,"title":{},"body":{"interfaces/HttpLoadingState.html":{},"interfaces/RouteLoadingState.html":{}}}],["flows",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["folder",{"_index":105,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["following",{"_index":696,"title":{},"body":{"license.html":{}}}],["force",{"_index":370,"title":{},"body":{"interfaces/HttpLoadingState.html":{},"interfaces/RouteLoadingState.html":{}}}],["forroot",{"_index":69,"title":{},"body":{"modules/BuildConfigModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["forroot(config",{"_index":70,"title":{},"body":{"modules/BuildConfigModule.html":{},"modules/NgLoggerModule.html":{}}}],["forroot(params",{"_index":454,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["free",{"_index":670,"title":{},"body":{"license.html":{}}}],["function",{"_index":190,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":619,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["functionwithparameterstype",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["furnished",{"_index":694,"title":{},"body":{"license.html":{}}}],["gather",{"_index":98,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["gcp",{"_index":654,"title":{},"body":{"index.html":{}}}],["generally",{"_index":21,"title":{},"body":{"interfaces/BuildConfig.html":{},"miscellaneous/variables.html":{}}}],["generic",{"_index":745,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["generics",{"_index":294,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["get(this.config.path",{"_index":114,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["getcancel",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcodespacename",{"_index":578,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getfailed",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getfinalchild",{"_index":549,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gethidden",{"_index":221,"title":{},"body":{"classes/CommonLogger.html":{}}}],["getid",{"_index":563,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getsuccess",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":632,"title":{"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":50,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["github",{"_index":648,"title":{},"body":{"index.html":{}}}],["given",{"_index":148,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/ScriptLoaderModule.html":{},"miscellaneous/variables.html":{}}}],["globalerrorhandler",{"_index":303,"title":{"injectables/GlobalErrorHandler.html":{}},"body":{"injectables/GlobalErrorHandler.html":{},"coverage.html":{}}}],["granted",{"_index":669,"title":{},"body":{"license.html":{}}}],["graph",{"_index":727,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":161,"title":{"guards/CanDeactivateGuard.html":{}},"body":{"interfaces/DeactivatableComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["guards",{"_index":163,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["guardscheckend",{"_index":424,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["handleerror",{"_index":306,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["handleerror(err",{"_index":310,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["handler.ts",{"_index":305,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"coverage.html":{}}}],["handler.ts:5",{"_index":309,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["handler.ts:8",{"_index":311,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["handles",{"_index":462,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["hash",{"_index":51,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["head",{"_index":515,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["head.appendchild(scriptelement",{"_index":520,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["help",{"_index":28,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["hereby",{"_index":668,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":204,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{}}}],["holders",{"_index":716,"title":{},"body":{"license.html":{}}}],["hook",{"_index":239,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{}}}],["htt",{"_index":322,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["http",{"_index":110,"title":{},"body":{"injectables/BuildConfigService.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httpactionfactory",{"_index":556,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpactiontypeparams",{"_index":316,"title":{"interfaces/HttpActionTypeParams.html":{}},"body":{"interfaces/HttpActionTypeParams.html":{},"coverage.html":{}}}],["httpclient",{"_index":108,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["httpclientmodule",{"_index":84,"title":{},"body":{"modules/BuildConfigModule.html":{}}}],["httpevent",{"_index":353,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["httphandler",{"_index":351,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["httpinterceptor",{"_index":354,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["httploadinginterceptor",{"_index":338,"title":{"interceptors/HttpLoadingInterceptor.html":{}},"body":{"interceptors/HttpLoadingInterceptor.html":{},"coverage.html":{}}}],["httploadingstate",{"_index":347,"title":{"interfaces/HttpLoadingState.html":{}},"body":{"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"coverage.html":{}}}],["httploadingstateservice",{"_index":345,"title":{"injectables/HttpLoadingStateService.html":{}},"body":{"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"coverage.html":{}}}],["httprequest",{"_index":349,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["httpresponse",{"_index":355,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["https://${codespacename",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://medium.com/angular",{"_index":623,"title":{},"body":{"miscellaneous/functions.html":{}}}],["id",{"_index":275,"title":{},"body":{"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["id.ts",{"_index":562,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":524,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":187,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{}}}],["implied",{"_index":707,"title":{},"body":{"license.html":{}}}],["import",{"_index":52,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"modules/CommonNgrxModule.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["imports",{"_index":89,"title":{},"body":{"modules/BuildConfigModule.html":{},"modules/CommonNgrxModule.html":{},"modules/NgLoggerModule.html":{}}}],["included",{"_index":701,"title":{},"body":{"license.html":{}}}],["includes",{"_index":643,"title":{},"body":{"index.html":{}}}],["including",{"_index":680,"title":{},"body":{"license.html":{}}}],["index",{"_index":35,"title":{"index.html":{}},"body":{"interfaces/BuildConfig.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":565,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":480,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["information",{"_index":25,"title":{},"body":{"interfaces/BuildConfig.html":{},"miscellaneous/variables.html":{}}}],["inherited",{"_index":405,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["init",{"_index":443,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initial",{"_index":130,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["initscripts",{"_index":475,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["inject",{"_index":132,"title":{},"body":{"injectables/BuildConfigService.html":{},"injectables/NgLoggerService.html":{},"injectables/ScriptLoaderService.html":{}}}],["inject(build_config_config",{"_index":139,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["inject(document",{"_index":489,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["inject(ng_logger_config",{"_index":413,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["inject(ng_logger_config)@optional",{"_index":411,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["inject(script_loader_init_scripts",{"_index":491,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["inject(script_loader_loaded",{"_index":490,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["injectable",{"_index":94,"title":{"injectables/BuildConfigService.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"injectables/ScriptLoaderService.html":{}},"body":{"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["injectables",{"_index":95,"title":{},"body":{"injectables/BuildConfigService.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"injectables/ScriptLoaderService.html":{},"overview.html":{}}}],["injected",{"_index":461,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["injection",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":53,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ng_config",{"_index":59,"title":{},"body":{"interfaces/BuildConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('script_loader_init_scripts",{"_index":448,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":361,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{},"injectables/RouteLoadingStateService.html":{}}}],["instead",{"_index":750,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["intercept",{"_index":343,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["intercept(request",{"_index":348,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["interceptor",{"_index":337,"title":{"interceptors/HttpLoadingInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":339,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/BuildConfig.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"interfaces/HttpLoadingState.html":{},"interfaces/RouteLoadingState.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"interfaces/ScriptParams.html":{}},"body":{"interfaces/BuildConfig.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"interfaces/HttpLoadingState.html":{},"interfaces/RouteLoadingState.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"interfaces/HttpLoadingState.html":{},"interfaces/RouteLoadingState.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"interfaces/ScriptParams.html":{},"overview.html":{}}}],["internally",{"_index":464,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["invalid",{"_index":124,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["isbuildconfigwithoutpathconfig",{"_index":135,"title":{},"body":{"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isbuildconfigwithoutpathconfig(this.config",{"_index":120,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["isbuildconfigwithpathconfig",{"_index":136,"title":{},"body":{"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isbuildconfigwithpathconfig(this.config",{"_index":112,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["iscodespace",{"_index":581,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isdeactivatable",{"_index":168,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["isdeactivatable(component",{"_index":182,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["isdocumentwithid",{"_index":281,"title":{},"body":{"interfaces/DocumentWithId.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isdocumentwithid(id",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isindexablevalue",{"_index":567,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isindexablevalue(keyvalue",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isolated",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issues",{"_index":31,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["json.stringify(this.config",{"_index":126,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["jump",{"_index":637,"title":{},"body":{"index.html":{}}}],["key",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keyof",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keyvalue",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":705,"title":{},"body":{"license.html":{}}}],["latest",{"_index":49,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["layout",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["level",{"_index":245,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"miscellaneous/typealiases.html":{}}}],["liability",{"_index":720,"title":{},"body":{"license.html":{}}}],["liable",{"_index":717,"title":{},"body":{"license.html":{}}}],["libs/.../build",{"_index":738,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../common",{"_index":743,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../entity",{"_index":741,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../get",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../http",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../id",{"_index":739,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../is",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../ng",{"_index":744,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../normalize",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../remove",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../retry",{"_index":620,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../script",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../to",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/common",{"_index":6,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"modules/CommonNgrxModule.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/lib/models/date",{"_index":254,"title":{},"body":{"interfaces/DateDocument.html":{},"coverage.html":{}}}],["libs/common/src/lib/models/id",{"_index":274,"title":{},"body":{"interfaces/DocumentWithId.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/lib/utils/common",{"_index":195,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/common/src/lib/utils/get",{"_index":561,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/lib/utils/is",{"_index":564,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/lib/utils/remove",{"_index":568,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/lib/utils/to",{"_index":571,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/gh",{"_index":574,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/script",{"_index":440,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":661,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limitation",{"_index":681,"title":{},"body":{"license.html":{}}}],["limited",{"_index":708,"title":{},"body":{"license.html":{}}}],["list",{"_index":223,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":455,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":465,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["load(script",{"_index":477,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loaded",{"_index":149,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"miscellaneous/variables.html":{}}}],["loaded.ts",{"_index":585,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loader",{"_index":442,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loader.module.ts",{"_index":453,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["loader.module.ts:20",{"_index":456,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["loader.service",{"_index":457,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["loader.service.ts",{"_index":469,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:16",{"_index":488,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:21",{"_index":476,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:42",{"_index":482,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader.service.ts:57",{"_index":478,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loader/src/lib/script",{"_index":441,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":367,"title":{},"body":{"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{}}}],["loading.interceptor.ts",{"_index":342,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{},"coverage.html":{}}}],["loading.interceptor.ts:16",{"_index":346,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["loading.interceptor.ts:19",{"_index":352,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["loading.state",{"_index":388,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["loading.state.service",{"_index":358,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["loading.state.service.ts",{"_index":373,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{},"coverage.html":{}}}],["loading.state.service.ts:12",{"_index":381,"title":{},"body":{"injectables/HttpLoadingStateService.html":{}}}],["loading.state.service.ts:14",{"_index":377,"title":{},"body":{"injectables/HttpLoadingStateService.html":{}}}],["loading.state.service.ts:19",{"_index":384,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["loading.state.service.ts:24",{"_index":385,"title":{},"body":{"injectables/HttpLoadingStateService.html":{}}}],["loading.state.service.ts:37",{"_index":422,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["loading.state.service.ts:42",{"_index":423,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["loading.state.ts",{"_index":365,"title":{},"body":{"interfaces/HttpLoadingState.html":{},"interfaces/RouteLoadingState.html":{},"coverage.html":{}}}],["loading/http",{"_index":341,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"coverage.html":{}}}],["loading/route",{"_index":417,"title":{},"body":{"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"coverage.html":{}}}],["loads",{"_index":479,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loadscripts",{"_index":472,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["loadscripts(params",{"_index":481,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["log",{"_index":201,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/NgLoggerService.html":{},"miscellaneous/typealiases.html":{}}}],["log(message",{"_index":217,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{}}}],["logger",{"_index":200,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/GlobalErrorHandler.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["logger.module.ts",{"_index":397,"title":{},"body":{"modules/NgLoggerModule.html":{}}}],["logger.module.ts:15",{"_index":398,"title":{},"body":{"modules/NgLoggerModule.html":{}}}],["logger.service",{"_index":400,"title":{},"body":{"modules/NgLoggerModule.html":{}}}],["logger.service.ts",{"_index":402,"title":{},"body":{"injectables/NgLoggerService.html":{},"coverage.html":{}}}],["logger.service.ts:8",{"_index":404,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["logger.ts",{"_index":197,"title":{},"body":{"classes/CommonLogger.html":{},"coverage.html":{}}}],["logger.ts:10",{"_index":222,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger.ts:12",{"_index":207,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger.ts:16",{"_index":209,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger.ts:18",{"_index":216,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger.ts:23",{"_index":218,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger.ts:28",{"_index":212,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger.ts:33",{"_index":220,"title":{},"body":{"classes/CommonLogger.html":{}}}],["logger/common",{"_index":196,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["loglevels",{"_index":243,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"miscellaneous/typealiases.html":{}}}],["logs",{"_index":241,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{}}}],["look",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map",{"_index":428,"title":{},"body":{"injectables/RouteLoadingStateService.html":{},"miscellaneous/variables.html":{}}}],["map((event",{"_index":432,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["map.ts",{"_index":572,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapping",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":61,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":710,"title":{},"body":{"license.html":{}}}],["merge",{"_index":685,"title":{},"body":{"license.html":{}}}],["message",{"_index":213,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/NgLoggerService.html":{}}}],["method",{"_index":177,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["methods",{"_index":67,"title":{},"body":{"modules/BuildConfigModule.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DeactivatableComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["miscellaneous",{"_index":618,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":662,"title":{},"body":{"index.html":{},"license.html":{}}}],["mixed",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":684,"title":{},"body":{"license.html":{}}}],["module",{"_index":63,"title":{"modules/BuildConfigModule.html":{},"modules/CommonNgrxModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}},"body":{}}],["modules",{"_index":65,"title":{"modules.html":{}},"body":{"modules/BuildConfigModule.html":{},"modules/CommonNgrxModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":82,"title":{},"body":{"modules/BuildConfigModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["multiple",{"_index":19,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["name",{"_index":79,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["name.ts",{"_index":577,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["navigate",{"_index":272,"title":{},"body":{"interfaces/DeactivatableComponent.html":{}}}],["navigated",{"_index":174,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["navigating",{"_index":269,"title":{},"body":{"interfaces/DeactivatableComponent.html":{}}}],["navigation",{"_index":418,"title":{},"body":{"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{}}}],["navigationend",{"_index":425,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["navigationstart",{"_index":426,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["need",{"_index":295,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["needs",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":58,"title":{},"body":{"interfaces/BuildConfig.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":350,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":359,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["ng",{"_index":399,"title":{},"body":{"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng/src/lib/build",{"_index":7,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ng/src/lib/can",{"_index":164,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{},"coverage.html":{}}}],["ng/src/lib/http",{"_index":340,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"coverage.html":{}}}],["ng/src/lib/logger/global",{"_index":304,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"coverage.html":{}}}],["ng/src/lib/logger/ng",{"_index":396,"title":{},"body":{"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ng/src/lib/nav/common",{"_index":543,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng/src/lib/nav/get",{"_index":546,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng/src/lib/route",{"_index":416,"title":{},"body":{"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"coverage.html":{}}}],["ng/src/lib/rxjs/retry",{"_index":550,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ng_logger_config",{"_index":401,"title":{},"body":{"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngloggerconfig",{"_index":403,"title":{},"body":{"injectables/NgLoggerService.html":{},"miscellaneous/typealiases.html":{}}}],["ngloggermodule",{"_index":390,"title":{"modules/NgLoggerModule.html":{}},"body":{"modules/NgLoggerModule.html":{},"modules.html":{},"overview.html":{}}}],["ngloggerservice",{"_index":308,"title":{"injectables/NgLoggerService.html":{}},"body":{"injectables/GlobalErrorHandler.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"coverage.html":{},"overview.html":{}}}],["ngmodule",{"_index":83,"title":{},"body":{"modules/BuildConfigModule.html":{},"modules/CommonNgrxModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["ngrx",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngrx.module.ts",{"_index":250,"title":{},"body":{"modules/CommonNgrxModule.html":{}}}],["ngrx/component",{"_index":386,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{},"dependencies.html":{}}}],["ngrx/effects",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["ngrx/entity",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["ngrx/router",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["ngrx/src/lib/common",{"_index":249,"title":{},"body":{"modules/CommonNgrxModule.html":{}}}],["ngrx/src/lib/entity/entity",{"_index":553,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ngrx/src/lib/models/entity",{"_index":287,"title":{},"body":{"interfaces/EntityTypeParams.html":{},"coverage.html":{}}}],["ngrx/src/lib/util/http",{"_index":317,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngrx/store",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["nodejs",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["non",{"_index":325,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["noninfringement",{"_index":714,"title":{},"body":{"license.html":{}}}],["normalizecodespacerootpath",{"_index":584,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["normalized",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["note",{"_index":324,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"modules/ScriptLoaderModule.html":{},"miscellaneous/variables.html":{}}}],["notice",{"_index":699,"title":{},"body":{"license.html":{}}}],["null",{"_index":283,"title":{},"body":{"interfaces/DocumentWithId.html":{},"injectables/RouteLoadingStateService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nx",{"_index":300,"title":{},"body":{"interfaces/EntityTypeParams.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"index.html":{}}}],["nxworkspacetemplate",{"_index":634,"title":{},"body":{"index.html":{}}}],["oauth",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":160,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":179,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{},"interceptors/HttpLoadingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":673,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":659,"title":{},"body":{"index.html":{}}}],["of(this.config.overrides",{"_index":121,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["one",{"_index":468,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["onlog",{"_index":237,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{}}}],["optimal",{"_index":326,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["optional",{"_index":80,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"miscellaneous/functions.html":{}}}],["optionalparams",{"_index":211,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/NgLoggerService.html":{}}}],["options.ts",{"_index":544,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":505,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"license.html":{}}}],["out",{"_index":395,"title":{},"body":{"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":13,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["over",{"_index":242,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{}}}],["override",{"_index":151,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/variables.html":{}}}],["overrides",{"_index":141,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/typealiases.html":{}}}],["overview",{"_index":732,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":592,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":270,"title":{},"body":{"interfaces/DeactivatableComponent.html":{}}}],["pages",{"_index":657,"title":{},"body":{"index.html":{}}}],["param",{"_index":227,"title":{},"body":{"classes/CommonLogger.html":{}}}],["parameters",{"_index":78,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":244,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["params.scripts",{"_index":466,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["params.ts",{"_index":288,"title":{},"body":{"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{}}}],["paramsinheritancestrategy",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partial",{"_index":143,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{}}}],["particular",{"_index":712,"title":{},"body":{"license.html":{}}}],["passed",{"_index":238,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"interfaces/EntityTypeParams.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":142,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/variables.html":{}}}],["path.ts",{"_index":583,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission",{"_index":667,"title":{},"body":{"license.html":{}}}],["permit",{"_index":692,"title":{},"body":{"license.html":{}}}],["person",{"_index":672,"title":{},"body":{"license.html":{}}}],["persons",{"_index":693,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":431,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["pipe(sharereplay",{"_index":115,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["pipelines",{"_index":652,"title":{},"body":{"index.html":{}}}],["platform",{"_index":660,"title":{},"body":{"index.html":{}}}],["poccess.env",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["port",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":703,"title":{},"body":{"license.html":{}}}],["port}.githubpreview.dev",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":298,"title":{},"body":{"interfaces/EntityTypeParams.html":{},"miscellaneous/variables.html":{}}}],["preload",{"_index":498,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["prevent",{"_index":268,"title":{},"body":{"interfaces/DeactivatableComponent.html":{},"injectables/RouteLoadingStateService.html":{}}}],["private",{"_index":137,"title":{},"body":{"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"injectables/ScriptLoaderService.html":{}}}],["process.env",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects",{"_index":641,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":180,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{},"injectables/ScriptLoaderService.html":{}}}],["promise((resolve",{"_index":517,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["promise.all(scripts.map((script",{"_index":495,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["properties",{"_index":36,"title":{},"body":{"interfaces/BuildConfig.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["props",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":22,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"miscellaneous/typealiases.html":{}}}],["provided",{"_index":144,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"license.html":{}}}],["providedin",{"_index":186,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["providers",{"_index":92,"title":{},"body":{"modules/BuildConfigModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["provides",{"_index":97,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["public",{"_index":104,"title":{},"body":{"injectables/BuildConfigService.html":{},"classes/CommonLogger.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["publish",{"_index":686,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":713,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":138,"title":{},"body":{"injectables/BuildConfigService.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["record",{"_index":34,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/EntityTypeParams.html":{},"miscellaneous/variables.html":{}}}],["recordkey",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirects",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refcount",{"_index":118,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["removeduplicates",{"_index":570,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["removes",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaysubject",{"_index":459,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{}}}],["replaysubject(1",{"_index":460,"title":{},"body":{"modules/ScriptLoaderModule.html":{}}}],["repo",{"_index":642,"title":{},"body":{"index.html":{}}}],["repository",{"_index":636,"title":{},"body":{"index.html":{}}}],["represents",{"_index":12,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/DateDocument.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":331,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"miscellaneous/variables.html":{}}}],["requestpayload",{"_index":335,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["requests",{"_index":626,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["require",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":394,"title":{},"body":{"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"overview.html":{}}}],["resolve",{"_index":519,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["restriction",{"_index":679,"title":{},"body":{"license.html":{}}}],["result",{"_index":60,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":62,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":628,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retrywithbackoff",{"_index":552,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["retrywithbackoff(params",{"_index":621,"title":{},"body":{"miscellaneous/functions.html":{}}}],["return",{"_index":91,"title":{},"body":{"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/DeactivatableComponent.html":{},"interceptors/HttpLoadingInterceptor.html":{},"modules/NgLoggerModule.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["returne",{"_index":156,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{}}}],["returned",{"_index":146,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{}}}],["returns",{"_index":81,"title":{},"body":{"modules/BuildConfigModule.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/DeactivatableComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpLoadingInterceptor.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["revision",{"_index":39,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["rights",{"_index":682,"title":{},"body":{"license.html":{}}}],["root",{"_index":103,"title":{},"body":{"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/NgLoggerService.html":{},"injectables/RouteLoadingStateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["route",{"_index":429,"title":{},"body":{"injectables/RouteLoadingStateService.html":{},"miscellaneous/variables.html":{}}}],["routeloadingstate",{"_index":415,"title":{"interfaces/RouteLoadingState.html":{}},"body":{"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"coverage.html":{}}}],["routeloadingstateservice",{"_index":419,"title":{"injectables/RouteLoadingStateService.html":{}},"body":{"injectables/RouteLoadingStateService.html":{},"coverage.html":{}}}],["router",{"_index":421,"title":{},"body":{"injectables/RouteLoadingStateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":134,"title":{},"body":{"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{},"interceptors/HttpLoadingInterceptor.html":{},"injectables/RouteLoadingStateService.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":357,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["same",{"_index":46,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["scheme",{"_index":328,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["script",{"_index":17,"title":{},"body":{"interfaces/BuildConfig.html":{},"classes/CommonLogger.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["script_loader_init_scripts",{"_index":447,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["script_loader_loaded",{"_index":458,"title":{},"body":{"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scriptelement",{"_index":508,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptelement.onload",{"_index":518,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptelement.setattribute('async",{"_index":514,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptelement.setattribute('src",{"_index":513,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptloaderinitscripts",{"_index":439,"title":{"interfaces/ScriptLoaderInitScripts.html":{}},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{}}}],["scriptloaderloaded",{"_index":474,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptloaderloaded.next(true",{"_index":493,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptloadermodule",{"_index":449,"title":{"modules/ScriptLoaderModule.html":{}},"body":{"modules/ScriptLoaderModule.html":{},"modules.html":{},"overview.html":{}}}],["scriptloaderservice",{"_index":452,"title":{"injectables/ScriptLoaderService.html":{}},"body":{"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["scriptparams",{"_index":446,"title":{"interfaces/ScriptParams.html":{}},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{}}}],["scripts",{"_index":445,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["scripts.ts",{"_index":444,"title":{},"body":{"interfaces/ScriptLoaderInitScripts.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scriptsloaded",{"_index":470,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["scriptsloaded.src",{"_index":502,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["see",{"_index":485,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["sell",{"_index":690,"title":{},"body":{"license.html":{}}}],["service",{"_index":77,"title":{},"body":{"modules/BuildConfigModule.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":369,"title":{},"body":{"interfaces/HttpLoadingState.html":{},"interfaces/RouteLoadingState.html":{},"miscellaneous/variables.html":{}}}],["setdisabled",{"_index":375,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["setloading",{"_index":376,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["setting",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":74,"title":{},"body":{"modules/BuildConfigModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["shall",{"_index":700,"title":{},"body":{"license.html":{}}}],["sharereplay",{"_index":133,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["shouldn't",{"_index":748,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["side",{"_index":24,"title":{},"body":{"interfaces/BuildConfig.html":{},"classes/CommonLogger.html":{}}}],["simple",{"_index":198,"title":{},"body":{"classes/CommonLogger.html":{}}}],["situations",{"_index":20,"title":{},"body":{"interfaces/BuildConfig.html":{},"classes/CommonLogger.html":{}}}],["skip",{"_index":503,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["software",{"_index":675,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"modules/CommonNgrxModule.html":{},"interfaces/DateDocument.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"injectables/HttpLoadingStateService.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["sources",{"_index":494,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["special",{"_index":433,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["specify",{"_index":152,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/variables.html":{}}}],["src",{"_index":497,"title":{},"body":{"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{}}}],["stap",{"_index":48,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["start",{"_index":638,"title":{},"body":{"index.html":{}}}],["started",{"_index":633,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":383,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["state.disabled",{"_index":379,"title":{},"body":{"injectables/HttpLoadingStateService.html":{}}}],["state.loading",{"_index":380,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["statements",{"_index":525,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":68,"title":{},"body":{"modules/BuildConfigModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["still",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":387,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{},"dependencies.html":{}}}],["string",{"_index":40,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/ScriptParams.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":695,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":688,"title":{},"body":{"license.html":{}}}],["subscribe((loading",{"_index":437,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["substantial",{"_index":702,"title":{},"body":{"license.html":{}}}],["success",{"_index":332,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"miscellaneous/variables.html":{}}}],["successpaylod",{"_index":336,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["super",{"_index":389,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["super(config",{"_index":414,"title":{},"body":{"injectables/NgLoggerService.html":{}}}],["support",{"_index":730,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["supported",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["supporting",{"_index":644,"title":{},"body":{"index.html":{}}}],["svg",{"_index":731,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":280,"title":{},"body":{"interfaces/DocumentWithId.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":276,"title":{},"body":{"interfaces/DocumentWithId.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":622,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tap",{"_index":356,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["template",{"_index":635,"title":{},"body":{"index.html":{}}}],["template/common",{"_index":302,"title":{},"body":{"interfaces/EntityTypeParams.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{}}}],["testing",{"_index":746,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["this.config?.hidden",{"_index":226,"title":{},"body":{"classes/CommonLogger.html":{}}}],["this.document.createelement('script",{"_index":509,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.document.getelementsbytagname('head')[0",{"_index":516,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.hidden?.includes('debug",{"_index":233,"title":{},"body":{"classes/CommonLogger.html":{}}}],["this.hidden?.includes('error",{"_index":229,"title":{},"body":{"classes/CommonLogger.html":{}}}],["this.hidden?.includes('log",{"_index":231,"title":{},"body":{"classes/CommonLogger.html":{}}}],["this.hidden?.includes('warn",{"_index":235,"title":{},"body":{"classes/CommonLogger.html":{}}}],["this.http",{"_index":113,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["this.httploadingstate.setloading(false",{"_index":363,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["this.httploadingstate.setloading(true",{"_index":362,"title":{},"body":{"interceptors/HttpLoadingInterceptor.html":{}}}],["this.isdeactivatable(component",{"_index":191,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["this.load(script",{"_index":496,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.loadscripts(initscripts).then",{"_index":492,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.logger.error(err",{"_index":315,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["this.router.events",{"_index":430,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["this.scriptsloaded$.next",{"_index":510,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.scriptsloaded$.value",{"_index":511,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.scriptsloaded$.value.find",{"_index":501,"title":{},"body":{"injectables/ScriptLoaderService.html":{}}}],["this.select((state",{"_index":378,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["this.setloading(!!loading",{"_index":438,"title":{},"body":{"injectables/RouteLoadingStateService.html":{}}}],["this.updater((state",{"_index":382,"title":{},"body":{"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{}}}],["throw",{"_index":122,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["time",{"_index":47,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/CommonLoggerConfig.html":{}}}],["title_case",{"_index":299,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["todo",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token",{"_index":150,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"miscellaneous/variables.html":{}}}],["tomap",{"_index":573,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tooling",{"_index":16,"title":{},"body":{"interfaces/BuildConfig.html":{},"index.html":{}}}],["tort",{"_index":723,"title":{},"body":{"license.html":{}}}],["true",{"_index":119,"title":{},"body":{"injectables/BuildConfigService.html":{},"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{},"injectables/RouteLoadingStateService.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":752,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tslib",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/BuildConfig.html":{},"modules/BuildConfigModule.html":{},"injectables/BuildConfigService.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/DocumentWithId.html":{},"interfaces/EntityTypeParams.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/HttpActionTypeParams.html":{},"interceptors/HttpLoadingInterceptor.html":{},"interfaces/HttpLoadingState.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"interfaces/RouteLoadingState.html":{},"injectables/RouteLoadingStateService.html":{},"interfaces/ScriptLoaderInitScripts.html":{},"modules/ScriptLoaderModule.html":{},"injectables/ScriptLoaderService.html":{},"interfaces/ScriptParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":736,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedaction",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeof",{"_index":158,"title":{},"body":{"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"guards/CanDeactivateGuard.html":{},"interfaces/DocumentWithId.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["typeofkey",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeparams['prefix",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types",{"_index":321,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{},"miscellaneous/typealiases.html":{}}}],["undefined",{"_index":285,"title":{},"body":{"interfaces/DocumentWithId.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":279,"title":{},"body":{"interfaces/DocumentWithId.html":{}}}],["unknown",{"_index":188,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"interfaces/DocumentWithId.html":{},"injectables/GlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["update",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatecancel",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatedat",{"_index":259,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["updatefailed",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatesuccess",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":683,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["used",{"_index":18,"title":{},"body":{"interfaces/BuildConfig.html":{},"interfaces/BuildConfigWithPathConfig.html":{},"interfaces/BuildConfigWithoutPathConfig.html":{},"classes/CommonLogger.html":{},"interfaces/EntityTypeParams.html":{},"interfaces/HttpActionTypeParams.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":176,"title":{},"body":{"guards/CanDeactivateGuard.html":{},"interfaces/DeactivatableComponent.html":{},"interfaces/HttpActionTypeParams.html":{}}}],["usevalue",{"_index":93,"title":{},"body":{"modules/BuildConfigModule.html":{},"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{}}}],["using",{"_index":647,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["usually",{"_index":247,"title":{},"body":{"interfaces/CommonLoggerConfig.html":{},"interfaces/DateDocument.html":{},"interfaces/EntityTypeParams.html":{}}}],["utilities",{"_index":291,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["utility",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":111,"title":{},"body":{"injectables/BuildConfigService.html":{},"interfaces/DeactivatableComponent.html":{},"injectables/HttpLoadingStateService.html":{},"injectables/RouteLoadingStateService.html":{},"injectables/ScriptLoaderService.html":{},"miscellaneous/variables.html":{}}}],["value.ts",{"_index":566,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":530,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":754,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":42,"title":{},"body":{"interfaces/BuildConfig.html":{}}}],["via",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["viable",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":214,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/NgLoggerService.html":{},"interfaces/ScriptParams.html":{}}}],["warn",{"_index":202,"title":{},"body":{"classes/CommonLogger.html":{},"interfaces/CommonLoggerConfig.html":{},"injectables/NgLoggerService.html":{},"miscellaneous/typealiases.html":{}}}],["warn(message",{"_index":219,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{}}}],["warranties",{"_index":709,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":704,"title":{},"body":{"license.html":{}}}],["whether",{"_index":721,"title":{},"body":{"license.html":{}}}],["whitespace",{"_index":262,"title":{},"body":{"interfaces/DateDocument.html":{}}}],["wip",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":102,"title":{},"body":{"injectables/BuildConfigService.html":{}}}],["without",{"_index":678,"title":{},"body":{"license.html":{}}}],["work",{"_index":267,"title":{},"body":{"interfaces/DeactivatableComponent.html":{},"interfaces/HttpActionTypeParams.html":{},"miscellaneous/variables.html":{}}}],["workspace",{"_index":301,"title":{},"body":{"interfaces/EntityTypeParams.html":{},"modules/NgLoggerModule.html":{},"injectables/NgLoggerService.html":{},"index.html":{}}}],["wrap",{"_index":289,"title":{},"body":{"interfaces/EntityTypeParams.html":{}}}],["wrapper",{"_index":319,"title":{},"body":{"interfaces/HttpActionTypeParams.html":{}}}],["yes",{"_index":208,"title":{},"body":{"classes/CommonLogger.html":{},"injectables/NgLoggerService.html":{},"modules/ScriptLoaderModule.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":616,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":393,"title":{},"body":{"modules/NgLoggerModule.html":{},"modules/ScriptLoaderModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/BuildConfig.html":{"url":"interfaces/BuildConfig.html","title":"interface - BuildConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BuildConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/build-config/build-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Type that represents the output of the build-config.js tooling script.\nThis script can be used in multiple of situations, but generally is used\nto provide the client-side information on the current asset build, to help\ndebug caching issues and provide context.\n\n            \n\n            \n                Extends\n            \n            \n                    Record\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            angularVersion\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            revision\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        angularVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        angularVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The version of Angular. It is assumed all dependencies are also\nthe same version.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The time-stap of the latest build.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        revision\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        revision:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The git hash of this build.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport const BUILD_CONFIG = new InjectionToken('NG_CONFIG');\n\n/**\n * Type that represents the output of the `build-config.js` tooling script.\n * This script can be used in multiple of situations, but generally is used\n * to provide the client-side information on the current asset build, to help\n * debug caching issues and provide context.\n */\nexport interface BuildConfig extends Record {\n  /**\n   * The git hash of this build.\n   */\n  revision: string;\n  /**\n   * The version of Angular. It is assumed all dependencies are also\n   * the same version.\n   */\n  angularVersion: string;\n  /**\n   * The time-stap of the latest build.\n   */\n  date: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BuildConfigModule.html":{"url":"modules/BuildConfigModule.html","title":"module - BuildConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    BuildConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common-ng/src/lib/build-config/build-config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: BuildConfigConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/common-ng/src/lib/build-config/build-config.module.ts:13\n                \n            \n\n\n            \n                \n                    Setup configurations with the build-config-service.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                BuildConfigConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BuildConfigService } from './build-config.service';\nimport { BuildConfigConfig, BUILD_CONFIG_CONFIG } from '.';\n\n@NgModule({\n  imports: [HttpClientModule],\n})\nexport class BuildConfigModule {\n  /**\n   * Setup configurations with the build-config-service.\n   */\n  static forRoot(\n    config: BuildConfigConfig\n  ): ModuleWithProviders {\n    return {\n      ngModule: BuildConfigModule,\n      providers: [\n        BuildConfigService,\n        {\n          provide: BUILD_CONFIG_CONFIG,\n          useValue: config,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BuildConfigService.html":{"url":"injectables/BuildConfigService.html","title":"injectable - BuildConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BuildConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/build-config/build-config.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Provides an interface to gather the build config\nfrom the BUILD_CONFIG_PATH injectable.\nBy default it is assumed to be just at config.json\nwithin the root public folder.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buildConfig$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, config: BuildConfigConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/common-ng/src/lib/build-config/build-config.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        BuildConfigConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        buildConfig$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (() => {\n    if (isBuildConfigWithPathConfig(this.config))\n      return this.http\n        .get(this.config.path)\n        .pipe(shareReplay({ bufferSize: 1, refCount: true }));\n    if (isBuildConfigWithoutPathConfig(this.config))\n      return of(this.config.overrides);\n    throw new Error(\n      `Invalid build config configuration: ${JSON.stringify(this.config)}`\n    );\n  })()\n                    \n                \n                    \n                        \n                                Defined in libs/common-ng/src/lib/build-config/build-config.service.ts:23\n                        \n                    \n\n            \n                \n                    The build config file contents. Will be cached after the initial call.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { of, shareReplay } from 'rxjs';\nimport {\n  BuildConfigConfig,\n  isBuildConfigWithoutPathConfig,\n  isBuildConfigWithPathConfig,\n} from '.';\nimport { BuildConfig } from './build-config';\nimport { BUILD_CONFIG_CONFIG } from './build-config-config';\n\n/**\n * Provides an interface to gather the build config\n * from the BUILD_CONFIG_PATH injectable.\n * By default it is assumed to be just at `config.json`\n * within the root public folder.\n */\n@Injectable()\nexport class BuildConfigService {\n  /**\n   * The build config file contents. Will be cached after the initial call.\n   */\n  public buildConfig$ = (() => {\n    if (isBuildConfigWithPathConfig(this.config))\n      return this.http\n        .get(this.config.path)\n        .pipe(shareReplay({ bufferSize: 1, refCount: true }));\n    if (isBuildConfigWithoutPathConfig(this.config))\n      return of(this.config.overrides);\n    throw new Error(\n      `Invalid build config configuration: ${JSON.stringify(this.config)}`\n    );\n  })();\n\n  constructor(\n    private readonly http: HttpClient,\n    @Inject(BUILD_CONFIG_CONFIG) private readonly config: BuildConfigConfig\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BuildConfigWithPathConfig.html":{"url":"interfaces/BuildConfigWithPathConfig.html","title":"interface - BuildConfigWithPathConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BuildConfigWithPathConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/build-config/build-config-config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            overrides\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        overrides\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overrides:         Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Overrides that can be provided to customize the returned data.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The path to the file. If given, then the file will be loaded from this path.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { BuildConfig } from './build-config';\n\n/**\n * Token that represents the configuration of the \"build-config\" service.\n * Used to override the build config, and specify the path to the build config file.\n */\nexport const BUILD_CONFIG_CONFIG = new InjectionToken(\n  'BUILD_CONFIG_CONFIG'\n);\n\n/**\n * The build-config configuration. Can be used to provide overrides of\n * the config file, and customize the actual build-config service behavior.\n */\nexport type BuildConfigConfig =\n  | BuildConfigWithPathConfig\n  | BuildConfigWithoutPathConfig;\n\nexport interface BuildConfigWithPathConfig {\n  /**\n   * The path to the file. If given, then the file will be loaded from this path.\n   */\n  path: string;\n  /**\n   * Overrides that can be provided to customize the returned data.\n   */\n  overrides?: Partial;\n}\n\nexport interface BuildConfigWithoutPathConfig {\n  /**\n   * Overrides that must be provided to defined the returne data.\n   */\n  overrides?: BuildConfig;\n}\n\nexport const isBuildConfigWithPathConfig = (\n  config: BuildConfigConfig\n): config is BuildConfigWithPathConfig =>\n  !!(config as BuildConfigWithPathConfig).path &&\n  typeof (config as BuildConfigWithPathConfig).path === 'string';\n\nexport const isBuildConfigWithoutPathConfig = (\n  config: BuildConfigConfig\n): config is BuildConfigWithoutPathConfig =>\n  !!(config as BuildConfigWithoutPathConfig).overrides &&\n  typeof (config as BuildConfigWithoutPathConfig).overrides === 'object';\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BuildConfigWithoutPathConfig.html":{"url":"interfaces/BuildConfigWithoutPathConfig.html","title":"interface - BuildConfigWithoutPathConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BuildConfigWithoutPathConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/build-config/build-config-config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            overrides\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        overrides\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overrides:         BuildConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BuildConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Overrides that must be provided to defined the returne data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { BuildConfig } from './build-config';\n\n/**\n * Token that represents the configuration of the \"build-config\" service.\n * Used to override the build config, and specify the path to the build config file.\n */\nexport const BUILD_CONFIG_CONFIG = new InjectionToken(\n  'BUILD_CONFIG_CONFIG'\n);\n\n/**\n * The build-config configuration. Can be used to provide overrides of\n * the config file, and customize the actual build-config service behavior.\n */\nexport type BuildConfigConfig =\n  | BuildConfigWithPathConfig\n  | BuildConfigWithoutPathConfig;\n\nexport interface BuildConfigWithPathConfig {\n  /**\n   * The path to the file. If given, then the file will be loaded from this path.\n   */\n  path: string;\n  /**\n   * Overrides that can be provided to customize the returned data.\n   */\n  overrides?: Partial;\n}\n\nexport interface BuildConfigWithoutPathConfig {\n  /**\n   * Overrides that must be provided to defined the returne data.\n   */\n  overrides?: BuildConfig;\n}\n\nexport const isBuildConfigWithPathConfig = (\n  config: BuildConfigConfig\n): config is BuildConfigWithPathConfig =>\n  !!(config as BuildConfigWithPathConfig).path &&\n  typeof (config as BuildConfigWithPathConfig).path === 'string';\n\nexport const isBuildConfigWithoutPathConfig = (\n  config: BuildConfigConfig\n): config is BuildConfigWithoutPathConfig =>\n  !!(config as BuildConfigWithoutPathConfig).overrides &&\n  typeof (config as BuildConfigWithoutPathConfig).overrides === 'object';\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CanDeactivateGuard.html":{"url":"guards/CanDeactivateGuard.html","title":"guard - CanDeactivateGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    CanDeactivateGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                libs/common-ng/src/lib/can-deactivate/can-deactivate.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                            \n                                    Private\n                                isdeactivatable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canDeactivate\n                        \n                    \n                \n            \n            \n                \ncanDeactivate(component: DeactivatableComponent | )\n                \n            \n\n\n            \n                \n                    Defined in libs/common-ng/src/lib/can-deactivate/can-deactivate.guard.ts:28\n                \n            \n\n\n            \n                \n                    Returns if the component can be deactivated, or navigated away from by the user.\nIf the component does not have the canDeactivate method, then it automatically\nwill return true\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                DeactivatableComponent | \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isdeactivatable\n                        \n                    \n                \n            \n            \n                \n                    \n                    isdeactivatable(component)\n                \n            \n\n\n            \n                \n                    Defined in libs/common-ng/src/lib/can-deactivate/can-deactivate.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DeactivatableComponent\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { DeactivatableComponent } from './deactivatable-component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CanDeactivateGuard\n  implements CanDeactivate\n{\n  private isdeactivatable(\n    component: unknown\n  ): component is DeactivatableComponent {\n    return (\n      !!component &&\n      typeof component === 'object' &&\n      (component as DeactivatableComponent).canDeactivate &&\n      typeof (component as DeactivatableComponent).canDeactivate === 'function'\n    );\n  }\n  /**\n   * Returns if the component can be deactivated, or navigated away from by the user.\n   *\n   * If the component does not have the `canDeactivate` method, then it automatically\n   * will return true\n   */\n  canDeactivate(\n    component: DeactivatableComponent | unknown\n  ): Observable | Promise | boolean {\n    return this.isdeactivatable(component) ? component.canDeactivate() : true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonLogger.html":{"url":"classes/CommonLogger.html","title":"class - CommonLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/lib/utils/common-logger/common-logger.ts\n        \n\n\n            \n                Description\n            \n            \n                Simple but configurable logger. Should be used on the client-side\nand script situations\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hidden\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: CommonLoggerConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        CommonLoggerConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                \nconfiguration object\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommonLoggerConfig\n\n                    \n                \n                    \n                        \n                                Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:16\n                        \n                    \n\n            \n                \n                    - configuration object\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n\n                \n                    \n                        gethidden()\n                    \n                \n                            \n                                \n                                    Defined in libs/common/src/lib/utils/common-logger/common-logger.ts:10\n                                \n                            \n                    \n                        \n                                The list of hidden methods, defined from the config object.\n\n\n                                \n                                    Returns :     Array\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { CommonLoggerConfig } from './common-logger-config';\n/**\n * Simple but configurable logger. Should be used on the client-side\n * and script situations\n */\nexport class CommonLogger {\n  /**\n   * The list of hidden methods, defined from the config object.\n   */\n  public get hidden(): Array {\n    return this.config?.hidden || [];\n  }\n  /**\n   * @param config - configuration object\n   */\n  constructor(public config?: CommonLoggerConfig) {}\n\n  error(message?: unknown, ...optionalParams: unknown[]): void {\n    if (this.hidden?.includes('error')) return;\n    console.error(message, ...optionalParams);\n  }\n\n  log(message?: unknown, ...optionalParams: unknown[]): void {\n    if (this.hidden?.includes('log')) return;\n    console.log(message, ...optionalParams);\n  }\n\n  debug(message?: unknown, ...optionalParams: unknown[]): void {\n    if (this.hidden?.includes('debug')) return;\n    console.debug(message, ...optionalParams);\n  }\n\n  warn(message?: unknown, ...optionalParams: unknown[]): void {\n    if (this.hidden?.includes('warn')) return;\n    console.warn(message, ...optionalParams);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonLoggerConfig.html":{"url":"interfaces/CommonLoggerConfig.html","title":"interface - CommonLoggerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CommonLoggerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/lib/utils/common-logger/common-logger-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration object for the common-logger.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hidden\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onLog\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hidden:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of hidden methods for the common-logger.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onLog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onLog:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Function that can be passed to \"hook\" into the emittions of logs\nover time.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        type LogLevels = 'log' | 'debug' | 'warn' | 'error';\n/**\n * Configuration object for the common-logger.\n */\nexport interface CommonLoggerConfig {\n  /**\n   * List of hidden methods for the common-logger.\n   */\n  hidden?: Array;\n\n  /**\n   * Function that can be passed to \"hook\" into the emittions of logs\n   * over time.\n   *\n   */\n  onLog?: (params: {\n    /**\n     * The level called\n     */\n    level: LogLevels;\n    /**\n     * The message given, usually a string\n     */\n    message: unknown;\n    /**\n     * The optional params given\n     */\n    optionalParams: Array;\n  }) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonNgrxModule.html":{"url":"modules/CommonNgrxModule.html","title":"module - CommonNgrxModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonNgrxModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common-ngrx/src/lib/common-ngrx.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class CommonNgrxModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DateDocument.html":{"url":"interfaces/DateDocument.html","title":"interface - DateDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DateDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/lib/models/date-document.ts\n        \n\n\n            \n                Description\n            \n            \n                A date document represents an object with 2 date properties,\ncreatedAt and updatedAt.\nThese properties are usually readonly and created by the database.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DateDocument {\n  createdAt: Date;\n  updatedAt?: Date;\n}\n\n// whitespace change again, again\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeactivatableComponent.html":{"url":"interfaces/DeactivatableComponent.html","title":"interface - DeactivatableComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DeactivatableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/can-deactivate/deactivatable-component.ts\n        \n\n\n            \n                Description\n            \n            \n                For component classes that work with the CanDeactivate guard, which will\nprevent a user from navigating away from a page.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        canDeactivate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canDeactivate\n                        \n                    \n                \n            \n            \n                \ncanDeactivate()\n                \n            \n\n\n            \n                \n                    Defined in libs/common-ng/src/lib/can-deactivate/deactivatable-component.ts:12\n                \n            \n\n\n            \n                \n                    If the user can navigate away from the page, then\nreturn a true value.\n\n\n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\n/**\n * For component classes that work with the `CanDeactivate` guard, which will\n * prevent a user from navigating away from a page.\n */\nexport interface DeactivatableComponent {\n  /**\n   * If the user can navigate away from the page, then\n   * return a true value.\n   */\n  canDeactivate(): Observable | Promise | boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DocumentWithId.html":{"url":"interfaces/DocumentWithId.html","title":"interface - DocumentWithId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DocumentWithId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/lib/models/id-document.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type DocumentId = string & { readonly brand: unique symbol };\nexport const DocumentId = (documentId: string): T =>\n  documentId as T;\n\nexport interface DocumentWithId {\n  id: T;\n}\n\n/**\n * Is a document with an id\n */\nexport const isDocumentWithId = (\n  doc: DocumentWithId | unknown\n): doc is DocumentWithId =>\n  typeof doc === 'object' &&\n  doc !== null &&\n  (doc as DocumentWithId).id !== undefined;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityTypeParams.html":{"url":"interfaces/EntityTypeParams.html","title":"interface - EntityTypeParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EntityTypeParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ngrx/src/lib/models/entity-type-params.ts\n        \n\n\n            \n                Description\n            \n            \n                This type is used to wrap type-params for all entity\nutilities. This is to cutdown on the amount of\ngenerics that need to be passed around\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            doc\n                                        \n                                \n                                \n                                        \n                                            docId\n                                        \n                                \n                                \n                                        \n                                            prefix\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        doc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        doc:     Doc\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Doc\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the document\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        docId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        docId:     DocId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the document-id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prefix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prefix:     Prefix\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Prefix\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The prefix string, usually TITLE_CASE\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { DocumentWithId } from '@nx-workspace-template/common';\n\n/**\n * This type is used to wrap type-params for all entity\n * utilities. This is to cutdown on the amount of\n * generics that need to be passed around\n */\nexport interface EntityTypeParams = Record & { id: DocId }\n> {\n  /**\n   * The prefix string, usually TITLE_CASE\n   */\n  prefix: Prefix;\n  /**\n   * The type of the document\n   */\n  doc: Doc;\n  /**\n   * The type of the document-id\n   */\n  docId: DocId;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalErrorHandler.html":{"url":"injectables/GlobalErrorHandler.html","title":"injectable - GlobalErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GlobalErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/logger/global-error-handler.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: NgLoggerService)\n                    \n                \n                        \n                            \n                                Defined in libs/common-ng/src/lib/logger/global-error-handler.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        NgLoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(err)\n                \n            \n\n\n            \n                \n                    Defined in libs/common-ng/src/lib/logger/global-error-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ErrorHandler, Injectable } from '@angular/core';\nimport { NgLoggerService } from '.';\n\n@Injectable()\nexport class GlobalErrorHandler implements ErrorHandler {\n  constructor(private logger: NgLoggerService) {}\n\n  handleError(err: unknown) {\n    this.logger.error(err);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpActionTypeParams.html":{"url":"interfaces/HttpActionTypeParams.html","title":"interface - HttpActionTypeParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HttpActionTypeParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ngrx/src/lib/util/http-action-type-params.ts\n        \n\n\n            \n                Description\n            \n            \n                \"Wrapper type\", used to define\nthe types for the htt-action-factory.\nnote the types are non-optimal, but for\nthe user-facing scheme it should work.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cancel\n                                        \n                                \n                                \n                                        \n                                            failure\n                                        \n                                \n                                \n                                        \n                                            request\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cancel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancel:     CancelPayload\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CancelPayload\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        failure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        failure:     FailurePayload\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FailurePayload\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        request\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        request:     RequestPayload\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RequestPayload\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:     SuccessPaylod\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SuccessPaylod\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HttpActionTypeParams {\n  request: RequestPayload;\n  success: SuccessPaylod;\n  failure: FailurePayload;\n  cancel: CancelPayload;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpLoadingInterceptor.html":{"url":"interceptors/HttpLoadingInterceptor.html","title":"interceptor - HttpLoadingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpLoadingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/http-loading/http-loading.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpLoadingState: HttpLoadingStateService)\n                    \n                \n                        \n                            \n                                Defined in libs/common-ng/src/lib/http-loading/http-loading.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpLoadingState\n                                                  \n                                                        \n                                                                        HttpLoadingStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in libs/common-ng/src/lib/http-loading/http-loading.interceptor.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { HttpLoadingStateService } from './http-loading.state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpLoadingInterceptor implements HttpInterceptor {\n  constructor(private httpLoadingState: HttpLoadingStateService) {}\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return next.handle(request).pipe(\n      tap({\n        next: (event) =>\n          event instanceof HttpResponse &&\n          this.httpLoadingState.setLoading(true),\n        error: () => this.httpLoadingState.setLoading(false),\n        complete: () => this.httpLoadingState.setLoading(false),\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpLoadingState.html":{"url":"interfaces/HttpLoadingState.html","title":"interface - HttpLoadingState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HttpLoadingState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/http-loading/http-loading.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            loading\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Flag that can be set to force loading to always be false.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If an http request is loading or not.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface HttpLoadingState {\n  /**\n   * If an http request is loading or not.\n   */\n  loading?: boolean;\n  /**\n   * Flag that can be set to **force** loading to always be false.\n   */\n  disabled?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpLoadingStateService.html":{"url":"injectables/HttpLoadingStateService.html","title":"injectable - HttpLoadingStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpLoadingStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/http-loading/http-loading.state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ComponentStore\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                loading$\n                            \n                            \n                                    Public\n                                    Readonly\n                                setDisabled\n                            \n                            \n                                    Public\n                                    Readonly\n                                setLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/common-ng/src/lib/http-loading/http-loading.state.service.ts:14\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.select((state) =>\n    state.disabled ? false : !!state.loading\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/common-ng/src/lib/http-loading/http-loading.state.service.ts:12\n                        \n                    \n\n            \n                \n                    If the http request is loading or not.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        setDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state, disabled: boolean) => ({\n    ...state,\n    disabled,\n  }))\n                    \n                \n                    \n                        \n                                Defined in libs/common-ng/src/lib/http-loading/http-loading.state.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        setLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state, loading: boolean) => ({\n    ...state,\n    loading,\n  }))\n                    \n                \n                    \n                        \n                                Defined in libs/common-ng/src/lib/http-loading/http-loading.state.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ComponentStore } from '@ngrx/component-store';\nimport { HttpLoadingState } from './http-loading.state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpLoadingStateService extends ComponentStore {\n  /**\n   * If the http request is loading or not.\n   */\n  public readonly loading$ = this.select((state) =>\n    state.disabled ? false : !!state.loading\n  );\n  constructor() {\n    super({});\n  }\n\n  public readonly setDisabled = this.updater((state, disabled: boolean) => ({\n    ...state,\n    disabled,\n  }));\n\n  public readonly setLoading = this.updater((state, loading: boolean) => ({\n    ...state,\n    loading,\n  }));\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgLoggerModule.html":{"url":"modules/NgLoggerModule.html","title":"module - NgLoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    NgLoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NgLoggerModule\n\n\n\ncluster_NgLoggerModule_providers\n\n\n\n\nNgLoggerService\n\nNgLoggerService\n\n\n\nNgLoggerModule\n\nNgLoggerModule\n\nNgLoggerModule -->\n\nNgLoggerService->NgLoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common-ng/src/lib/logger/ng-logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NgLoggerService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: CommonLoggerConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/common-ng/src/lib/logger/ng-logger.module.ts:15\n                \n            \n\n\n            \n                \n                    Setup configurations with the ng-logger-service\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                CommonLoggerConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgLoggerService } from './ng-logger.service';\nimport { CommonLoggerConfig } from '@nx-workspace-template/common';\nimport { NG_LOGGER_CONFIG } from './ng-logger-config';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [NgLoggerService],\n})\nexport class NgLoggerModule {\n  /**\n   * Setup configurations with the ng-logger-service\n   */\n  static forRoot(\n    config: CommonLoggerConfig\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgLoggerModule,\n      providers: [\n        NgLoggerService,\n        {\n          provide: NG_LOGGER_CONFIG,\n          useValue: config,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgLoggerService.html":{"url":"injectables/NgLoggerService.html","title":"injectable - NgLoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/logger/ng-logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CommonLogger\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgLoggerConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/common-ng/src/lib/logger/ng-logger.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgLoggerConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Inherited from         CommonLogger\n\n                \n            \n            \n                \n                        Defined in         CommonLogger:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Inherited from         CommonLogger\n\n                \n            \n            \n                \n                        Defined in         CommonLogger:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Inherited from         CommonLogger\n\n                \n            \n            \n                \n                        Defined in         CommonLogger:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message?, ...optionalParams: [])\n                \n            \n\n\n            \n                \n                    Inherited from         CommonLogger\n\n                \n            \n            \n                \n                        Defined in         CommonLogger:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgLoggerConfig\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(NG_LOGGER_CONFIG)@Optional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CommonLogger\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonLogger:10\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@angular/core';\nimport { CommonLogger } from '@nx-workspace-template/common';\nimport { NgLoggerConfig, NG_LOGGER_CONFIG } from './ng-logger-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgLoggerService extends CommonLogger {\n  constructor(\n    @Inject(NG_LOGGER_CONFIG) @Optional() public config: NgLoggerConfig\n  ) {\n    super(config);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouteLoadingState.html":{"url":"interfaces/RouteLoadingState.html","title":"interface - RouteLoadingState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RouteLoadingState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/route-loading/route-loading.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            loading\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Flag that can be set to force loading to always be false.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If navigation is loading or not.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface RouteLoadingState {\n  /**\n   * If navigation is loading or not.\n   */\n  loading?: boolean;\n  /**\n   * Flag that can be set to **force** loading to always be false.\n   */\n  disabled?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RouteLoadingStateService.html":{"url":"injectables/RouteLoadingStateService.html","title":"injectable - RouteLoadingStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RouteLoadingStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common-ng/src/lib/route-loading/route-loading.state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ComponentStore\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                loading$\n                            \n                            \n                                    Public\n                                    Readonly\n                                setDisabled\n                            \n                            \n                                    Public\n                                    Readonly\n                                setLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in libs/common-ng/src/lib/route-loading/route-loading.state.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.select((state) => state.loading)\n                    \n                \n                    \n                        \n                                Defined in libs/common-ng/src/lib/route-loading/route-loading.state.service.ts:19\n                        \n                    \n\n            \n                \n                    If the navigation is loading or not.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        setDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state, disabled: boolean) => ({\n    ...state,\n    disabled,\n  }))\n                    \n                \n                    \n                        \n                                Defined in libs/common-ng/src/lib/route-loading/route-loading.state.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        setLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state, loading: boolean) => ({\n    ...state,\n    loading,\n  }))\n                    \n                \n                    \n                        \n                                Defined in libs/common-ng/src/lib/route-loading/route-loading.state.service.ts:42\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  GuardsCheckEnd,\n  NavigationEnd,\n  NavigationStart,\n  Router,\n} from '@angular/router';\nimport { ComponentStore } from '@ngrx/component-store';\nimport { filter, map } from 'rxjs';\nimport { RouteLoadingState } from './route-loading.state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RouteLoadingStateService extends ComponentStore {\n  /**\n   * If the navigation is loading or not.\n   */\n  public readonly loading$ = this.select((state) => state.loading);\n\n  constructor(private router: Router) {\n    super({});\n    this.router.events\n      .pipe(\n        map((event) => {\n          if (event instanceof NavigationStart) return true;\n          if (event instanceof NavigationEnd) return false;\n          if (event instanceof GuardsCheckEnd) return false;\n          // null is a special value to prevent emittions of extra changes\n          return null;\n        }),\n        filter((loading) => loading !== null)\n      )\n      .subscribe((loading) => this.setLoading(!!loading));\n  }\n\n  public readonly setDisabled = this.updater((state, disabled: boolean) => ({\n    ...state,\n    disabled,\n  }));\n\n  public readonly setLoading = this.updater((state, loading: boolean) => ({\n    ...state,\n    loading,\n  }));\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScriptLoaderInitScripts.html":{"url":"interfaces/ScriptLoaderInitScripts.html","title":"interface - ScriptLoaderInitScripts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScriptLoaderInitScripts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/script-loader/src/lib/script-loader-init-scripts.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            scripts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        scripts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scripts:         ScriptParams[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ScriptParams[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ScriptParams } from './script-params';\n\nexport interface ScriptLoaderInitScripts {\n  scripts: ScriptParams[];\n}\nexport const SCRIPT_LOADER_INIT_SCRIPTS =\n  new InjectionToken('SCRIPT_LOADER_INIT_SCRIPTS');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScriptLoaderModule.html":{"url":"modules/ScriptLoaderModule.html","title":"module - ScriptLoaderModule","body":"\n                   \n\n\n\n\n    Modules\n    ScriptLoaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ScriptLoaderModule\n\n\n\ncluster_ScriptLoaderModule_providers\n\n\n\n\nScriptLoaderService\n\nScriptLoaderService\n\n\n\nScriptLoaderModule\n\nScriptLoaderModule\n\nScriptLoaderModule -->\n\nScriptLoaderService->ScriptLoaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/script-loader/src/lib/script-loader.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ScriptLoaderService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(params?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/script-loader/src/lib/script-loader.module.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ScriptLoaderService } from './script-loader.service';\nimport { ScriptParams } from './script-params';\nimport { SCRIPT_LOADER_INIT_SCRIPTS } from './script-loader-init-scripts';\nimport { SCRIPT_LOADER_LOADED } from './script-loader-loaded';\nimport { ReplaySubject } from 'rxjs';\n\n@NgModule({\n  providers: [\n    ScriptLoaderService,\n    {\n      provide: SCRIPT_LOADER_LOADED,\n      useValue: new ReplaySubject(1),\n    },\n  ],\n})\nexport class ScriptLoaderModule {\n  // **note** this is injected so the script loader service is setup, but handles everything internally\n  constructor(private scriptLoaderService: ScriptLoaderService) {}\n  public static forRoot(params?: {\n    /**\n     * Scripts to load automatically.\n     */\n    scripts?: ScriptParams[];\n  }): ModuleWithProviders {\n    return {\n      ngModule: ScriptLoaderModule,\n      providers: [\n        ScriptLoaderService,\n        // setup init scripts, if given\n        params && params.scripts\n          ? {\n              provide: SCRIPT_LOADER_INIT_SCRIPTS,\n              useValue: {\n                scripts: params.scripts,\n              },\n            }\n          : [],\n        // loaded event emitter, if there is one\n        {\n          provide: SCRIPT_LOADER_LOADED,\n          useValue: new ReplaySubject(1),\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScriptLoaderService.html":{"url":"injectables/ScriptLoaderService.html","title":"injectable - ScriptLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ScriptLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/script-loader/src/lib/script-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                scriptsLoaded$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                load\n                            \n                            \n                                    Public\n                                    Async\n                                loadScripts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document, scriptLoaderLoaded: ReplaySubject, initScripts: ScriptLoaderInitScripts)\n                    \n                \n                        \n                            \n                                Defined in libs/script-loader/src/lib/script-loader.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scriptLoaderLoaded\n                                                  \n                                                        \n                                                                    ReplaySubject\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        initScripts\n                                                  \n                                                        \n                                                                        ScriptLoaderInitScripts\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                    \n                    load(script: ScriptParams)\n                \n            \n\n\n            \n                \n                    Defined in libs/script-loader/src/lib/script-loader.service.ts:57\n                \n            \n\n\n            \n                \n                    Loads the individual scripts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    script\n                                    \n                                                ScriptParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        loadScripts\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadScripts(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/script-loader/src/lib/script-loader.service.ts:42\n                \n            \n\n\n            \n                \n                    Loads the list of scripts.\nDoes not currently check to see if they are already loaded!\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        scriptsLoaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject\n  >([])\n                    \n                \n                    \n                        \n                                Defined in libs/script-loader/src/lib/script-loader.service.ts:16\n                        \n                    \n\n            \n                \n                    List of scripts already loaded\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { BehaviorSubject, ReplaySubject } from 'rxjs';\nimport {\n  ScriptLoaderInitScripts,\n  SCRIPT_LOADER_INIT_SCRIPTS,\n} from './script-loader-init-scripts';\nimport { SCRIPT_LOADER_LOADED } from './script-loader-loaded';\nimport { ScriptParams } from './script-params';\n\n@Injectable()\nexport class ScriptLoaderService {\n  /**\n   * List of scripts already loaded\n   */\n  public scriptsLoaded$ = new BehaviorSubject\n  >([]);\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n\n    @Inject(SCRIPT_LOADER_LOADED)\n    scriptLoaderLoaded: ReplaySubject,\n\n    @Inject(SCRIPT_LOADER_INIT_SCRIPTS)\n    @Optional()\n    initScripts: ScriptLoaderInitScripts\n  ) {\n    if (initScripts) {\n      this.loadScripts(initScripts).then(() => scriptLoaderLoaded.next(true));\n    } else {\n      scriptLoaderLoaded.next(true);\n    }\n  }\n  /**\n   * Loads the list of scripts.\n   * **Does not currently check to see if they are already loaded!**\n   */\n  public async loadScripts(params: {\n    /**\n     * The list of script sources\n     */\n    scripts: ScriptParams[];\n  }): Promise {\n    const { scripts } = params;\n    if (!scripts) {\n      return [];\n    }\n    return Promise.all(scripts.map((script) => this.load(script)));\n  }\n  /**\n   * Loads the individual scripts\n   */\n  private async load(script: ScriptParams): Promise {\n    const { src, async, preLoad, callback } = script;\n    const existingScriptLoaded = this.scriptsLoaded$.value.find(\n      (scriptsLoaded) => scriptsLoaded.src === src\n    );\n    if (existingScriptLoaded) {\n      // if the script is already loaded, skip it;\n      return existingScriptLoaded.element;\n    }\n    // otherwise, create and add it\n    const scriptElement = this.document.createElement('script');\n    this.scriptsLoaded$.next([\n      ...this.scriptsLoaded$.value,\n      {\n        element: scriptElement,\n        src,\n      },\n    ]);\n    if (typeof preLoad === 'function') {\n      preLoad();\n    }\n    scriptElement.setAttribute('src', src);\n    scriptElement.setAttribute('async', '' + async);\n    const head = this.document.getElementsByTagName('head')[0];\n    const promise = new Promise((resolve) => (scriptElement.onload = resolve));\n    head.appendChild(scriptElement);\n    return promise\n      .then(() => {\n        if (typeof callback === 'function') {\n          callback();\n        }\n        return;\n      })\n      .then(() => scriptElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScriptParams.html":{"url":"interfaces/ScriptParams.html","title":"interface - ScriptParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScriptParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/script-loader/src/lib/script-params.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            async\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            callback\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            preLoad\n                                        \n                                \n                                \n                                        \n                                            src\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        async\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        async:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Function to call after the script is loaded\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preLoad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preLoad:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Function to call BEFORE\nthe script is loaded\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ScriptParams {\n  src: string;\n  async?: boolean;\n  /**\n   * Function to call BEFORE\n   * the script is loaded\n   */\n  preLoad?: () => void;\n  /**\n   * Function to call after the script is loaded\n   */\n  callback?: () => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                libs/common-ng/src/lib/build-config/build-config-config.ts\n            \n            interface\n            BuildConfigWithoutPathConfig\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/build-config/build-config-config.ts\n            \n            interface\n            BuildConfigWithPathConfig\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/build-config/build-config-config.ts\n            \n            variable\n            BUILD_CONFIG_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/build-config/build-config-config.ts\n            \n            variable\n            isBuildConfigWithoutPathConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/build-config/build-config-config.ts\n            \n            variable\n            isBuildConfigWithPathConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/build-config/build-config.service.ts\n            \n            injectable\n            BuildConfigService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/build-config/build-config.ts\n            \n            interface\n            BuildConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/build-config/build-config.ts\n            \n            variable\n            BUILD_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/can-deactivate/can-deactivate.guard.ts\n            \n            guard\n            CanDeactivateGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/can-deactivate/deactivatable-component.ts\n            \n            interface\n            DeactivatableComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/http-loading/http-loading.interceptor.ts\n            \n            interceptor\n            HttpLoadingInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/http-loading/http-loading.state.service.ts\n            \n            injectable\n            HttpLoadingStateService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/http-loading/http-loading.state.ts\n            \n            interface\n            HttpLoadingState\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/logger/global-error-handler.ts\n            \n            injectable\n            GlobalErrorHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/logger/ng-logger-config.ts\n            \n            variable\n            NG_LOGGER_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/logger/ng-logger.service.ts\n            \n            injectable\n            NgLoggerService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/nav/common-ng-router-options.ts\n            \n            variable\n            COMMON_NG_ROUTER_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/nav/get-final-child.ts\n            \n            variable\n            getFinalChild\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/route-loading/route-loading.state.service.ts\n            \n            injectable\n            RouteLoadingStateService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/route-loading/route-loading.state.ts\n            \n            interface\n            RouteLoadingState\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                libs/common-ng/src/lib/rxjs/retry-with-backoff.ts\n            \n            function\n            retryWithBackOff\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common-ngrx/src/lib/entity/entity-action-factory.ts\n            \n            variable\n            entityActionFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common-ngrx/src/lib/models/entity-type-params.ts\n            \n            interface\n            EntityTypeParams\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                libs/common-ngrx/src/lib/util/http-action-factory.ts\n            \n            variable\n            httpActionFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common-ngrx/src/lib/util/http-action-type-params.ts\n            \n            interface\n            HttpActionTypeParams\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                libs/common/src/lib/models/date-document.ts\n            \n            interface\n            DateDocument\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/common/src/lib/models/id-document.ts\n            \n            interface\n            DocumentWithId\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/lib/models/id-document.ts\n            \n            variable\n            DocumentId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/lib/models/id-document.ts\n            \n            variable\n            isDocumentWithId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common/src/lib/utils/common-logger/common-logger-config.ts\n            \n            interface\n            CommonLoggerConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/common/src/lib/utils/common-logger/common-logger.ts\n            \n            class\n            CommonLogger\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                libs/common/src/lib/utils/get-id.ts\n            \n            variable\n            getId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common/src/lib/utils/is-indexable-value.ts\n            \n            variable\n            isIndexableValue\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common/src/lib/utils/remove-duplicates.ts\n            \n            variable\n            removeDuplicates\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/common/src/lib/utils/to-map.ts\n            \n            variable\n            toMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/gh-codespaces/src/lib/util/get-codespace-name.ts\n            \n            variable\n            getCodespaceName\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/gh-codespaces/src/lib/util/is-codespace.ts\n            \n            variable\n            isCodespace\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/gh-codespaces/src/lib/util/normalize-codespace-root-path.ts\n            \n            variable\n            normalizeCodespaceRootPath\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/script-loader/src/lib/script-loader-init-scripts.ts\n            \n            interface\n            ScriptLoaderInitScripts\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/script-loader/src/lib/script-loader-init-scripts.ts\n            \n            variable\n            SCRIPT_LOADER_INIT_SCRIPTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/script-loader/src/lib/script-loader-loaded.ts\n            \n            variable\n            SCRIPT_LOADER_LOADED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/script-loader/src/lib/script-loader.service.ts\n            \n            injectable\n            ScriptLoaderService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                libs/script-loader/src/lib/script-params.ts\n            \n            interface\n            ScriptParams\n            \n                40 %\n                (2/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^13.0.0\n        \n            @angular/cdk : ^13.0.2\n        \n            @angular/common : ^13.0.0\n        \n            @angular/compiler : ^13.0.0\n        \n            @angular/core : ^13.0.0\n        \n            @angular/flex-layout : ^12.0.0-beta.35\n        \n            @angular/forms : ^13.0.0\n        \n            @angular/material : ^13.0.2\n        \n            @angular/platform-browser : ^13.0.0\n        \n            @angular/platform-browser-dynamic : ^13.0.0\n        \n            @angular/router : ^13.0.0\n        \n            @ngrx/component : ^13.0.1\n        \n            @ngrx/component-store : ^13.0.2\n        \n            @ngrx/effects : ^13.0.1\n        \n            @ngrx/entity : ^13.0.1\n        \n            @ngrx/router-store : ^13.0.1\n        \n            @ngrx/store : ^13.0.1\n        \n            @ngrx/store-devtools : ^13.0.1\n        \n            rxjs : ~7.4.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            retryWithBackOff   (libs/.../retry-with-backoff.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/common-ng/src/lib/rxjs/retry-with-backoff.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        retryWithBackOff\n                        \n                    \n                \n            \n            \n                \nretryWithBackOff(params?)\n                \n            \n\n\n\n\n            \n                \n                    Taken from:\nhttps://medium.com/angular-in-depth/retry-failed-http-requests-in-angular-f5959d486294\nRetry with exponential back-off.\nDefaults\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNxWorkspaceTemplate\nThis is a template repository that can be used to jump start\ndevelopment on nx-workspace based projects.\nMost tooling can be used as-is, this repo only includes extra\nsupporting files for codespaces\ndevelopment, using github-actions, with example deployment pipelines\nfor firebase, GCP App Engine, github pages and digital-ocean app platform.\nLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 Brad\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        BuildConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonNgrxModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgLoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScriptLoaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NgLoggerModule\n\n\n\ncluster_NgLoggerModule_providers\n\n\n\ncluster_ScriptLoaderModule\n\n\n\ncluster_ScriptLoaderModule_providers\n\n\n\n\nNgLoggerService\n\nNgLoggerService\n\n\n\nNgLoggerModule\n\nNgLoggerModule\n\nNgLoggerModule -->\n\nNgLoggerService->NgLoggerModule\n\n\n\n\n\nScriptLoaderService\n\nScriptLoaderService\n\n\n\nScriptLoaderModule\n\nScriptLoaderModule\n\nScriptLoaderModule -->\n\nScriptLoaderService->ScriptLoaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BuildConfigConfig   (libs/.../build-config-config.ts)\n                        \n                        \n                            DocumentId   (libs/.../id-document.ts)\n                        \n                        \n                            EntityActions   (libs/.../entity-actions.ts)\n                        \n                        \n                            LogLevels   (libs/.../common-logger-config.ts)\n                        \n                        \n                            NgLoggerConfig   (libs/.../ng-logger-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/common-ng/src/lib/build-config/build-config-config.ts\n    \n    \n        \n            \n                \n                    \n                    BuildConfigConfig\n                \n            \n            \n                \n                    The build-config configuration. Can be used to provide overrides of\nthe config file, and customize the actual build-config service behavior.\n\n                \n            \n            \n                \n                        BuildConfigWithPathConfig | BuildConfigWithoutPathConfig\n\n                \n            \n        \n    \n    libs/common/src/lib/models/id-document.ts\n    \n    \n        \n            \n                \n                    \n                    DocumentId\n                \n            \n            \n                \n                    Generic document-id. Used for generic testing and documents.\nYou shouldn't use this directly, instead use\nbranded types.\nThis is also a TS-level feature\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/common-ngrx/src/lib/entity/entity-actions.ts\n    \n    \n        \n            \n                \n                    \n                    EntityActions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    libs/common/src/lib/utils/common-logger/common-logger-config.ts\n    \n    \n        \n            \n                \n                    \n                    LogLevels\n                \n            \n            \n                \n                        \"log\" | \"debug\" | \"warn\" | \"error\"\n\n                \n            \n        \n    \n    libs/common-ng/src/lib/logger/ng-logger-config.ts\n    \n    \n        \n            \n                \n                    \n                    NgLoggerConfig\n                \n            \n            \n                \n                            CommonLoggerConfig\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BUILD_CONFIG   (libs/.../build-config.ts)\n                        \n                        \n                            BUILD_CONFIG_CONFIG   (libs/.../build-config-config.ts)\n                        \n                        \n                            COMMON_NG_ROUTER_OPTIONS   (libs/.../common-ng-router-options.ts)\n                        \n                        \n                            DocumentId   (libs/.../id-document.ts)\n                        \n                        \n                            entityActionFactory   (libs/.../entity-action-factory.ts)\n                        \n                        \n                            getCodespaceName   (libs/.../get-codespace-name.ts)\n                        \n                        \n                            getFinalChild   (libs/.../get-final-child.ts)\n                        \n                        \n                            getId   (libs/.../get-id.ts)\n                        \n                        \n                            httpActionFactory   (libs/.../http-action-factory.ts)\n                        \n                        \n                            isBuildConfigWithoutPathConfig   (libs/.../build-config-config.ts)\n                        \n                        \n                            isBuildConfigWithPathConfig   (libs/.../build-config-config.ts)\n                        \n                        \n                            isCodespace   (libs/.../is-codespace.ts)\n                        \n                        \n                            isDocumentWithId   (libs/.../id-document.ts)\n                        \n                        \n                            isIndexableValue   (libs/.../is-indexable-value.ts)\n                        \n                        \n                            NG_LOGGER_CONFIG   (libs/.../ng-logger-config.ts)\n                        \n                        \n                            normalizeCodespaceRootPath   (libs/.../normalize-codespace-root-path.ts)\n                        \n                        \n                            removeDuplicates   (libs/.../remove-duplicates.ts)\n                        \n                        \n                            SCRIPT_LOADER_INIT_SCRIPTS   (libs/.../script-loader-init-scripts.ts)\n                        \n                        \n                            SCRIPT_LOADER_LOADED   (libs/.../script-loader-loaded.ts)\n                        \n                        \n                            toMap   (libs/.../to-map.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/common-ng/src/lib/build-config/build-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BUILD_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('NG_CONFIG')\n                    \n                \n\n\n        \n    \n\n    libs/common-ng/src/lib/build-config/build-config-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BUILD_CONFIG_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'BUILD_CONFIG_CONFIG'\n)\n                    \n                \n\n            \n                \n                    Token that represents the configuration of the \"build-config\" service.\nUsed to override the build config, and specify the path to the build config file.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBuildConfigWithoutPathConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  config: BuildConfigConfig\n): config is BuildConfigWithoutPathConfig =>\n  !!(config as BuildConfigWithoutPathConfig).overrides &&\n  typeof (config as BuildConfigWithoutPathConfig).overrides === 'object'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBuildConfigWithPathConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  config: BuildConfigConfig\n): config is BuildConfigWithPathConfig =>\n  !!(config as BuildConfigWithPathConfig).path &&\n  typeof (config as BuildConfigWithPathConfig).path === 'string'\n                    \n                \n\n\n        \n    \n\n    libs/common-ng/src/lib/nav/common-ng-router-options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        COMMON_NG_ROUTER_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExtraOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  paramsInheritanceStrategy: 'always',\n}\n                    \n                \n\n            \n                \n                    Common settings that should be activated for all Angular projects.\n\n                \n            \n\n        \n    \n\n    libs/common/src/lib/models/id-document.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DocumentId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (documentId: string): T =>\n  documentId as T\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDocumentWithId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  doc: DocumentWithId | unknown\n): doc is DocumentWithId =>\n  typeof doc === 'object' &&\n  doc !== null &&\n  (doc as DocumentWithId).id !== undefined\n                    \n                \n\n            \n                \n                    Is a document with an id\n\n                \n            \n\n        \n    \n\n    libs/common-ngrx/src/lib/entity/entity-action-factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        entityActionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  prefix: TypeParams['prefix']\n): EntityActions => ({\n  get: createAction(\n    `[${prefix}] Get`,\n    props()\n  ),\n  getSuccess: createAction(\n    `[${prefix}] Get Success`,\n    props()\n  ),\n  getFailed: createAction(\n    `[${prefix}] Get Failed`,\n    props()\n  ),\n  getCancel: createAction(`[${prefix}] Get Cancel`),\n\n  create: createAction(\n    `[${prefix}] Create`,\n    props;\n    }>()\n  ),\n  createSuccess: createAction(\n    `[${prefix}] Create Success`,\n    props()\n  ),\n  createFailed: createAction(\n    `[${prefix}] Create Failed`,\n    props()\n  ),\n  createCancel: createAction(`[${prefix}] Create Cancel`),\n\n  update: createAction(\n    `[${prefix}] Update`,\n    props()\n  ),\n  updateSuccess: createAction(\n    `[${prefix}] Update Success`,\n    props()\n  ),\n  updateFailed: createAction(\n    `[${prefix}] Update Failed`,\n    props()\n  ),\n  updateCancel: createAction(`[${prefix}] Update Cancel`),\n\n  delete: createAction(\n    `[${prefix}] Delete`,\n    props()\n  ),\n  deleteSuccess: createAction(\n    `[${prefix}] Delete Success`,\n    props()\n  ),\n  deleteFailed: createAction(\n    `[${prefix}] Delete Failed`,\n    props()\n  ),\n  deleteCancel: createAction(`[${prefix}] Delete Cancel`),\n  // TODO: add bulk actions\n})\n                    \n                \n\n            \n                \n                    Returns a list of common actions for an entity.\n\n                \n            \n\n        \n    \n\n    libs/gh-codespaces/src/lib/util/get-codespace-name.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCodespaceName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (env: Record): string =>\n  env.CODESPACE_NAME\n                    \n                \n\n            \n                \n                    Returns the codespace name from the env, should be passed\nthe process.env from nodejs.\n\n                \n            \n\n        \n    \n\n    libs/common-ng/src/lib/nav/get-final-child.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getFinalChild\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (root: ActivatedRoute) => {\n  let child = root;\n  while (child.firstChild) child = child.firstChild;\n  return child;\n}\n                    \n                \n\n            \n                \n                    Function that can be used to get the \"final child\" in the route.\nCan be mixed with the ExtraOptions's paramsInheritanceStrategy \"always\"\nsetting passed to the RouterModule.\nCommon settings are available via COMMON_NG_ROUTER_OPTIONS\n\n                \n            \n\n        \n    \n\n    libs/common/src/lib/utils/get-id.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  id: string | DocumentId | DocumentWithId\n): T | '' => {\n  if (!id) {\n    return '';\n  }\n  if (typeof id === 'string') {\n    return DocumentId(id);\n  }\n  if (isDocumentWithId(id)) {\n    return DocumentId(id.id);\n  }\n  return '';\n}\n                    \n                \n\n            \n                \n                    Utility function to get id information\nnote assumes the id of the document is\n\n                \n            \n\n        \n    \n\n    libs/common-ngrx/src/lib/util/http-action-factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpActionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ({\n  prefix,\n  action,\n}: {\n  prefix: TypeParams['prefix'];\n  action: Action;\n}): [\n  FunctionWithParametersType &\n    TypedAction,\n  FunctionWithParametersType &\n    TypedAction,\n  FunctionWithParametersType &\n    TypedAction,\n  FunctionWithParametersType &\n    TypedAction\n] => [\n  createAction(`[${prefix}] ${action} Request`, props()),\n  createAction(`[${prefix}] ${action} Success`, props()),\n  createAction(`[${prefix}] ${action} Failed`, props()),\n  createAction(`[${prefix}] ${action} Cancel`, props()),\n]\n                    \n                \n\n            \n                \n                    Function that that returns 4 actions.\n\n\"request\" action\n\"success\" action\n\"Failed\" action\n\"cancel\" action\n\nThese 4 can be used to create other ngrx actions flows, and aren't only\nisolated to just HTTP requests.\n\n                \n            \n\n        \n    \n\n    libs/gh-codespaces/src/lib/util/is-codespace.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isCodespace\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (env: Record) =>\n  env.CODESPACES === 'true'\n                    \n                \n\n            \n                \n                    Returns if we are in a codespace from the env, which\nshould be passed the poccess.env, as we look if\nthere is an environment variable of CODESPACES=true\n\n                \n            \n\n        \n    \n\n    libs/common/src/lib/utils/is-indexable-value.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isIndexableValue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  value: unknown\n): value is string | symbol | number =>\n  typeof value === 'string' ||\n  typeof value === 'symbol' ||\n  typeof value === 'number'\n                    \n                \n\n            \n                \n                    Type-guard that can be used on individual entities, to verify\nthey can be a \"key\" in a Record<> type.\n\n                \n            \n\n        \n    \n\n    libs/common-ng/src/lib/logger/ng-logger-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NG_LOGGER_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'NG_LOGGER_CONFIG'\n)\n                    \n                \n\n\n        \n    \n\n    libs/gh-codespaces/src/lib/util/normalize-codespace-root-path.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        normalizeCodespaceRootPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ({\n  codespaceName,\n  port,\n}: {\n  /**\n   * The name of the codespace, available from the environment variables\n   * in a codespace via `CODESPACE_NAME`\n   */\n  codespaceName: string;\n  /**\n   * The port number we are to append to the end of the codespaceURL.\n   */\n  port: number | string;\n}) => `https://${codespaceName}-${port}.githubpreview.dev/`\n                    \n                \n\n            \n                \n                    Returns the normalized codespace path, from the given params.\nGenerally used on the back-end for oauth redirects, will require\nwork with the console documentation for supported domains.\nnote still a WIP and needs testing to see if this is a viable\napproach to support oauth redirects in a codespace.\n\n                \n            \n\n        \n    \n\n    libs/common/src/lib/utils/remove-duplicates.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        removeDuplicates\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (arr: Array): Array => {\n  if (!arr) {\n    return [];\n  }\n  return Array.from(arr.reduce((acc, el) => acc.add(el), new Set()));\n}\n                    \n                \n\n            \n                \n                    Removes duplicates using a set\n\n                \n            \n\n        \n    \n\n    libs/script-loader/src/lib/script-loader-init-scripts.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SCRIPT_LOADER_INIT_SCRIPTS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('SCRIPT_LOADER_INIT_SCRIPTS')\n                    \n                \n\n\n        \n    \n\n    libs/script-loader/src/lib/script-loader-loaded.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SCRIPT_LOADER_LOADED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>(\n  'SCRIPT_LOADER_LOADED'\n)\n                    \n                \n\n            \n                \n                    Injection token of the observable fired when init scripts are loaded\n\n                \n            \n\n        \n    \n\n    libs/common/src/lib/utils/to-map.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toMap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ,\n  Key extends keyof Entity,\n  TypeOfKey extends string\n>(\n  entities: Entity[],\n  key?: Key\n): Record => {\n  type RecordKey = (Entity[Key] & string) | symbol | number;\n  if (!entities) return {} as Record;\n\n  return entities.reduce((acc, entity) => {\n    const keyValue = entity[key || 'id'];\n    if (isIndexableValue(keyValue)) acc[keyValue as RecordKey] = entity;\n    return acc;\n  }, {} as Record);\n}\n                    \n                \n\n            \n                \n                    Generic map function used to convert an array to\na map with the given key. All ids are automatically converted to ids\nin the return mapping\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
