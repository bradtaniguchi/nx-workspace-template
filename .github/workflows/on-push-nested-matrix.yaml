name: on-push
on:
  # run on push
  push:
    branches:
      - '**'

jobs:
  # Generates matrixes for tasks to perform for different types of tasks.
  # This needs to be done first, before executing the nested
  # job types, which then can be batched.
  gen-matrixes:
    name: gen matrixes
    timeout-minutes: 5
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    outputs:
      LINT_TASKS: ${{ steps.gen-lint-matrix.outputs.LINT_TASKS }}
      TEST_TASKS: ${{ steps.gen-test-matrix.outputs.TEST_TASKS }}
      BUILD_TASKS: ${{ steps.gen-build-matrix.outputs.BUILD_TASKS }}
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
        with:
          # get lfs items
          lfs: false
          # fetch all commits, slower but required to pass to nx
          fetch-depth: 0
      - name: setup node
        uses: actions/setup-node@v2
        with:
          node-version: '16.10.0'
          cache: 'npm'
      - name: cache dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts
      - name: gen lint matrix
        id: gen-lint-matrix
        run: |
          TASKS=$(nx workspace-generator gh-affected --target=lint --head=$GITHUB_REF --batch=6)
          echo "::set-output name=LINT_TASKS::$LINT_TASKS"
      - name: gen test matrix
        id: gen-test-matrix
        run: |
          TASKS=$(nx workspace-generator gh-affected --target=test --head=$GITHUB_REF --batch=4)
          echo "::set-output name=TEST_TASKS::$TEST_TASKS"
      - name: gen build matrix
        id: gen-build-matrix
        run: |
          TASKS=$(nx workspace-generator gh-affected --target=build --head=$GITHUB_REF --batch=2)
          echo "::set-output name=BUILD_TASKS::$BUILD_TASKS"

  # Prints the matrix output, useful for debugging
  # See the bottom of this file for an example printout.
  print-matrix:
    name: print matrix
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [gen-matrixes]
    steps:
      - name: print lint matrix
        run: echo "${{ needs.gen-matrixes.outputs.LINT_TASKS }}"
      - name: print test matrix
        run: echo "${{ needs.gen-matrixes.outputs.TEST_TASKS }}"
      - name: print build matrix
        run: echo "${{ needs.gen-matrixes.outputs.BUILD_TASKS }}"
