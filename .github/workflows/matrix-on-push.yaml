name: matrix-on-push
on:
  # run on push
  push:
    branches:
      - '**'

jobs:
  gen-matrix:
    name: gen matrix
    timeout-minutes: 10
    # do not run this job if skip ci is in commit message
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    outputs:
      TASKS: ${{ steps.gen-matrix.outputs.TASKS }}
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
        with:
          # get lfs items
          lfs: true
          # fetch all commits, slower but required to pass to nx
          fetch-depth: 0
      - name: setup node
        uses: actions/setup-node@v2
        with:
          node-version: '16.10.0'
          cache: 'npm'
      - name: cache dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts
      - name: install global nx
        run: npm install -g @nrwl/cli
      - name: nx:report
        run: nx report
      - name: nx:workspace-lint
        run: nx workspace-lint
      - name: gen matrix
        id: gen-matrix
        run: |
          TASKS=$(node ./tools/nrwl-utils/gen-matrix.js $GITHUB_REF)
          echo "::set-output name=TASKS::$TASKS"

  print-matrix:
    name: print matrix
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [gen-matrix]
    steps:
      - name: print matrix
        run: echo "${{ needs.gen-matrix.outputs.TASKS }}"

  core-pipeline:
    name: core pipeline
    runs-on: ubuntu-latest
    needs:
      - gen-matrix
      - print-matrix
    strategy:
      matrix:
        TASK: ${{ fromJSON(needs.gen-matrix.outputs.TASKS) }}
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
        with:
          # get lfs items
          lfs: true
          # fetch all commits, slower but required to pass to nx
          fetch-depth: 0
      - name: setup node
        uses: actions/setup-node@v2
        with:
          node-version: '16.10.0'
          cache: 'npm'
      - name: cache dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts
      - name: print task
        run: |
          echo "${{ matrix.TASK }}"
      # TODO: execute task
